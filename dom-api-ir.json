{
  "AddEventListenerOptions": [
    {
      "interface": "AddEventListenerOptions",
      "kind": "event",
      "name": "once",
      "type": "boolean"
    },
    {
      "interface": "AddEventListenerOptions",
      "kind": "property",
      "name": "passive",
      "type": "boolean"
    },
    {
      "interface": "AddEventListenerOptions",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal"
    }
  ],
  "AddressErrors": [
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "addressLine",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "city",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "country",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "dependentLocality",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "organization",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "phone",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "postalCode",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "recipient",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "region",
      "type": "string"
    },
    {
      "interface": "AddressErrors",
      "kind": "property",
      "name": "sortingCode",
      "type": "string"
    }
  ],
  "AesCbcParams": [
    {
      "interface": "AesCbcParams",
      "kind": "property",
      "name": "iv",
      "type": "BufferSource"
    }
  ],
  "AesCtrParams": [
    {
      "interface": "AesCtrParams",
      "kind": "property",
      "name": "counter",
      "type": "BufferSource"
    },
    {
      "interface": "AesCtrParams",
      "kind": "property",
      "name": "length",
      "type": "number"
    }
  ],
  "AesDerivedKeyParams": [
    {
      "interface": "AesDerivedKeyParams",
      "kind": "property",
      "name": "length",
      "type": "number"
    }
  ],
  "AesGcmParams": [
    {
      "interface": "AesGcmParams",
      "kind": "property",
      "name": "additionalData",
      "type": "BufferSource"
    },
    {
      "interface": "AesGcmParams",
      "kind": "property",
      "name": "iv",
      "type": "BufferSource"
    },
    {
      "interface": "AesGcmParams",
      "kind": "property",
      "name": "tagLength",
      "type": "number"
    }
  ],
  "AesKeyAlgorithm": [
    {
      "interface": "AesKeyAlgorithm",
      "kind": "property",
      "name": "length",
      "type": "number"
    }
  ],
  "AesKeyGenParams": [
    {
      "interface": "AesKeyGenParams",
      "kind": "property",
      "name": "length",
      "type": "number"
    }
  ],
  "Algorithm": [
    {
      "interface": "Algorithm",
      "kind": "property",
      "name": "name",
      "type": "string"
    }
  ],
  "AnalyserOptions": [
    {
      "interface": "AnalyserOptions",
      "kind": "property",
      "name": "fftSize",
      "type": "number"
    },
    {
      "interface": "AnalyserOptions",
      "kind": "property",
      "name": "maxDecibels",
      "type": "number"
    },
    {
      "interface": "AnalyserOptions",
      "kind": "property",
      "name": "minDecibels",
      "type": "number"
    },
    {
      "interface": "AnalyserOptions",
      "kind": "property",
      "name": "smoothingTimeConstant",
      "type": "number"
    }
  ],
  "AnimationEventInit": [
    {
      "interface": "AnimationEventInit",
      "kind": "property",
      "name": "animationName",
      "type": "string"
    },
    {
      "interface": "AnimationEventInit",
      "kind": "property",
      "name": "elapsedTime",
      "type": "number"
    },
    {
      "interface": "AnimationEventInit",
      "kind": "property",
      "name": "pseudoElement",
      "type": "string"
    }
  ],
  "AnimationPlaybackEventInit": [
    {
      "interface": "AnimationPlaybackEventInit",
      "kind": "property",
      "name": "currentTime",
      "type": "CSSNumberish"
    },
    {
      "interface": "AnimationPlaybackEventInit",
      "kind": "property",
      "name": "timelineTime",
      "type": "CSSNumberish"
    }
  ],
  "AssignedNodesOptions": [
    {
      "interface": "AssignedNodesOptions",
      "kind": "property",
      "name": "flatten",
      "type": "boolean"
    }
  ],
  "AudioBufferOptions": [
    {
      "interface": "AudioBufferOptions",
      "kind": "property",
      "name": "length",
      "type": "number"
    },
    {
      "interface": "AudioBufferOptions",
      "kind": "property",
      "name": "numberOfChannels",
      "type": "number"
    },
    {
      "interface": "AudioBufferOptions",
      "kind": "property",
      "name": "sampleRate",
      "type": "number"
    }
  ],
  "AudioBufferSourceOptions": [
    {
      "interface": "AudioBufferSourceOptions",
      "kind": "property",
      "name": "buffer",
      "type": "AudioBuffer"
    },
    {
      "interface": "AudioBufferSourceOptions",
      "kind": "property",
      "name": "detune",
      "type": "number"
    },
    {
      "interface": "AudioBufferSourceOptions",
      "kind": "property",
      "name": "loop",
      "type": "boolean"
    },
    {
      "interface": "AudioBufferSourceOptions",
      "kind": "property",
      "name": "loopEnd",
      "type": "number"
    },
    {
      "interface": "AudioBufferSourceOptions",
      "kind": "property",
      "name": "loopStart",
      "type": "number"
    },
    {
      "interface": "AudioBufferSourceOptions",
      "kind": "property",
      "name": "playbackRate",
      "type": "number"
    }
  ],
  "AudioConfiguration": [
    {
      "interface": "AudioConfiguration",
      "kind": "property",
      "name": "bitrate",
      "type": "number"
    },
    {
      "interface": "AudioConfiguration",
      "kind": "property",
      "name": "channels",
      "type": "string"
    },
    {
      "interface": "AudioConfiguration",
      "kind": "property",
      "name": "contentType",
      "type": "string"
    },
    {
      "interface": "AudioConfiguration",
      "kind": "property",
      "name": "samplerate",
      "type": "number"
    },
    {
      "interface": "AudioConfiguration",
      "kind": "property",
      "name": "spatialRendering",
      "type": "boolean"
    }
  ],
  "AudioContextOptions": [
    {
      "interface": "AudioContextOptions",
      "kind": "property",
      "name": "latencyHint",
      "type": "number | AudioContextLatencyCategory"
    },
    {
      "interface": "AudioContextOptions",
      "kind": "property",
      "name": "sampleRate",
      "type": "number"
    }
  ],
  "AudioDataCopyToOptions": [
    {
      "interface": "AudioDataCopyToOptions",
      "kind": "property",
      "name": "format",
      "type": "AudioSampleFormat"
    },
    {
      "interface": "AudioDataCopyToOptions",
      "kind": "property",
      "name": "frameCount",
      "type": "number"
    },
    {
      "interface": "AudioDataCopyToOptions",
      "kind": "property",
      "name": "frameOffset",
      "type": "number"
    },
    {
      "interface": "AudioDataCopyToOptions",
      "kind": "property",
      "name": "planeIndex",
      "type": "number"
    }
  ],
  "AudioDataInit": [
    {
      "interface": "AudioDataInit",
      "kind": "property",
      "name": "data",
      "type": "BufferSource"
    },
    {
      "interface": "AudioDataInit",
      "kind": "property",
      "name": "format",
      "type": "AudioSampleFormat"
    },
    {
      "interface": "AudioDataInit",
      "kind": "property",
      "name": "numberOfChannels",
      "type": "number"
    },
    {
      "interface": "AudioDataInit",
      "kind": "property",
      "name": "numberOfFrames",
      "type": "number"
    },
    {
      "interface": "AudioDataInit",
      "kind": "property",
      "name": "sampleRate",
      "type": "number"
    },
    {
      "interface": "AudioDataInit",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    },
    {
      "interface": "AudioDataInit",
      "kind": "property",
      "name": "transfer",
      "type": "ArrayBuffer[]"
    }
  ],
  "AudioDecoderConfig": [
    {
      "interface": "AudioDecoderConfig",
      "kind": "property",
      "name": "codec",
      "type": "string"
    },
    {
      "interface": "AudioDecoderConfig",
      "kind": "property",
      "name": "description",
      "type": "BufferSource"
    },
    {
      "interface": "AudioDecoderConfig",
      "kind": "property",
      "name": "numberOfChannels",
      "type": "number"
    },
    {
      "interface": "AudioDecoderConfig",
      "kind": "property",
      "name": "sampleRate",
      "type": "number"
    }
  ],
  "AudioDecoderInit": [
    {
      "interface": "AudioDecoderInit",
      "kind": "property",
      "name": "error",
      "type": "WebCodecsErrorCallback"
    },
    {
      "interface": "AudioDecoderInit",
      "kind": "property",
      "name": "output",
      "type": "AudioDataOutputCallback"
    }
  ],
  "AudioDecoderSupport": [
    {
      "interface": "AudioDecoderSupport",
      "kind": "property",
      "name": "config",
      "type": "AudioDecoderConfig"
    },
    {
      "interface": "AudioDecoderSupport",
      "kind": "property",
      "name": "supported",
      "type": "boolean"
    }
  ],
  "AudioEncoderConfig": [
    {
      "interface": "AudioEncoderConfig",
      "kind": "property",
      "name": "bitrate",
      "type": "number"
    },
    {
      "interface": "AudioEncoderConfig",
      "kind": "property",
      "name": "bitrateMode",
      "type": "BitrateMode"
    },
    {
      "interface": "AudioEncoderConfig",
      "kind": "property",
      "name": "codec",
      "type": "string"
    },
    {
      "interface": "AudioEncoderConfig",
      "kind": "property",
      "name": "numberOfChannels",
      "type": "number"
    },
    {
      "interface": "AudioEncoderConfig",
      "kind": "property",
      "name": "opus",
      "type": "OpusEncoderConfig"
    },
    {
      "interface": "AudioEncoderConfig",
      "kind": "property",
      "name": "sampleRate",
      "type": "number"
    }
  ],
  "AudioEncoderInit": [
    {
      "interface": "AudioEncoderInit",
      "kind": "property",
      "name": "error",
      "type": "WebCodecsErrorCallback"
    },
    {
      "interface": "AudioEncoderInit",
      "kind": "property",
      "name": "output",
      "type": "EncodedAudioChunkOutputCallback"
    }
  ],
  "AudioEncoderSupport": [
    {
      "interface": "AudioEncoderSupport",
      "kind": "property",
      "name": "config",
      "type": "AudioEncoderConfig"
    },
    {
      "interface": "AudioEncoderSupport",
      "kind": "property",
      "name": "supported",
      "type": "boolean"
    }
  ],
  "AudioNodeOptions": [
    {
      "interface": "AudioNodeOptions",
      "kind": "property",
      "name": "channelCount",
      "type": "number"
    },
    {
      "interface": "AudioNodeOptions",
      "kind": "property",
      "name": "channelCountMode",
      "type": "ChannelCountMode"
    },
    {
      "interface": "AudioNodeOptions",
      "kind": "property",
      "name": "channelInterpretation",
      "type": "ChannelInterpretation"
    }
  ],
  "AudioProcessingEventInit": [
    {
      "interface": "AudioProcessingEventInit",
      "kind": "property",
      "name": "inputBuffer",
      "type": "AudioBuffer"
    },
    {
      "interface": "AudioProcessingEventInit",
      "kind": "property",
      "name": "outputBuffer",
      "type": "AudioBuffer"
    },
    {
      "interface": "AudioProcessingEventInit",
      "kind": "property",
      "name": "playbackTime",
      "type": "number"
    }
  ],
  "AudioTimestamp": [
    {
      "interface": "AudioTimestamp",
      "kind": "property",
      "name": "contextTime",
      "type": "number"
    },
    {
      "interface": "AudioTimestamp",
      "kind": "property",
      "name": "performanceTime",
      "type": "number"
    }
  ],
  "AudioWorkletNodeOptions": [
    {
      "interface": "AudioWorkletNodeOptions",
      "kind": "property",
      "name": "numberOfInputs",
      "type": "number"
    },
    {
      "interface": "AudioWorkletNodeOptions",
      "kind": "property",
      "name": "numberOfOutputs",
      "type": "number"
    },
    {
      "interface": "AudioWorkletNodeOptions",
      "kind": "property",
      "name": "outputChannelCount",
      "type": "number[]"
    },
    {
      "interface": "AudioWorkletNodeOptions",
      "kind": "property",
      "name": "parameterData",
      "type": "Record<string, number>"
    },
    {
      "interface": "AudioWorkletNodeOptions",
      "kind": "property",
      "name": "processorOptions",
      "type": "any"
    }
  ],
  "AuthenticationExtensionsClientInputs": [
    {
      "interface": "AuthenticationExtensionsClientInputs",
      "kind": "property",
      "name": "appid",
      "type": "string"
    },
    {
      "interface": "AuthenticationExtensionsClientInputs",
      "kind": "property",
      "name": "credProps",
      "type": "boolean"
    },
    {
      "interface": "AuthenticationExtensionsClientInputs",
      "kind": "property",
      "name": "hmacCreateSecret",
      "type": "boolean"
    },
    {
      "interface": "AuthenticationExtensionsClientInputs",
      "kind": "property",
      "name": "minPinLength",
      "type": "boolean"
    },
    {
      "interface": "AuthenticationExtensionsClientInputs",
      "kind": "property",
      "name": "prf",
      "type": "AuthenticationExtensionsPRFInputs"
    }
  ],
  "AuthenticationExtensionsClientOutputs": [
    {
      "interface": "AuthenticationExtensionsClientOutputs",
      "kind": "property",
      "name": "appid",
      "type": "boolean"
    },
    {
      "interface": "AuthenticationExtensionsClientOutputs",
      "kind": "property",
      "name": "credProps",
      "type": "CredentialPropertiesOutput"
    },
    {
      "interface": "AuthenticationExtensionsClientOutputs",
      "kind": "property",
      "name": "hmacCreateSecret",
      "type": "boolean"
    },
    {
      "interface": "AuthenticationExtensionsClientOutputs",
      "kind": "property",
      "name": "prf",
      "type": "AuthenticationExtensionsPRFOutputs"
    }
  ],
  "AuthenticationExtensionsPRFInputs": [
    {
      "interface": "AuthenticationExtensionsPRFInputs",
      "kind": "property",
      "name": "eval",
      "type": "AuthenticationExtensionsPRFValues"
    },
    {
      "interface": "AuthenticationExtensionsPRFInputs",
      "kind": "property",
      "name": "evalByCredential",
      "type": "Record<string, AuthenticationExtensionsPRFValues>"
    }
  ],
  "AuthenticationExtensionsPRFOutputs": [
    {
      "interface": "AuthenticationExtensionsPRFOutputs",
      "kind": "property",
      "name": "enabled",
      "type": "boolean"
    },
    {
      "interface": "AuthenticationExtensionsPRFOutputs",
      "kind": "property",
      "name": "results",
      "type": "AuthenticationExtensionsPRFValues"
    }
  ],
  "AuthenticationExtensionsPRFValues": [
    {
      "interface": "AuthenticationExtensionsPRFValues",
      "kind": "property",
      "name": "first",
      "type": "BufferSource"
    },
    {
      "interface": "AuthenticationExtensionsPRFValues",
      "kind": "property",
      "name": "second",
      "type": "BufferSource"
    }
  ],
  "AuthenticatorSelectionCriteria": [
    {
      "interface": "AuthenticatorSelectionCriteria",
      "kind": "property",
      "name": "authenticatorAttachment",
      "type": "AuthenticatorAttachment"
    },
    {
      "interface": "AuthenticatorSelectionCriteria",
      "kind": "property",
      "name": "requireResidentKey",
      "type": "boolean"
    },
    {
      "interface": "AuthenticatorSelectionCriteria",
      "kind": "property",
      "name": "residentKey",
      "type": "ResidentKeyRequirement"
    },
    {
      "interface": "AuthenticatorSelectionCriteria",
      "kind": "property",
      "name": "userVerification",
      "type": "UserVerificationRequirement"
    }
  ],
  "AvcEncoderConfig": [
    {
      "interface": "AvcEncoderConfig",
      "kind": "property",
      "name": "format",
      "type": "AvcBitstreamFormat"
    }
  ],
  "BiquadFilterOptions": [
    {
      "interface": "BiquadFilterOptions",
      "kind": "property",
      "name": "Q",
      "type": "number"
    },
    {
      "interface": "BiquadFilterOptions",
      "kind": "property",
      "name": "detune",
      "type": "number"
    },
    {
      "interface": "BiquadFilterOptions",
      "kind": "property",
      "name": "frequency",
      "type": "number"
    },
    {
      "interface": "BiquadFilterOptions",
      "kind": "property",
      "name": "gain",
      "type": "number"
    },
    {
      "interface": "BiquadFilterOptions",
      "kind": "property",
      "name": "type",
      "type": "BiquadFilterType"
    }
  ],
  "BlobEventInit": [
    {
      "interface": "BlobEventInit",
      "kind": "property",
      "name": "data",
      "type": "Blob"
    },
    {
      "interface": "BlobEventInit",
      "kind": "property",
      "name": "timecode",
      "type": "number"
    }
  ],
  "BlobPropertyBag": [
    {
      "interface": "BlobPropertyBag",
      "kind": "property",
      "name": "endings",
      "type": "EndingType"
    },
    {
      "interface": "BlobPropertyBag",
      "kind": "property",
      "name": "type",
      "type": "string"
    }
  ],
  "CSSMatrixComponentOptions": [
    {
      "interface": "CSSMatrixComponentOptions",
      "kind": "property",
      "name": "is2D",
      "type": "boolean"
    }
  ],
  "CSSNumericType": [
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "angle",
      "type": "number"
    },
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "flex",
      "type": "number"
    },
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "frequency",
      "type": "number"
    },
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "length",
      "type": "number"
    },
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "percent",
      "type": "number"
    },
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "percentHint",
      "type": "CSSNumericBaseType"
    },
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "resolution",
      "type": "number"
    },
    {
      "interface": "CSSNumericType",
      "kind": "property",
      "name": "time",
      "type": "number"
    }
  ],
  "CSSStyleSheetInit": [
    {
      "interface": "CSSStyleSheetInit",
      "kind": "property",
      "name": "baseURL",
      "type": "string"
    },
    {
      "interface": "CSSStyleSheetInit",
      "kind": "property",
      "name": "disabled",
      "type": "boolean"
    },
    {
      "interface": "CSSStyleSheetInit",
      "kind": "property",
      "name": "media",
      "type": "string | MediaList"
    }
  ],
  "CacheQueryOptions": [
    {
      "interface": "CacheQueryOptions",
      "kind": "property",
      "name": "ignoreMethod",
      "type": "boolean"
    },
    {
      "interface": "CacheQueryOptions",
      "kind": "property",
      "name": "ignoreSearch",
      "type": "boolean"
    },
    {
      "interface": "CacheQueryOptions",
      "kind": "property",
      "name": "ignoreVary",
      "type": "boolean"
    }
  ],
  "CanvasRenderingContext2DSettings": [
    {
      "interface": "CanvasRenderingContext2DSettings",
      "kind": "property",
      "name": "alpha",
      "type": "boolean"
    },
    {
      "interface": "CanvasRenderingContext2DSettings",
      "kind": "property",
      "name": "colorSpace",
      "type": "PredefinedColorSpace"
    },
    {
      "interface": "CanvasRenderingContext2DSettings",
      "kind": "property",
      "name": "desynchronized",
      "type": "boolean"
    },
    {
      "interface": "CanvasRenderingContext2DSettings",
      "kind": "property",
      "name": "willReadFrequently",
      "type": "boolean"
    }
  ],
  "CaretPositionFromPointOptions": [
    {
      "interface": "CaretPositionFromPointOptions",
      "kind": "property",
      "name": "shadowRoots",
      "type": "ShadowRoot[]"
    }
  ],
  "ChannelMergerOptions": [
    {
      "interface": "ChannelMergerOptions",
      "kind": "property",
      "name": "numberOfInputs",
      "type": "number"
    }
  ],
  "ChannelSplitterOptions": [
    {
      "interface": "ChannelSplitterOptions",
      "kind": "property",
      "name": "numberOfOutputs",
      "type": "number"
    }
  ],
  "CheckVisibilityOptions": [
    {
      "interface": "CheckVisibilityOptions",
      "kind": "property",
      "name": "checkOpacity",
      "type": "boolean"
    },
    {
      "interface": "CheckVisibilityOptions",
      "kind": "property",
      "name": "checkVisibilityCSS",
      "type": "boolean"
    },
    {
      "interface": "CheckVisibilityOptions",
      "kind": "property",
      "name": "contentVisibilityAuto",
      "type": "boolean"
    },
    {
      "interface": "CheckVisibilityOptions",
      "kind": "property",
      "name": "opacityProperty",
      "type": "boolean"
    },
    {
      "interface": "CheckVisibilityOptions",
      "kind": "property",
      "name": "visibilityProperty",
      "type": "boolean"
    }
  ],
  "ClientQueryOptions": [
    {
      "interface": "ClientQueryOptions",
      "kind": "property",
      "name": "includeUncontrolled",
      "type": "boolean"
    },
    {
      "interface": "ClientQueryOptions",
      "kind": "property",
      "name": "type",
      "type": "ClientTypes"
    }
  ],
  "ClipboardEventInit": [
    {
      "interface": "ClipboardEventInit",
      "kind": "property",
      "name": "clipboardData",
      "type": "DataTransfer"
    }
  ],
  "ClipboardItemOptions": [
    {
      "interface": "ClipboardItemOptions",
      "kind": "property",
      "name": "presentationStyle",
      "type": "PresentationStyle"
    }
  ],
  "CloseEventInit": [
    {
      "interface": "CloseEventInit",
      "kind": "property",
      "name": "code",
      "type": "number"
    },
    {
      "interface": "CloseEventInit",
      "kind": "property",
      "name": "reason",
      "type": "string"
    },
    {
      "interface": "CloseEventInit",
      "kind": "property",
      "name": "wasClean",
      "type": "boolean"
    }
  ],
  "CompositionEventInit": [
    {
      "interface": "CompositionEventInit",
      "kind": "property",
      "name": "data",
      "type": "string"
    }
  ],
  "ComputedEffectTiming": [
    {
      "interface": "ComputedEffectTiming",
      "kind": "property",
      "name": "activeDuration",
      "type": "CSSNumberish"
    },
    {
      "interface": "ComputedEffectTiming",
      "kind": "property",
      "name": "currentIteration",
      "type": "number"
    },
    {
      "interface": "ComputedEffectTiming",
      "kind": "property",
      "name": "endTime",
      "type": "CSSNumberish"
    },
    {
      "interface": "ComputedEffectTiming",
      "kind": "property",
      "name": "localTime",
      "type": "CSSNumberish"
    },
    {
      "interface": "ComputedEffectTiming",
      "kind": "property",
      "name": "progress",
      "type": "number"
    },
    {
      "interface": "ComputedEffectTiming",
      "kind": "property",
      "name": "startTime",
      "type": "CSSNumberish"
    }
  ],
  "ComputedKeyframe": [
    {
      "interface": "ComputedKeyframe",
      "kind": "property",
      "name": "composite",
      "type": "CompositeOperationOrAuto"
    },
    {
      "interface": "ComputedKeyframe",
      "kind": "property",
      "name": "computedOffset",
      "type": "number"
    },
    {
      "interface": "ComputedKeyframe",
      "kind": "property",
      "name": "easing",
      "type": "string"
    },
    {
      "interface": "ComputedKeyframe",
      "kind": "property",
      "name": "offset",
      "type": "number"
    }
  ],
  "ConstantSourceOptions": [
    {
      "interface": "ConstantSourceOptions",
      "kind": "property",
      "name": "offset",
      "type": "number"
    }
  ],
  "ConstrainBooleanParameters": [
    {
      "interface": "ConstrainBooleanParameters",
      "kind": "property",
      "name": "exact",
      "type": "boolean"
    },
    {
      "interface": "ConstrainBooleanParameters",
      "kind": "property",
      "name": "ideal",
      "type": "boolean"
    }
  ],
  "ConstrainDOMStringParameters": [
    {
      "interface": "ConstrainDOMStringParameters",
      "kind": "property",
      "name": "exact",
      "type": "string | string[]"
    },
    {
      "interface": "ConstrainDOMStringParameters",
      "kind": "property",
      "name": "ideal",
      "type": "string | string[]"
    }
  ],
  "ConstrainDoubleRange": [
    {
      "interface": "ConstrainDoubleRange",
      "kind": "property",
      "name": "exact",
      "type": "number"
    },
    {
      "interface": "ConstrainDoubleRange",
      "kind": "property",
      "name": "ideal",
      "type": "number"
    }
  ],
  "ConstrainULongRange": [
    {
      "interface": "ConstrainULongRange",
      "kind": "property",
      "name": "exact",
      "type": "number"
    },
    {
      "interface": "ConstrainULongRange",
      "kind": "property",
      "name": "ideal",
      "type": "number"
    }
  ],
  "ContentVisibilityAutoStateChangeEventInit": [
    {
      "interface": "ContentVisibilityAutoStateChangeEventInit",
      "kind": "property",
      "name": "skipped",
      "type": "boolean"
    }
  ],
  "ConvolverOptions": [
    {
      "interface": "ConvolverOptions",
      "kind": "property",
      "name": "buffer",
      "type": "AudioBuffer"
    },
    {
      "interface": "ConvolverOptions",
      "kind": "property",
      "name": "disableNormalization",
      "type": "boolean"
    }
  ],
  "CredentialCreationOptions": [
    {
      "interface": "CredentialCreationOptions",
      "kind": "property",
      "name": "publicKey",
      "type": "PublicKeyCredentialCreationOptions"
    },
    {
      "interface": "CredentialCreationOptions",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal"
    }
  ],
  "CredentialPropertiesOutput": [
    {
      "interface": "CredentialPropertiesOutput",
      "kind": "property",
      "name": "rk",
      "type": "boolean"
    }
  ],
  "CredentialRequestOptions": [
    {
      "interface": "CredentialRequestOptions",
      "kind": "property",
      "name": "mediation",
      "type": "CredentialMediationRequirement"
    },
    {
      "interface": "CredentialRequestOptions",
      "kind": "property",
      "name": "publicKey",
      "type": "PublicKeyCredentialRequestOptions"
    },
    {
      "interface": "CredentialRequestOptions",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal"
    }
  ],
  "CryptoKeyPair": [
    {
      "interface": "CryptoKeyPair",
      "kind": "property",
      "name": "privateKey",
      "type": "CryptoKey"
    },
    {
      "interface": "CryptoKeyPair",
      "kind": "property",
      "name": "publicKey",
      "type": "CryptoKey"
    }
  ],
  "CustomEventInit": [
    {
      "interface": "CustomEventInit",
      "kind": "property",
      "name": "detail",
      "type": "T"
    }
  ],
  "DOMMatrix2DInit": [
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "a",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "b",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "c",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "d",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "e",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "f",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "m11",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "m12",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "m21",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "m22",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "m41",
      "type": "number"
    },
    {
      "interface": "DOMMatrix2DInit",
      "kind": "property",
      "name": "m42",
      "type": "number"
    }
  ],
  "DOMMatrixInit": [
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "is2D",
      "type": "boolean"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m13",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m14",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m23",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m24",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m31",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m32",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m33",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m34",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m43",
      "type": "number"
    },
    {
      "interface": "DOMMatrixInit",
      "kind": "property",
      "name": "m44",
      "type": "number"
    }
  ],
  "DOMPointInit": [
    {
      "interface": "DOMPointInit",
      "kind": "property",
      "name": "w",
      "type": "number"
    },
    {
      "interface": "DOMPointInit",
      "kind": "property",
      "name": "x",
      "type": "number"
    },
    {
      "interface": "DOMPointInit",
      "kind": "property",
      "name": "y",
      "type": "number"
    },
    {
      "interface": "DOMPointInit",
      "kind": "property",
      "name": "z",
      "type": "number"
    }
  ],
  "DOMQuadInit": [
    {
      "interface": "DOMQuadInit",
      "kind": "property",
      "name": "p1",
      "type": "DOMPointInit"
    },
    {
      "interface": "DOMQuadInit",
      "kind": "property",
      "name": "p2",
      "type": "DOMPointInit"
    },
    {
      "interface": "DOMQuadInit",
      "kind": "property",
      "name": "p3",
      "type": "DOMPointInit"
    },
    {
      "interface": "DOMQuadInit",
      "kind": "property",
      "name": "p4",
      "type": "DOMPointInit"
    }
  ],
  "DOMRectInit": [
    {
      "interface": "DOMRectInit",
      "kind": "property",
      "name": "height",
      "type": "number"
    },
    {
      "interface": "DOMRectInit",
      "kind": "property",
      "name": "width",
      "type": "number"
    },
    {
      "interface": "DOMRectInit",
      "kind": "property",
      "name": "x",
      "type": "number"
    },
    {
      "interface": "DOMRectInit",
      "kind": "property",
      "name": "y",
      "type": "number"
    }
  ],
  "DelayOptions": [
    {
      "interface": "DelayOptions",
      "kind": "property",
      "name": "delayTime",
      "type": "number"
    },
    {
      "interface": "DelayOptions",
      "kind": "property",
      "name": "maxDelayTime",
      "type": "number"
    }
  ],
  "DeviceMotionEventAccelerationInit": [
    {
      "interface": "DeviceMotionEventAccelerationInit",
      "kind": "property",
      "name": "x",
      "type": "number"
    },
    {
      "interface": "DeviceMotionEventAccelerationInit",
      "kind": "property",
      "name": "y",
      "type": "number"
    },
    {
      "interface": "DeviceMotionEventAccelerationInit",
      "kind": "property",
      "name": "z",
      "type": "number"
    }
  ],
  "DeviceMotionEventInit": [
    {
      "interface": "DeviceMotionEventInit",
      "kind": "property",
      "name": "acceleration",
      "type": "DeviceMotionEventAccelerationInit"
    },
    {
      "interface": "DeviceMotionEventInit",
      "kind": "property",
      "name": "accelerationIncludingGravity",
      "type": "DeviceMotionEventAccelerationInit"
    },
    {
      "interface": "DeviceMotionEventInit",
      "kind": "property",
      "name": "interval",
      "type": "number"
    },
    {
      "interface": "DeviceMotionEventInit",
      "kind": "property",
      "name": "rotationRate",
      "type": "DeviceMotionEventRotationRateInit"
    }
  ],
  "DeviceMotionEventRotationRateInit": [
    {
      "interface": "DeviceMotionEventRotationRateInit",
      "kind": "property",
      "name": "alpha",
      "type": "number"
    },
    {
      "interface": "DeviceMotionEventRotationRateInit",
      "kind": "property",
      "name": "beta",
      "type": "number"
    },
    {
      "interface": "DeviceMotionEventRotationRateInit",
      "kind": "property",
      "name": "gamma",
      "type": "number"
    }
  ],
  "DeviceOrientationEventInit": [
    {
      "interface": "DeviceOrientationEventInit",
      "kind": "property",
      "name": "absolute",
      "type": "boolean"
    },
    {
      "interface": "DeviceOrientationEventInit",
      "kind": "property",
      "name": "alpha",
      "type": "number"
    },
    {
      "interface": "DeviceOrientationEventInit",
      "kind": "property",
      "name": "beta",
      "type": "number"
    },
    {
      "interface": "DeviceOrientationEventInit",
      "kind": "property",
      "name": "gamma",
      "type": "number"
    }
  ],
  "DisplayMediaStreamOptions": [
    {
      "interface": "DisplayMediaStreamOptions",
      "kind": "property",
      "name": "audio",
      "type": "boolean | MediaTrackConstraints"
    },
    {
      "interface": "DisplayMediaStreamOptions",
      "kind": "property",
      "name": "video",
      "type": "boolean | MediaTrackConstraints"
    }
  ],
  "DocumentTimelineOptions": [
    {
      "interface": "DocumentTimelineOptions",
      "kind": "property",
      "name": "originTime",
      "type": "number"
    }
  ],
  "DoubleRange": [
    {
      "interface": "DoubleRange",
      "kind": "property",
      "name": "max",
      "type": "number"
    },
    {
      "interface": "DoubleRange",
      "kind": "property",
      "name": "min",
      "type": "number"
    }
  ],
  "DragEventInit": [
    {
      "interface": "DragEventInit",
      "kind": "property",
      "name": "dataTransfer",
      "type": "DataTransfer"
    }
  ],
  "DynamicsCompressorOptions": [
    {
      "interface": "DynamicsCompressorOptions",
      "kind": "property",
      "name": "attack",
      "type": "number"
    },
    {
      "interface": "DynamicsCompressorOptions",
      "kind": "property",
      "name": "knee",
      "type": "number"
    },
    {
      "interface": "DynamicsCompressorOptions",
      "kind": "property",
      "name": "ratio",
      "type": "number"
    },
    {
      "interface": "DynamicsCompressorOptions",
      "kind": "property",
      "name": "release",
      "type": "number"
    },
    {
      "interface": "DynamicsCompressorOptions",
      "kind": "property",
      "name": "threshold",
      "type": "number"
    }
  ],
  "EcKeyAlgorithm": [
    {
      "interface": "EcKeyAlgorithm",
      "kind": "property",
      "name": "namedCurve",
      "type": "string"
    }
  ],
  "EcKeyGenParams": [
    {
      "interface": "EcKeyGenParams",
      "kind": "property",
      "name": "namedCurve",
      "type": "string"
    }
  ],
  "EcKeyImportParams": [
    {
      "interface": "EcKeyImportParams",
      "kind": "property",
      "name": "namedCurve",
      "type": "string"
    }
  ],
  "EcdhKeyDeriveParams": [
    {
      "interface": "EcdhKeyDeriveParams",
      "kind": "property",
      "name": "public",
      "type": "CryptoKey"
    }
  ],
  "EcdsaParams": [
    {
      "interface": "EcdsaParams",
      "kind": "property",
      "name": "hash",
      "type": "AlgorithmIdentifier"
    }
  ],
  "EffectTiming": [
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "delay",
      "type": "number"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "direction",
      "type": "PlaybackDirection"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "duration",
      "type": "string | number | CSSNumericValue"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "easing",
      "type": "string"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "endDelay",
      "type": "number"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "fill",
      "type": "FillMode"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "iterationStart",
      "type": "number"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "iterations",
      "type": "number"
    },
    {
      "interface": "EffectTiming",
      "kind": "property",
      "name": "playbackRate",
      "type": "number"
    }
  ],
  "ElementCreationOptions": [
    {
      "interface": "ElementCreationOptions",
      "kind": "property",
      "name": "is",
      "type": "string"
    }
  ],
  "ElementDefinitionOptions": [
    {
      "interface": "ElementDefinitionOptions",
      "kind": "property",
      "name": "extends",
      "type": "string"
    }
  ],
  "EncodedAudioChunkInit": [
    {
      "interface": "EncodedAudioChunkInit",
      "kind": "property",
      "name": "data",
      "type": "AllowSharedBufferSource"
    },
    {
      "interface": "EncodedAudioChunkInit",
      "kind": "property",
      "name": "duration",
      "type": "number"
    },
    {
      "interface": "EncodedAudioChunkInit",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    },
    {
      "interface": "EncodedAudioChunkInit",
      "kind": "property",
      "name": "transfer",
      "type": "ArrayBuffer[]"
    },
    {
      "interface": "EncodedAudioChunkInit",
      "kind": "property",
      "name": "type",
      "type": "EncodedAudioChunkType"
    }
  ],
  "EncodedAudioChunkMetadata": [
    {
      "interface": "EncodedAudioChunkMetadata",
      "kind": "property",
      "name": "decoderConfig",
      "type": "AudioDecoderConfig"
    }
  ],
  "EncodedVideoChunkInit": [
    {
      "interface": "EncodedVideoChunkInit",
      "kind": "property",
      "name": "data",
      "type": "AllowSharedBufferSource"
    },
    {
      "interface": "EncodedVideoChunkInit",
      "kind": "property",
      "name": "duration",
      "type": "number"
    },
    {
      "interface": "EncodedVideoChunkInit",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    },
    {
      "interface": "EncodedVideoChunkInit",
      "kind": "property",
      "name": "type",
      "type": "EncodedVideoChunkType"
    }
  ],
  "EncodedVideoChunkMetadata": [
    {
      "interface": "EncodedVideoChunkMetadata",
      "kind": "property",
      "name": "decoderConfig",
      "type": "VideoDecoderConfig"
    }
  ],
  "ErrorEventInit": [
    {
      "interface": "ErrorEventInit",
      "kind": "property",
      "name": "colno",
      "type": "number"
    },
    {
      "interface": "ErrorEventInit",
      "kind": "property",
      "name": "error",
      "type": "any"
    },
    {
      "interface": "ErrorEventInit",
      "kind": "property",
      "name": "filename",
      "type": "string"
    },
    {
      "interface": "ErrorEventInit",
      "kind": "property",
      "name": "lineno",
      "type": "number"
    },
    {
      "interface": "ErrorEventInit",
      "kind": "property",
      "name": "message",
      "type": "string"
    }
  ],
  "EventInit": [
    {
      "interface": "EventInit",
      "kind": "property",
      "name": "bubbles",
      "type": "boolean"
    },
    {
      "interface": "EventInit",
      "kind": "property",
      "name": "cancelable",
      "type": "boolean"
    },
    {
      "interface": "EventInit",
      "kind": "property",
      "name": "composed",
      "type": "boolean"
    }
  ],
  "EventListenerOptions": [
    {
      "interface": "EventListenerOptions",
      "kind": "property",
      "name": "capture",
      "type": "boolean"
    }
  ],
  "EventModifierInit": [
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "altKey",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "ctrlKey",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "metaKey",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierAltGraph",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierCapsLock",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierFn",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierFnLock",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierHyper",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierNumLock",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierScrollLock",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierSuper",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierSymbol",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "modifierSymbolLock",
      "type": "boolean"
    },
    {
      "interface": "EventModifierInit",
      "kind": "property",
      "name": "shiftKey",
      "type": "boolean"
    }
  ],
  "EventSourceInit": [
    {
      "interface": "EventSourceInit",
      "kind": "property",
      "name": "withCredentials",
      "type": "boolean"
    }
  ],
  "FilePropertyBag": [
    {
      "interface": "FilePropertyBag",
      "kind": "property",
      "name": "lastModified",
      "type": "number"
    }
  ],
  "FileSystemCreateWritableOptions": [
    {
      "interface": "FileSystemCreateWritableOptions",
      "kind": "property",
      "name": "keepExistingData",
      "type": "boolean"
    }
  ],
  "FileSystemFlags": [
    {
      "interface": "FileSystemFlags",
      "kind": "property",
      "name": "create",
      "type": "boolean"
    },
    {
      "interface": "FileSystemFlags",
      "kind": "property",
      "name": "exclusive",
      "type": "boolean"
    }
  ],
  "FileSystemGetDirectoryOptions": [
    {
      "interface": "FileSystemGetDirectoryOptions",
      "kind": "property",
      "name": "create",
      "type": "boolean"
    }
  ],
  "FileSystemGetFileOptions": [
    {
      "interface": "FileSystemGetFileOptions",
      "kind": "property",
      "name": "create",
      "type": "boolean"
    }
  ],
  "FileSystemRemoveOptions": [
    {
      "interface": "FileSystemRemoveOptions",
      "kind": "property",
      "name": "recursive",
      "type": "boolean"
    }
  ],
  "FocusEventInit": [
    {
      "interface": "FocusEventInit",
      "kind": "property",
      "name": "relatedTarget",
      "type": "EventTarget"
    }
  ],
  "FocusOptions": [
    {
      "interface": "FocusOptions",
      "kind": "property",
      "name": "preventScroll",
      "type": "boolean"
    }
  ],
  "FontFaceDescriptors": [
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "ascentOverride",
      "type": "string"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "descentOverride",
      "type": "string"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "display",
      "type": "FontDisplay"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "featureSettings",
      "type": "string"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "lineGapOverride",
      "type": "string"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "stretch",
      "type": "string"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "style",
      "type": "string"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "unicodeRange",
      "type": "string"
    },
    {
      "interface": "FontFaceDescriptors",
      "kind": "property",
      "name": "weight",
      "type": "string"
    }
  ],
  "FontFaceSetLoadEventInit": [
    {
      "interface": "FontFaceSetLoadEventInit",
      "kind": "property",
      "name": "fontfaces",
      "type": "FontFace[]"
    }
  ],
  "FormDataEventInit": [
    {
      "interface": "FormDataEventInit",
      "kind": "property",
      "name": "formData",
      "type": "FormData"
    }
  ],
  "FullscreenOptions": [
    {
      "interface": "FullscreenOptions",
      "kind": "property",
      "name": "navigationUI",
      "type": "FullscreenNavigationUI"
    }
  ],
  "GainOptions": [
    {
      "interface": "GainOptions",
      "kind": "property",
      "name": "gain",
      "type": "number"
    }
  ],
  "GamepadEffectParameters": [
    {
      "interface": "GamepadEffectParameters",
      "kind": "property",
      "name": "duration",
      "type": "number"
    },
    {
      "interface": "GamepadEffectParameters",
      "kind": "property",
      "name": "leftTrigger",
      "type": "number"
    },
    {
      "interface": "GamepadEffectParameters",
      "kind": "property",
      "name": "rightTrigger",
      "type": "number"
    },
    {
      "interface": "GamepadEffectParameters",
      "kind": "property",
      "name": "startDelay",
      "type": "number"
    },
    {
      "interface": "GamepadEffectParameters",
      "kind": "property",
      "name": "strongMagnitude",
      "type": "number"
    },
    {
      "interface": "GamepadEffectParameters",
      "kind": "property",
      "name": "weakMagnitude",
      "type": "number"
    }
  ],
  "GamepadEventInit": [
    {
      "interface": "GamepadEventInit",
      "kind": "property",
      "name": "gamepad",
      "type": "Gamepad"
    }
  ],
  "GetAnimationsOptions": [
    {
      "interface": "GetAnimationsOptions",
      "kind": "property",
      "name": "subtree",
      "type": "boolean"
    }
  ],
  "GetHTMLOptions": [
    {
      "interface": "GetHTMLOptions",
      "kind": "property",
      "name": "serializableShadowRoots",
      "type": "boolean"
    },
    {
      "interface": "GetHTMLOptions",
      "kind": "property",
      "name": "shadowRoots",
      "type": "ShadowRoot[]"
    }
  ],
  "GetNotificationOptions": [
    {
      "interface": "GetNotificationOptions",
      "kind": "property",
      "name": "tag",
      "type": "string"
    }
  ],
  "GetRootNodeOptions": [
    {
      "interface": "GetRootNodeOptions",
      "kind": "property",
      "name": "composed",
      "type": "boolean"
    }
  ],
  "HashChangeEventInit": [
    {
      "interface": "HashChangeEventInit",
      "kind": "property",
      "name": "newURL",
      "type": "string"
    },
    {
      "interface": "HashChangeEventInit",
      "kind": "property",
      "name": "oldURL",
      "type": "string"
    }
  ],
  "HkdfParams": [
    {
      "interface": "HkdfParams",
      "kind": "property",
      "name": "hash",
      "type": "AlgorithmIdentifier"
    },
    {
      "interface": "HkdfParams",
      "kind": "property",
      "name": "info",
      "type": "BufferSource"
    },
    {
      "interface": "HkdfParams",
      "kind": "property",
      "name": "salt",
      "type": "BufferSource"
    }
  ],
  "HmacImportParams": [
    {
      "interface": "HmacImportParams",
      "kind": "property",
      "name": "hash",
      "type": "AlgorithmIdentifier"
    },
    {
      "interface": "HmacImportParams",
      "kind": "property",
      "name": "length",
      "type": "number"
    }
  ],
  "HmacKeyAlgorithm": [
    {
      "interface": "HmacKeyAlgorithm",
      "kind": "property",
      "name": "hash",
      "type": "KeyAlgorithm"
    },
    {
      "interface": "HmacKeyAlgorithm",
      "kind": "property",
      "name": "length",
      "type": "number"
    }
  ],
  "HmacKeyGenParams": [
    {
      "interface": "HmacKeyGenParams",
      "kind": "property",
      "name": "hash",
      "type": "AlgorithmIdentifier"
    },
    {
      "interface": "HmacKeyGenParams",
      "kind": "property",
      "name": "length",
      "type": "number"
    }
  ],
  "IDBDatabaseInfo": [
    {
      "interface": "IDBDatabaseInfo",
      "kind": "property",
      "name": "name",
      "type": "string"
    },
    {
      "interface": "IDBDatabaseInfo",
      "kind": "property",
      "name": "version",
      "type": "number"
    }
  ],
  "IDBIndexParameters": [
    {
      "interface": "IDBIndexParameters",
      "kind": "property",
      "name": "multiEntry",
      "type": "boolean"
    },
    {
      "interface": "IDBIndexParameters",
      "kind": "property",
      "name": "unique",
      "type": "boolean"
    }
  ],
  "IDBObjectStoreParameters": [
    {
      "interface": "IDBObjectStoreParameters",
      "kind": "property",
      "name": "autoIncrement",
      "type": "boolean"
    },
    {
      "interface": "IDBObjectStoreParameters",
      "kind": "property",
      "name": "keyPath",
      "type": "string | string[]"
    }
  ],
  "IDBTransactionOptions": [
    {
      "interface": "IDBTransactionOptions",
      "kind": "property",
      "name": "durability",
      "type": "IDBTransactionDurability"
    }
  ],
  "IDBVersionChangeEventInit": [
    {
      "interface": "IDBVersionChangeEventInit",
      "kind": "property",
      "name": "newVersion",
      "type": "number"
    },
    {
      "interface": "IDBVersionChangeEventInit",
      "kind": "property",
      "name": "oldVersion",
      "type": "number"
    }
  ],
  "IIRFilterOptions": [
    {
      "interface": "IIRFilterOptions",
      "kind": "property",
      "name": "feedback",
      "type": "number[]"
    },
    {
      "interface": "IIRFilterOptions",
      "kind": "property",
      "name": "feedforward",
      "type": "number[]"
    }
  ],
  "IdleRequestOptions": [
    {
      "interface": "IdleRequestOptions",
      "kind": "property",
      "name": "timeout",
      "type": "number"
    }
  ],
  "ImageBitmapOptions": [
    {
      "interface": "ImageBitmapOptions",
      "kind": "property",
      "name": "colorSpaceConversion",
      "type": "ColorSpaceConversion"
    },
    {
      "interface": "ImageBitmapOptions",
      "kind": "property",
      "name": "imageOrientation",
      "type": "ImageOrientation"
    },
    {
      "interface": "ImageBitmapOptions",
      "kind": "property",
      "name": "premultiplyAlpha",
      "type": "PremultiplyAlpha"
    },
    {
      "interface": "ImageBitmapOptions",
      "kind": "property",
      "name": "resizeHeight",
      "type": "number"
    },
    {
      "interface": "ImageBitmapOptions",
      "kind": "property",
      "name": "resizeQuality",
      "type": "ResizeQuality"
    },
    {
      "interface": "ImageBitmapOptions",
      "kind": "property",
      "name": "resizeWidth",
      "type": "number"
    }
  ],
  "ImageBitmapRenderingContextSettings": [
    {
      "interface": "ImageBitmapRenderingContextSettings",
      "kind": "property",
      "name": "alpha",
      "type": "boolean"
    }
  ],
  "ImageDataSettings": [
    {
      "interface": "ImageDataSettings",
      "kind": "property",
      "name": "colorSpace",
      "type": "PredefinedColorSpace"
    }
  ],
  "ImageDecodeOptions": [
    {
      "interface": "ImageDecodeOptions",
      "kind": "property",
      "name": "completeFramesOnly",
      "type": "boolean"
    },
    {
      "interface": "ImageDecodeOptions",
      "kind": "property",
      "name": "frameIndex",
      "type": "number"
    }
  ],
  "ImageDecodeResult": [
    {
      "interface": "ImageDecodeResult",
      "kind": "property",
      "name": "complete",
      "type": "boolean"
    },
    {
      "interface": "ImageDecodeResult",
      "kind": "property",
      "name": "image",
      "type": "VideoFrame"
    }
  ],
  "ImageDecoderInit": [
    {
      "interface": "ImageDecoderInit",
      "kind": "property",
      "name": "colorSpaceConversion",
      "type": "ColorSpaceConversion"
    },
    {
      "interface": "ImageDecoderInit",
      "kind": "property",
      "name": "data",
      "type": "ImageBufferSource"
    },
    {
      "interface": "ImageDecoderInit",
      "kind": "property",
      "name": "desiredHeight",
      "type": "number"
    },
    {
      "interface": "ImageDecoderInit",
      "kind": "property",
      "name": "desiredWidth",
      "type": "number"
    },
    {
      "interface": "ImageDecoderInit",
      "kind": "property",
      "name": "preferAnimation",
      "type": "boolean"
    },
    {
      "interface": "ImageDecoderInit",
      "kind": "property",
      "name": "transfer",
      "type": "ArrayBuffer[]"
    },
    {
      "interface": "ImageDecoderInit",
      "kind": "property",
      "name": "type",
      "type": "string"
    }
  ],
  "ImageEncodeOptions": [
    {
      "interface": "ImageEncodeOptions",
      "kind": "property",
      "name": "quality",
      "type": "number"
    },
    {
      "interface": "ImageEncodeOptions",
      "kind": "property",
      "name": "type",
      "type": "string"
    }
  ],
  "InputEventInit": [
    {
      "interface": "InputEventInit",
      "kind": "property",
      "name": "data",
      "type": "string"
    },
    {
      "interface": "InputEventInit",
      "kind": "property",
      "name": "dataTransfer",
      "type": "DataTransfer"
    },
    {
      "interface": "InputEventInit",
      "kind": "property",
      "name": "inputType",
      "type": "string"
    },
    {
      "interface": "InputEventInit",
      "kind": "property",
      "name": "isComposing",
      "type": "boolean"
    },
    {
      "interface": "InputEventInit",
      "kind": "property",
      "name": "targetRanges",
      "type": "StaticRange[]"
    }
  ],
  "IntersectionObserverInit": [
    {
      "interface": "IntersectionObserverInit",
      "kind": "property",
      "name": "root",
      "type": "Element | Document"
    },
    {
      "interface": "IntersectionObserverInit",
      "kind": "property",
      "name": "rootMargin",
      "type": "string"
    },
    {
      "interface": "IntersectionObserverInit",
      "kind": "property",
      "name": "threshold",
      "type": "number | number[]"
    }
  ],
  "JsonWebKey": [
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "alg",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "crv",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "d",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "dp",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "dq",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "e",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "ext",
      "type": "boolean"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "k",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "key_ops",
      "type": "string[]"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "kty",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "n",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "oth",
      "type": "RsaOtherPrimesInfo[]"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "p",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "q",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "qi",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "use",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "x",
      "type": "string"
    },
    {
      "interface": "JsonWebKey",
      "kind": "property",
      "name": "y",
      "type": "string"
    }
  ],
  "KeyAlgorithm": [
    {
      "interface": "KeyAlgorithm",
      "kind": "property",
      "name": "name",
      "type": "string"
    }
  ],
  "KeyboardEventInit": [
    {
      "interface": "KeyboardEventInit",
      "kind": "property",
      "name": "charCode",
      "type": "number"
    },
    {
      "interface": "KeyboardEventInit",
      "kind": "property",
      "name": "code",
      "type": "string"
    },
    {
      "interface": "KeyboardEventInit",
      "kind": "property",
      "name": "isComposing",
      "type": "boolean"
    },
    {
      "interface": "KeyboardEventInit",
      "kind": "property",
      "name": "key",
      "type": "string"
    },
    {
      "interface": "KeyboardEventInit",
      "kind": "property",
      "name": "keyCode",
      "type": "number"
    },
    {
      "interface": "KeyboardEventInit",
      "kind": "property",
      "name": "location",
      "type": "number"
    },
    {
      "interface": "KeyboardEventInit",
      "kind": "property",
      "name": "repeat",
      "type": "boolean"
    }
  ],
  "Keyframe": [
    {
      "interface": "Keyframe",
      "kind": "property",
      "name": "composite",
      "type": "CompositeOperationOrAuto"
    },
    {
      "interface": "Keyframe",
      "kind": "property",
      "name": "easing",
      "type": "string"
    },
    {
      "interface": "Keyframe",
      "kind": "property",
      "name": "offset",
      "type": "number"
    }
  ],
  "KeyframeAnimationOptions": [
    {
      "interface": "KeyframeAnimationOptions",
      "kind": "property",
      "name": "id",
      "type": "string"
    },
    {
      "interface": "KeyframeAnimationOptions",
      "kind": "property",
      "name": "timeline",
      "type": "AnimationTimeline"
    }
  ],
  "KeyframeEffectOptions": [
    {
      "interface": "KeyframeEffectOptions",
      "kind": "property",
      "name": "composite",
      "type": "CompositeOperation"
    },
    {
      "interface": "KeyframeEffectOptions",
      "kind": "property",
      "name": "iterationComposite",
      "type": "IterationCompositeOperation"
    },
    {
      "interface": "KeyframeEffectOptions",
      "kind": "property",
      "name": "pseudoElement",
      "type": "string"
    }
  ],
  "LockInfo": [
    {
      "interface": "LockInfo",
      "kind": "property",
      "name": "clientId",
      "type": "string"
    },
    {
      "interface": "LockInfo",
      "kind": "property",
      "name": "mode",
      "type": "LockMode"
    },
    {
      "interface": "LockInfo",
      "kind": "property",
      "name": "name",
      "type": "string"
    }
  ],
  "LockManagerSnapshot": [
    {
      "interface": "LockManagerSnapshot",
      "kind": "property",
      "name": "held",
      "type": "LockInfo[]"
    },
    {
      "interface": "LockManagerSnapshot",
      "kind": "property",
      "name": "pending",
      "type": "LockInfo[]"
    }
  ],
  "LockOptions": [
    {
      "interface": "LockOptions",
      "kind": "property",
      "name": "ifAvailable",
      "type": "boolean"
    },
    {
      "interface": "LockOptions",
      "kind": "property",
      "name": "mode",
      "type": "LockMode"
    },
    {
      "interface": "LockOptions",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal"
    },
    {
      "interface": "LockOptions",
      "kind": "property",
      "name": "steal",
      "type": "boolean"
    }
  ],
  "MIDIConnectionEventInit": [
    {
      "interface": "MIDIConnectionEventInit",
      "kind": "property",
      "name": "port",
      "type": "MIDIPort"
    }
  ],
  "MIDIMessageEventInit": [
    {
      "interface": "MIDIMessageEventInit",
      "kind": "property",
      "name": "data",
      "type": "Uint8Array<ArrayBufferLike>"
    }
  ],
  "MIDIOptions": [
    {
      "interface": "MIDIOptions",
      "kind": "property",
      "name": "software",
      "type": "boolean"
    },
    {
      "interface": "MIDIOptions",
      "kind": "property",
      "name": "sysex",
      "type": "boolean"
    }
  ],
  "MediaCapabilitiesDecodingInfo": [
    {
      "interface": "MediaCapabilitiesDecodingInfo",
      "kind": "property",
      "name": "configuration",
      "type": "MediaDecodingConfiguration"
    }
  ],
  "MediaCapabilitiesEncodingInfo": [
    {
      "interface": "MediaCapabilitiesEncodingInfo",
      "kind": "property",
      "name": "configuration",
      "type": "MediaEncodingConfiguration"
    }
  ],
  "MediaCapabilitiesInfo": [
    {
      "interface": "MediaCapabilitiesInfo",
      "kind": "property",
      "name": "powerEfficient",
      "type": "boolean"
    },
    {
      "interface": "MediaCapabilitiesInfo",
      "kind": "property",
      "name": "smooth",
      "type": "boolean"
    },
    {
      "interface": "MediaCapabilitiesInfo",
      "kind": "property",
      "name": "supported",
      "type": "boolean"
    }
  ],
  "MediaConfiguration": [
    {
      "interface": "MediaConfiguration",
      "kind": "property",
      "name": "audio",
      "type": "AudioConfiguration"
    },
    {
      "interface": "MediaConfiguration",
      "kind": "property",
      "name": "video",
      "type": "VideoConfiguration"
    }
  ],
  "MediaDecodingConfiguration": [
    {
      "interface": "MediaDecodingConfiguration",
      "kind": "property",
      "name": "type",
      "type": "MediaDecodingType"
    }
  ],
  "MediaElementAudioSourceOptions": [
    {
      "interface": "MediaElementAudioSourceOptions",
      "kind": "property",
      "name": "mediaElement",
      "type": "HTMLMediaElement"
    }
  ],
  "MediaEncodingConfiguration": [
    {
      "interface": "MediaEncodingConfiguration",
      "kind": "property",
      "name": "type",
      "type": "MediaEncodingType"
    }
  ],
  "MediaEncryptedEventInit": [
    {
      "interface": "MediaEncryptedEventInit",
      "kind": "property",
      "name": "initData",
      "type": "ArrayBuffer"
    },
    {
      "interface": "MediaEncryptedEventInit",
      "kind": "property",
      "name": "initDataType",
      "type": "string"
    }
  ],
  "MediaImage": [
    {
      "interface": "MediaImage",
      "kind": "property",
      "name": "sizes",
      "type": "string"
    },
    {
      "interface": "MediaImage",
      "kind": "property",
      "name": "src",
      "type": "string"
    },
    {
      "interface": "MediaImage",
      "kind": "property",
      "name": "type",
      "type": "string"
    }
  ],
  "MediaKeyMessageEventInit": [
    {
      "interface": "MediaKeyMessageEventInit",
      "kind": "property",
      "name": "message",
      "type": "ArrayBuffer"
    },
    {
      "interface": "MediaKeyMessageEventInit",
      "kind": "property",
      "name": "messageType",
      "type": "MediaKeyMessageType"
    }
  ],
  "MediaKeySystemConfiguration": [
    {
      "interface": "MediaKeySystemConfiguration",
      "kind": "property",
      "name": "audioCapabilities",
      "type": "MediaKeySystemMediaCapability[]"
    },
    {
      "interface": "MediaKeySystemConfiguration",
      "kind": "property",
      "name": "distinctiveIdentifier",
      "type": "MediaKeysRequirement"
    },
    {
      "interface": "MediaKeySystemConfiguration",
      "kind": "property",
      "name": "initDataTypes",
      "type": "string[]"
    },
    {
      "interface": "MediaKeySystemConfiguration",
      "kind": "property",
      "name": "label",
      "type": "string"
    },
    {
      "interface": "MediaKeySystemConfiguration",
      "kind": "property",
      "name": "persistentState",
      "type": "MediaKeysRequirement"
    },
    {
      "interface": "MediaKeySystemConfiguration",
      "kind": "property",
      "name": "sessionTypes",
      "type": "string[]"
    },
    {
      "interface": "MediaKeySystemConfiguration",
      "kind": "property",
      "name": "videoCapabilities",
      "type": "MediaKeySystemMediaCapability[]"
    }
  ],
  "MediaKeySystemMediaCapability": [
    {
      "interface": "MediaKeySystemMediaCapability",
      "kind": "property",
      "name": "contentType",
      "type": "string"
    },
    {
      "interface": "MediaKeySystemMediaCapability",
      "kind": "property",
      "name": "encryptionScheme",
      "type": "string"
    },
    {
      "interface": "MediaKeySystemMediaCapability",
      "kind": "property",
      "name": "robustness",
      "type": "string"
    }
  ],
  "MediaKeysPolicy": [
    {
      "interface": "MediaKeysPolicy",
      "kind": "property",
      "name": "minHdcpVersion",
      "type": "string"
    }
  ],
  "MediaMetadataInit": [
    {
      "interface": "MediaMetadataInit",
      "kind": "property",
      "name": "album",
      "type": "string"
    },
    {
      "interface": "MediaMetadataInit",
      "kind": "property",
      "name": "artist",
      "type": "string"
    },
    {
      "interface": "MediaMetadataInit",
      "kind": "property",
      "name": "artwork",
      "type": "MediaImage[]"
    },
    {
      "interface": "MediaMetadataInit",
      "kind": "property",
      "name": "title",
      "type": "string"
    }
  ],
  "MediaPositionState": [
    {
      "interface": "MediaPositionState",
      "kind": "property",
      "name": "duration",
      "type": "number"
    },
    {
      "interface": "MediaPositionState",
      "kind": "property",
      "name": "playbackRate",
      "type": "number"
    },
    {
      "interface": "MediaPositionState",
      "kind": "property",
      "name": "position",
      "type": "number"
    }
  ],
  "MediaQueryListEventInit": [
    {
      "interface": "MediaQueryListEventInit",
      "kind": "property",
      "name": "matches",
      "type": "boolean"
    },
    {
      "interface": "MediaQueryListEventInit",
      "kind": "property",
      "name": "media",
      "type": "string"
    }
  ],
  "MediaRecorderOptions": [
    {
      "interface": "MediaRecorderOptions",
      "kind": "property",
      "name": "audioBitsPerSecond",
      "type": "number"
    },
    {
      "interface": "MediaRecorderOptions",
      "kind": "property",
      "name": "bitsPerSecond",
      "type": "number"
    },
    {
      "interface": "MediaRecorderOptions",
      "kind": "property",
      "name": "mimeType",
      "type": "string"
    },
    {
      "interface": "MediaRecorderOptions",
      "kind": "property",
      "name": "videoBitsPerSecond",
      "type": "number"
    }
  ],
  "MediaSessionActionDetails": [
    {
      "interface": "MediaSessionActionDetails",
      "kind": "property",
      "name": "action",
      "type": "MediaSessionAction"
    },
    {
      "interface": "MediaSessionActionDetails",
      "kind": "property",
      "name": "fastSeek",
      "type": "boolean"
    },
    {
      "interface": "MediaSessionActionDetails",
      "kind": "property",
      "name": "seekOffset",
      "type": "number"
    },
    {
      "interface": "MediaSessionActionDetails",
      "kind": "property",
      "name": "seekTime",
      "type": "number"
    }
  ],
  "MediaStreamAudioSourceOptions": [
    {
      "interface": "MediaStreamAudioSourceOptions",
      "kind": "property",
      "name": "mediaStream",
      "type": "MediaStream"
    }
  ],
  "MediaStreamConstraints": [
    {
      "interface": "MediaStreamConstraints",
      "kind": "property",
      "name": "audio",
      "type": "boolean | MediaTrackConstraints"
    },
    {
      "interface": "MediaStreamConstraints",
      "kind": "property",
      "name": "peerIdentity",
      "type": "string"
    },
    {
      "interface": "MediaStreamConstraints",
      "kind": "property",
      "name": "preferCurrentTab",
      "type": "boolean"
    },
    {
      "interface": "MediaStreamConstraints",
      "kind": "property",
      "name": "video",
      "type": "boolean | MediaTrackConstraints"
    }
  ],
  "MediaStreamTrackEventInit": [
    {
      "interface": "MediaStreamTrackEventInit",
      "kind": "property",
      "name": "track",
      "type": "MediaStreamTrack"
    }
  ],
  "MediaTrackCapabilities": [
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "aspectRatio",
      "type": "DoubleRange"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "autoGainControl",
      "type": "boolean[]"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "backgroundBlur",
      "type": "boolean[]"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "channelCount",
      "type": "ULongRange"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "deviceId",
      "type": "string"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "displaySurface",
      "type": "string"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "echoCancellation",
      "type": "boolean[]"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "facingMode",
      "type": "string[]"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "frameRate",
      "type": "DoubleRange"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "groupId",
      "type": "string"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "height",
      "type": "ULongRange"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "noiseSuppression",
      "type": "boolean[]"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "sampleRate",
      "type": "ULongRange"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "sampleSize",
      "type": "ULongRange"
    },
    {
      "interface": "MediaTrackCapabilities",
      "kind": "property",
      "name": "width",
      "type": "ULongRange"
    }
  ],
  "MediaTrackConstraintSet": [
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "aspectRatio",
      "type": "ConstrainDouble"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "autoGainControl",
      "type": "ConstrainBoolean"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "backgroundBlur",
      "type": "ConstrainBoolean"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "channelCount",
      "type": "ConstrainULong"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "deviceId",
      "type": "ConstrainDOMString"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "displaySurface",
      "type": "ConstrainDOMString"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "echoCancellation",
      "type": "ConstrainBoolean"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "facingMode",
      "type": "ConstrainDOMString"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "frameRate",
      "type": "ConstrainDouble"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "groupId",
      "type": "ConstrainDOMString"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "height",
      "type": "ConstrainULong"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "noiseSuppression",
      "type": "ConstrainBoolean"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "sampleRate",
      "type": "ConstrainULong"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "sampleSize",
      "type": "ConstrainULong"
    },
    {
      "interface": "MediaTrackConstraintSet",
      "kind": "property",
      "name": "width",
      "type": "ConstrainULong"
    }
  ],
  "MediaTrackConstraints": [
    {
      "interface": "MediaTrackConstraints",
      "kind": "property",
      "name": "advanced",
      "type": "MediaTrackConstraintSet[]"
    }
  ],
  "MediaTrackSettings": [
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "aspectRatio",
      "type": "number"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "autoGainControl",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "backgroundBlur",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "channelCount",
      "type": "number"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "deviceId",
      "type": "string"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "displaySurface",
      "type": "string"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "echoCancellation",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "facingMode",
      "type": "string"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "frameRate",
      "type": "number"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "groupId",
      "type": "string"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "height",
      "type": "number"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "noiseSuppression",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "sampleRate",
      "type": "number"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "sampleSize",
      "type": "number"
    },
    {
      "interface": "MediaTrackSettings",
      "kind": "property",
      "name": "width",
      "type": "number"
    }
  ],
  "MediaTrackSupportedConstraints": [
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "aspectRatio",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "autoGainControl",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "backgroundBlur",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "channelCount",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "deviceId",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "displaySurface",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "echoCancellation",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "facingMode",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "frameRate",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "groupId",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "height",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "noiseSuppression",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "sampleRate",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "sampleSize",
      "type": "boolean"
    },
    {
      "interface": "MediaTrackSupportedConstraints",
      "kind": "property",
      "name": "width",
      "type": "boolean"
    }
  ],
  "MessageEventInit": [
    {
      "interface": "MessageEventInit",
      "kind": "property",
      "name": "data",
      "type": "T"
    },
    {
      "interface": "MessageEventInit",
      "kind": "property",
      "name": "lastEventId",
      "type": "string"
    },
    {
      "interface": "MessageEventInit",
      "kind": "property",
      "name": "origin",
      "type": "string"
    },
    {
      "interface": "MessageEventInit",
      "kind": "property",
      "name": "ports",
      "type": "MessagePort[]"
    },
    {
      "interface": "MessageEventInit",
      "kind": "property",
      "name": "source",
      "type": "MessageEventSource"
    }
  ],
  "MouseEventInit": [
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "button",
      "type": "number"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "buttons",
      "type": "number"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "clientX",
      "type": "number"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "clientY",
      "type": "number"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "movementX",
      "type": "number"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "movementY",
      "type": "number"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "relatedTarget",
      "type": "EventTarget"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "screenX",
      "type": "number"
    },
    {
      "interface": "MouseEventInit",
      "kind": "property",
      "name": "screenY",
      "type": "number"
    }
  ],
  "MultiCacheQueryOptions": [
    {
      "interface": "MultiCacheQueryOptions",
      "kind": "property",
      "name": "cacheName",
      "type": "string"
    }
  ],
  "MutationObserverInit": [
    {
      "interface": "MutationObserverInit",
      "kind": "property",
      "name": "attributeFilter",
      "type": "string[]",
      "doc": "Set to a list of attribute local names (without namespace) if not all attribute mutations need to be observed and attributes is true or omitted."
    },
    {
      "interface": "MutationObserverInit",
      "kind": "property",
      "name": "attributeOldValue",
      "type": "boolean",
      "doc": "Set to true if attributes is true or omitted and target's attribute value before the mutation needs to be recorded."
    },
    {
      "interface": "MutationObserverInit",
      "kind": "property",
      "name": "attributes",
      "type": "boolean",
      "doc": "Set to true if mutations to target's attributes are to be observed. Can be omitted if attributeOldValue or attributeFilter is specified."
    },
    {
      "interface": "MutationObserverInit",
      "kind": "property",
      "name": "characterData",
      "type": "boolean",
      "doc": "Set to true if mutations to target's data are to be observed. Can be omitted if characterDataOldValue is specified."
    },
    {
      "interface": "MutationObserverInit",
      "kind": "property",
      "name": "characterDataOldValue",
      "type": "boolean",
      "doc": "Set to true if characterData is set to true or omitted and target's data before the mutation needs to be recorded."
    },
    {
      "interface": "MutationObserverInit",
      "kind": "property",
      "name": "childList",
      "type": "boolean",
      "doc": "Set to true if mutations to target's children are to be observed."
    },
    {
      "interface": "MutationObserverInit",
      "kind": "property",
      "name": "subtree",
      "type": "boolean",
      "doc": "Set to true if mutations to not just target, but also target's descendants are to be observed."
    }
  ],
  "NavigationPreloadState": [
    {
      "interface": "NavigationPreloadState",
      "kind": "property",
      "name": "enabled",
      "type": "boolean"
    },
    {
      "interface": "NavigationPreloadState",
      "kind": "property",
      "name": "headerValue",
      "type": "string"
    }
  ],
  "NotificationOptions": [
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "badge",
      "type": "string"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "body",
      "type": "string"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "data",
      "type": "any"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "dir",
      "type": "NotificationDirection"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "icon",
      "type": "string"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "lang",
      "type": "string"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "requireInteraction",
      "type": "boolean"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "silent",
      "type": "boolean"
    },
    {
      "interface": "NotificationOptions",
      "kind": "property",
      "name": "tag",
      "type": "string"
    }
  ],
  "OfflineAudioCompletionEventInit": [
    {
      "interface": "OfflineAudioCompletionEventInit",
      "kind": "property",
      "name": "renderedBuffer",
      "type": "AudioBuffer"
    }
  ],
  "OfflineAudioContextOptions": [
    {
      "interface": "OfflineAudioContextOptions",
      "kind": "property",
      "name": "length",
      "type": "number"
    },
    {
      "interface": "OfflineAudioContextOptions",
      "kind": "property",
      "name": "numberOfChannels",
      "type": "number"
    },
    {
      "interface": "OfflineAudioContextOptions",
      "kind": "property",
      "name": "sampleRate",
      "type": "number"
    }
  ],
  "OptionalEffectTiming": [
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "delay",
      "type": "number"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "direction",
      "type": "PlaybackDirection"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "duration",
      "type": "string | number"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "easing",
      "type": "string"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "endDelay",
      "type": "number"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "fill",
      "type": "FillMode"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "iterationStart",
      "type": "number"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "iterations",
      "type": "number"
    },
    {
      "interface": "OptionalEffectTiming",
      "kind": "property",
      "name": "playbackRate",
      "type": "number"
    }
  ],
  "OpusEncoderConfig": [
    {
      "interface": "OpusEncoderConfig",
      "kind": "property",
      "name": "complexity",
      "type": "number"
    },
    {
      "interface": "OpusEncoderConfig",
      "kind": "property",
      "name": "format",
      "type": "OpusBitstreamFormat"
    },
    {
      "interface": "OpusEncoderConfig",
      "kind": "property",
      "name": "frameDuration",
      "type": "number"
    },
    {
      "interface": "OpusEncoderConfig",
      "kind": "property",
      "name": "packetlossperc",
      "type": "number"
    },
    {
      "interface": "OpusEncoderConfig",
      "kind": "property",
      "name": "usedtx",
      "type": "boolean"
    },
    {
      "interface": "OpusEncoderConfig",
      "kind": "property",
      "name": "useinbandfec",
      "type": "boolean"
    }
  ],
  "OscillatorOptions": [
    {
      "interface": "OscillatorOptions",
      "kind": "property",
      "name": "detune",
      "type": "number"
    },
    {
      "interface": "OscillatorOptions",
      "kind": "property",
      "name": "frequency",
      "type": "number"
    },
    {
      "interface": "OscillatorOptions",
      "kind": "property",
      "name": "periodicWave",
      "type": "PeriodicWave"
    },
    {
      "interface": "OscillatorOptions",
      "kind": "property",
      "name": "type",
      "type": "OscillatorType"
    }
  ],
  "PageRevealEventInit": [
    {
      "interface": "PageRevealEventInit",
      "kind": "property",
      "name": "viewTransition",
      "type": "ViewTransition"
    }
  ],
  "PageSwapEventInit": [
    {
      "interface": "PageSwapEventInit",
      "kind": "property",
      "name": "activation",
      "type": "NavigationActivation"
    },
    {
      "interface": "PageSwapEventInit",
      "kind": "property",
      "name": "viewTransition",
      "type": "ViewTransition"
    }
  ],
  "PageTransitionEventInit": [
    {
      "interface": "PageTransitionEventInit",
      "kind": "property",
      "name": "persisted",
      "type": "boolean"
    }
  ],
  "PannerOptions": [
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "coneInnerAngle",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "coneOuterAngle",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "coneOuterGain",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "distanceModel",
      "type": "DistanceModelType"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "maxDistance",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "orientationX",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "orientationY",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "orientationZ",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "panningModel",
      "type": "PanningModelType"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "positionX",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "positionY",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "positionZ",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "refDistance",
      "type": "number"
    },
    {
      "interface": "PannerOptions",
      "kind": "property",
      "name": "rolloffFactor",
      "type": "number"
    }
  ],
  "PayerErrors": [
    {
      "interface": "PayerErrors",
      "kind": "property",
      "name": "email",
      "type": "string"
    },
    {
      "interface": "PayerErrors",
      "kind": "property",
      "name": "name",
      "type": "string"
    },
    {
      "interface": "PayerErrors",
      "kind": "property",
      "name": "phone",
      "type": "string"
    }
  ],
  "PaymentCurrencyAmount": [
    {
      "interface": "PaymentCurrencyAmount",
      "kind": "property",
      "name": "currency",
      "type": "string"
    },
    {
      "interface": "PaymentCurrencyAmount",
      "kind": "property",
      "name": "value",
      "type": "string"
    }
  ],
  "PaymentDetailsBase": [
    {
      "interface": "PaymentDetailsBase",
      "kind": "property",
      "name": "displayItems",
      "type": "PaymentItem[]"
    },
    {
      "interface": "PaymentDetailsBase",
      "kind": "property",
      "name": "modifiers",
      "type": "PaymentDetailsModifier[]"
    },
    {
      "interface": "PaymentDetailsBase",
      "kind": "property",
      "name": "shippingOptions",
      "type": "PaymentShippingOption[]"
    }
  ],
  "PaymentDetailsInit": [
    {
      "interface": "PaymentDetailsInit",
      "kind": "property",
      "name": "id",
      "type": "string"
    },
    {
      "interface": "PaymentDetailsInit",
      "kind": "property",
      "name": "total",
      "type": "PaymentItem"
    }
  ],
  "PaymentDetailsModifier": [
    {
      "interface": "PaymentDetailsModifier",
      "kind": "property",
      "name": "additionalDisplayItems",
      "type": "PaymentItem[]"
    },
    {
      "interface": "PaymentDetailsModifier",
      "kind": "property",
      "name": "data",
      "type": "any"
    },
    {
      "interface": "PaymentDetailsModifier",
      "kind": "property",
      "name": "supportedMethods",
      "type": "string"
    },
    {
      "interface": "PaymentDetailsModifier",
      "kind": "property",
      "name": "total",
      "type": "PaymentItem"
    }
  ],
  "PaymentDetailsUpdate": [
    {
      "interface": "PaymentDetailsUpdate",
      "kind": "property",
      "name": "error",
      "type": "string"
    },
    {
      "interface": "PaymentDetailsUpdate",
      "kind": "property",
      "name": "paymentMethodErrors",
      "type": "any"
    },
    {
      "interface": "PaymentDetailsUpdate",
      "kind": "property",
      "name": "shippingAddressErrors",
      "type": "AddressErrors"
    },
    {
      "interface": "PaymentDetailsUpdate",
      "kind": "property",
      "name": "total",
      "type": "PaymentItem"
    }
  ],
  "PaymentItem": [
    {
      "interface": "PaymentItem",
      "kind": "property",
      "name": "amount",
      "type": "PaymentCurrencyAmount"
    },
    {
      "interface": "PaymentItem",
      "kind": "property",
      "name": "label",
      "type": "string"
    },
    {
      "interface": "PaymentItem",
      "kind": "property",
      "name": "pending",
      "type": "boolean"
    }
  ],
  "PaymentMethodChangeEventInit": [
    {
      "interface": "PaymentMethodChangeEventInit",
      "kind": "property",
      "name": "methodDetails",
      "type": "any"
    },
    {
      "interface": "PaymentMethodChangeEventInit",
      "kind": "property",
      "name": "methodName",
      "type": "string"
    }
  ],
  "PaymentMethodData": [
    {
      "interface": "PaymentMethodData",
      "kind": "property",
      "name": "data",
      "type": "any"
    },
    {
      "interface": "PaymentMethodData",
      "kind": "property",
      "name": "supportedMethods",
      "type": "string"
    }
  ],
  "PaymentOptions": [
    {
      "interface": "PaymentOptions",
      "kind": "property",
      "name": "requestPayerEmail",
      "type": "boolean"
    },
    {
      "interface": "PaymentOptions",
      "kind": "property",
      "name": "requestPayerName",
      "type": "boolean"
    },
    {
      "interface": "PaymentOptions",
      "kind": "property",
      "name": "requestPayerPhone",
      "type": "boolean"
    },
    {
      "interface": "PaymentOptions",
      "kind": "property",
      "name": "requestShipping",
      "type": "boolean"
    },
    {
      "interface": "PaymentOptions",
      "kind": "property",
      "name": "shippingType",
      "type": "PaymentShippingType"
    }
  ],
  "PaymentShippingOption": [
    {
      "interface": "PaymentShippingOption",
      "kind": "property",
      "name": "amount",
      "type": "PaymentCurrencyAmount"
    },
    {
      "interface": "PaymentShippingOption",
      "kind": "property",
      "name": "id",
      "type": "string"
    },
    {
      "interface": "PaymentShippingOption",
      "kind": "property",
      "name": "label",
      "type": "string"
    },
    {
      "interface": "PaymentShippingOption",
      "kind": "property",
      "name": "selected",
      "type": "boolean"
    }
  ],
  "PaymentValidationErrors": [
    {
      "interface": "PaymentValidationErrors",
      "kind": "property",
      "name": "error",
      "type": "string"
    },
    {
      "interface": "PaymentValidationErrors",
      "kind": "property",
      "name": "payer",
      "type": "PayerErrors"
    },
    {
      "interface": "PaymentValidationErrors",
      "kind": "property",
      "name": "shippingAddress",
      "type": "AddressErrors"
    }
  ],
  "Pbkdf2Params": [
    {
      "interface": "Pbkdf2Params",
      "kind": "property",
      "name": "hash",
      "type": "AlgorithmIdentifier"
    },
    {
      "interface": "Pbkdf2Params",
      "kind": "property",
      "name": "iterations",
      "type": "number"
    },
    {
      "interface": "Pbkdf2Params",
      "kind": "property",
      "name": "salt",
      "type": "BufferSource"
    }
  ],
  "PerformanceMarkOptions": [
    {
      "interface": "PerformanceMarkOptions",
      "kind": "property",
      "name": "detail",
      "type": "any"
    },
    {
      "interface": "PerformanceMarkOptions",
      "kind": "property",
      "name": "startTime",
      "type": "number"
    }
  ],
  "PerformanceMeasureOptions": [
    {
      "interface": "PerformanceMeasureOptions",
      "kind": "property",
      "name": "detail",
      "type": "any"
    },
    {
      "interface": "PerformanceMeasureOptions",
      "kind": "property",
      "name": "duration",
      "type": "number"
    },
    {
      "interface": "PerformanceMeasureOptions",
      "kind": "property",
      "name": "end",
      "type": "string | number"
    },
    {
      "interface": "PerformanceMeasureOptions",
      "kind": "property",
      "name": "start",
      "type": "string | number"
    }
  ],
  "PerformanceObserverInit": [
    {
      "interface": "PerformanceObserverInit",
      "kind": "property",
      "name": "buffered",
      "type": "boolean"
    },
    {
      "interface": "PerformanceObserverInit",
      "kind": "property",
      "name": "entryTypes",
      "type": "string[]"
    },
    {
      "interface": "PerformanceObserverInit",
      "kind": "property",
      "name": "type",
      "type": "string"
    }
  ],
  "PeriodicWaveConstraints": [
    {
      "interface": "PeriodicWaveConstraints",
      "kind": "property",
      "name": "disableNormalization",
      "type": "boolean"
    }
  ],
  "PeriodicWaveOptions": [
    {
      "interface": "PeriodicWaveOptions",
      "kind": "property",
      "name": "imag",
      "type": "number[] | Float32Array<ArrayBufferLike>"
    },
    {
      "interface": "PeriodicWaveOptions",
      "kind": "property",
      "name": "real",
      "type": "number[] | Float32Array<ArrayBufferLike>"
    }
  ],
  "PermissionDescriptor": [
    {
      "interface": "PermissionDescriptor",
      "kind": "property",
      "name": "name",
      "type": "PermissionName"
    }
  ],
  "PictureInPictureEventInit": [
    {
      "interface": "PictureInPictureEventInit",
      "kind": "property",
      "name": "pictureInPictureWindow",
      "type": "PictureInPictureWindow"
    }
  ],
  "PlaneLayout": [
    {
      "interface": "PlaneLayout",
      "kind": "property",
      "name": "offset",
      "type": "number"
    },
    {
      "interface": "PlaneLayout",
      "kind": "property",
      "name": "stride",
      "type": "number"
    }
  ],
  "PointerEventInit": [
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "altitudeAngle",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "azimuthAngle",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "coalescedEvents",
      "type": "PointerEvent[]"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "height",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "isPrimary",
      "type": "boolean"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "pointerId",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "pointerType",
      "type": "string"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "predictedEvents",
      "type": "PointerEvent[]"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "pressure",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "tangentialPressure",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "tiltX",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "tiltY",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "twist",
      "type": "number"
    },
    {
      "interface": "PointerEventInit",
      "kind": "property",
      "name": "width",
      "type": "number"
    }
  ],
  "PointerLockOptions": [
    {
      "interface": "PointerLockOptions",
      "kind": "property",
      "name": "unadjustedMovement",
      "type": "boolean"
    }
  ],
  "PopStateEventInit": [
    {
      "interface": "PopStateEventInit",
      "kind": "property",
      "name": "state",
      "type": "any"
    }
  ],
  "PositionOptions": [
    {
      "interface": "PositionOptions",
      "kind": "property",
      "name": "enableHighAccuracy",
      "type": "boolean"
    },
    {
      "interface": "PositionOptions",
      "kind": "property",
      "name": "maximumAge",
      "type": "number"
    },
    {
      "interface": "PositionOptions",
      "kind": "property",
      "name": "timeout",
      "type": "number"
    }
  ],
  "ProgressEventInit": [
    {
      "interface": "ProgressEventInit",
      "kind": "property",
      "name": "lengthComputable",
      "type": "boolean"
    },
    {
      "interface": "ProgressEventInit",
      "kind": "property",
      "name": "loaded",
      "type": "number"
    },
    {
      "interface": "ProgressEventInit",
      "kind": "property",
      "name": "total",
      "type": "number"
    }
  ],
  "PromiseRejectionEventInit": [
    {
      "interface": "PromiseRejectionEventInit",
      "kind": "property",
      "name": "promise",
      "type": "Promise<any>"
    },
    {
      "interface": "PromiseRejectionEventInit",
      "kind": "property",
      "name": "reason",
      "type": "any"
    }
  ],
  "PropertyDefinition": [
    {
      "interface": "PropertyDefinition",
      "kind": "property",
      "name": "inherits",
      "type": "boolean"
    },
    {
      "interface": "PropertyDefinition",
      "kind": "property",
      "name": "initialValue",
      "type": "string"
    },
    {
      "interface": "PropertyDefinition",
      "kind": "property",
      "name": "name",
      "type": "string"
    },
    {
      "interface": "PropertyDefinition",
      "kind": "property",
      "name": "syntax",
      "type": "string"
    }
  ],
  "PropertyIndexedKeyframes": [
    {
      "interface": "PropertyIndexedKeyframes",
      "kind": "property",
      "name": "composite",
      "type": "CompositeOperationOrAuto | CompositeOperationOrAuto[]"
    },
    {
      "interface": "PropertyIndexedKeyframes",
      "kind": "property",
      "name": "easing",
      "type": "string | string[]"
    },
    {
      "interface": "PropertyIndexedKeyframes",
      "kind": "property",
      "name": "offset",
      "type": "number | number[]"
    }
  ],
  "PublicKeyCredentialCreationOptions": [
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "attestation",
      "type": "AttestationConveyancePreference"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "authenticatorSelection",
      "type": "AuthenticatorSelectionCriteria"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "challenge",
      "type": "BufferSource"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "excludeCredentials",
      "type": "PublicKeyCredentialDescriptor[]"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "extensions",
      "type": "AuthenticationExtensionsClientInputs"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "pubKeyCredParams",
      "type": "PublicKeyCredentialParameters[]"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "rp",
      "type": "PublicKeyCredentialRpEntity"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "timeout",
      "type": "number"
    },
    {
      "interface": "PublicKeyCredentialCreationOptions",
      "kind": "property",
      "name": "user",
      "type": "PublicKeyCredentialUserEntity"
    }
  ],
  "PublicKeyCredentialCreationOptionsJSON": [
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "attestation",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "authenticatorSelection",
      "type": "AuthenticatorSelectionCriteria"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "challenge",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "excludeCredentials",
      "type": "PublicKeyCredentialDescriptorJSON[]"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "extensions",
      "type": "AuthenticationExtensionsClientInputsJSON"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "hints",
      "type": "string[]"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "pubKeyCredParams",
      "type": "PublicKeyCredentialParameters[]"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "rp",
      "type": "PublicKeyCredentialRpEntity"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "timeout",
      "type": "number"
    },
    {
      "interface": "PublicKeyCredentialCreationOptionsJSON",
      "kind": "property",
      "name": "user",
      "type": "PublicKeyCredentialUserEntityJSON"
    }
  ],
  "PublicKeyCredentialDescriptor": [
    {
      "interface": "PublicKeyCredentialDescriptor",
      "kind": "property",
      "name": "id",
      "type": "BufferSource"
    },
    {
      "interface": "PublicKeyCredentialDescriptor",
      "kind": "property",
      "name": "transports",
      "type": "AuthenticatorTransport[]"
    },
    {
      "interface": "PublicKeyCredentialDescriptor",
      "kind": "property",
      "name": "type",
      "type": "\"public-key\""
    }
  ],
  "PublicKeyCredentialDescriptorJSON": [
    {
      "interface": "PublicKeyCredentialDescriptorJSON",
      "kind": "property",
      "name": "id",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialDescriptorJSON",
      "kind": "property",
      "name": "transports",
      "type": "string[]"
    },
    {
      "interface": "PublicKeyCredentialDescriptorJSON",
      "kind": "property",
      "name": "type",
      "type": "string"
    }
  ],
  "PublicKeyCredentialEntity": [
    {
      "interface": "PublicKeyCredentialEntity",
      "kind": "property",
      "name": "name",
      "type": "string"
    }
  ],
  "PublicKeyCredentialParameters": [
    {
      "interface": "PublicKeyCredentialParameters",
      "kind": "property",
      "name": "alg",
      "type": "number"
    },
    {
      "interface": "PublicKeyCredentialParameters",
      "kind": "property",
      "name": "type",
      "type": "\"public-key\""
    }
  ],
  "PublicKeyCredentialRequestOptions": [
    {
      "interface": "PublicKeyCredentialRequestOptions",
      "kind": "property",
      "name": "allowCredentials",
      "type": "PublicKeyCredentialDescriptor[]"
    },
    {
      "interface": "PublicKeyCredentialRequestOptions",
      "kind": "property",
      "name": "challenge",
      "type": "BufferSource"
    },
    {
      "interface": "PublicKeyCredentialRequestOptions",
      "kind": "property",
      "name": "extensions",
      "type": "AuthenticationExtensionsClientInputs"
    },
    {
      "interface": "PublicKeyCredentialRequestOptions",
      "kind": "property",
      "name": "rpId",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialRequestOptions",
      "kind": "property",
      "name": "timeout",
      "type": "number"
    },
    {
      "interface": "PublicKeyCredentialRequestOptions",
      "kind": "property",
      "name": "userVerification",
      "type": "UserVerificationRequirement"
    }
  ],
  "PublicKeyCredentialRequestOptionsJSON": [
    {
      "interface": "PublicKeyCredentialRequestOptionsJSON",
      "kind": "property",
      "name": "allowCredentials",
      "type": "PublicKeyCredentialDescriptorJSON[]"
    },
    {
      "interface": "PublicKeyCredentialRequestOptionsJSON",
      "kind": "property",
      "name": "challenge",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialRequestOptionsJSON",
      "kind": "property",
      "name": "extensions",
      "type": "AuthenticationExtensionsClientInputsJSON"
    },
    {
      "interface": "PublicKeyCredentialRequestOptionsJSON",
      "kind": "property",
      "name": "hints",
      "type": "string[]"
    },
    {
      "interface": "PublicKeyCredentialRequestOptionsJSON",
      "kind": "property",
      "name": "rpId",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialRequestOptionsJSON",
      "kind": "property",
      "name": "timeout",
      "type": "number"
    },
    {
      "interface": "PublicKeyCredentialRequestOptionsJSON",
      "kind": "property",
      "name": "userVerification",
      "type": "string"
    }
  ],
  "PublicKeyCredentialRpEntity": [
    {
      "interface": "PublicKeyCredentialRpEntity",
      "kind": "property",
      "name": "id",
      "type": "string"
    }
  ],
  "PublicKeyCredentialUserEntity": [
    {
      "interface": "PublicKeyCredentialUserEntity",
      "kind": "property",
      "name": "displayName",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialUserEntity",
      "kind": "property",
      "name": "id",
      "type": "BufferSource"
    }
  ],
  "PublicKeyCredentialUserEntityJSON": [
    {
      "interface": "PublicKeyCredentialUserEntityJSON",
      "kind": "property",
      "name": "displayName",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialUserEntityJSON",
      "kind": "property",
      "name": "id",
      "type": "string"
    },
    {
      "interface": "PublicKeyCredentialUserEntityJSON",
      "kind": "property",
      "name": "name",
      "type": "string"
    }
  ],
  "PushSubscriptionJSON": [
    {
      "interface": "PushSubscriptionJSON",
      "kind": "property",
      "name": "endpoint",
      "type": "string"
    },
    {
      "interface": "PushSubscriptionJSON",
      "kind": "property",
      "name": "expirationTime",
      "type": "number"
    },
    {
      "interface": "PushSubscriptionJSON",
      "kind": "property",
      "name": "keys",
      "type": "Record<string, string>"
    }
  ],
  "PushSubscriptionOptionsInit": [
    {
      "interface": "PushSubscriptionOptionsInit",
      "kind": "property",
      "name": "applicationServerKey",
      "type": "string | BufferSource"
    },
    {
      "interface": "PushSubscriptionOptionsInit",
      "kind": "property",
      "name": "userVisibleOnly",
      "type": "boolean"
    }
  ],
  "QueuingStrategy": [
    {
      "interface": "QueuingStrategy",
      "kind": "property",
      "name": "highWaterMark",
      "type": "number"
    },
    {
      "interface": "QueuingStrategy",
      "kind": "property",
      "name": "size",
      "type": "QueuingStrategySize<T>"
    }
  ],
  "QueuingStrategyInit": [
    {
      "interface": "QueuingStrategyInit",
      "kind": "property",
      "name": "highWaterMark",
      "type": "number",
      "doc": "Creates a new ByteLengthQueuingStrategy with the provided high water mark.\n\nNote that the provided high water mark will not be validated ahead of time. Instead, if it is negative, NaN, or not a number, the resulting ByteLengthQueuingStrategy will cause the corresponding stream constructor to throw."
    }
  ],
  "RTCCertificateExpiration": [
    {
      "interface": "RTCCertificateExpiration",
      "kind": "property",
      "name": "expires",
      "type": "number"
    }
  ],
  "RTCConfiguration": [
    {
      "interface": "RTCConfiguration",
      "kind": "property",
      "name": "bundlePolicy",
      "type": "RTCBundlePolicy"
    },
    {
      "interface": "RTCConfiguration",
      "kind": "property",
      "name": "certificates",
      "type": "RTCCertificate[]"
    },
    {
      "interface": "RTCConfiguration",
      "kind": "property",
      "name": "iceCandidatePoolSize",
      "type": "number"
    },
    {
      "interface": "RTCConfiguration",
      "kind": "property",
      "name": "iceServers",
      "type": "RTCIceServer[]"
    },
    {
      "interface": "RTCConfiguration",
      "kind": "property",
      "name": "iceTransportPolicy",
      "type": "RTCIceTransportPolicy"
    },
    {
      "interface": "RTCConfiguration",
      "kind": "property",
      "name": "rtcpMuxPolicy",
      "type": "\"require\""
    }
  ],
  "RTCDTMFToneChangeEventInit": [
    {
      "interface": "RTCDTMFToneChangeEventInit",
      "kind": "property",
      "name": "tone",
      "type": "string"
    }
  ],
  "RTCDataChannelEventInit": [
    {
      "interface": "RTCDataChannelEventInit",
      "kind": "property",
      "name": "channel",
      "type": "RTCDataChannel"
    }
  ],
  "RTCDataChannelInit": [
    {
      "interface": "RTCDataChannelInit",
      "kind": "property",
      "name": "id",
      "type": "number"
    },
    {
      "interface": "RTCDataChannelInit",
      "kind": "property",
      "name": "maxPacketLifeTime",
      "type": "number"
    },
    {
      "interface": "RTCDataChannelInit",
      "kind": "property",
      "name": "maxRetransmits",
      "type": "number"
    },
    {
      "interface": "RTCDataChannelInit",
      "kind": "property",
      "name": "negotiated",
      "type": "boolean"
    },
    {
      "interface": "RTCDataChannelInit",
      "kind": "property",
      "name": "ordered",
      "type": "boolean"
    },
    {
      "interface": "RTCDataChannelInit",
      "kind": "property",
      "name": "protocol",
      "type": "string"
    }
  ],
  "RTCDtlsFingerprint": [
    {
      "interface": "RTCDtlsFingerprint",
      "kind": "property",
      "name": "algorithm",
      "type": "string"
    },
    {
      "interface": "RTCDtlsFingerprint",
      "kind": "property",
      "name": "value",
      "type": "string"
    }
  ],
  "RTCEncodedAudioFrameMetadata": [
    {
      "interface": "RTCEncodedAudioFrameMetadata",
      "kind": "property",
      "name": "contributingSources",
      "type": "number[]"
    },
    {
      "interface": "RTCEncodedAudioFrameMetadata",
      "kind": "property",
      "name": "payloadType",
      "type": "number"
    },
    {
      "interface": "RTCEncodedAudioFrameMetadata",
      "kind": "property",
      "name": "sequenceNumber",
      "type": "number"
    },
    {
      "interface": "RTCEncodedAudioFrameMetadata",
      "kind": "property",
      "name": "synchronizationSource",
      "type": "number"
    }
  ],
  "RTCEncodedVideoFrameMetadata": [
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "contributingSources",
      "type": "number[]"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "dependencies",
      "type": "number[]"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "frameId",
      "type": "number"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "height",
      "type": "number"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "payloadType",
      "type": "number"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "spatialIndex",
      "type": "number"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "synchronizationSource",
      "type": "number"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "temporalIndex",
      "type": "number"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    },
    {
      "interface": "RTCEncodedVideoFrameMetadata",
      "kind": "property",
      "name": "width",
      "type": "number"
    }
  ],
  "RTCErrorEventInit": [
    {
      "interface": "RTCErrorEventInit",
      "kind": "property",
      "name": "error",
      "type": "RTCError"
    }
  ],
  "RTCErrorInit": [
    {
      "interface": "RTCErrorInit",
      "kind": "property",
      "name": "errorDetail",
      "type": "RTCErrorDetailType"
    },
    {
      "interface": "RTCErrorInit",
      "kind": "property",
      "name": "httpRequestStatusCode",
      "type": "number"
    },
    {
      "interface": "RTCErrorInit",
      "kind": "property",
      "name": "receivedAlert",
      "type": "number"
    },
    {
      "interface": "RTCErrorInit",
      "kind": "property",
      "name": "sctpCauseCode",
      "type": "number"
    },
    {
      "interface": "RTCErrorInit",
      "kind": "property",
      "name": "sdpLineNumber",
      "type": "number"
    },
    {
      "interface": "RTCErrorInit",
      "kind": "property",
      "name": "sentAlert",
      "type": "number"
    }
  ],
  "RTCIceCandidateInit": [
    {
      "interface": "RTCIceCandidateInit",
      "kind": "property",
      "name": "candidate",
      "type": "string"
    },
    {
      "interface": "RTCIceCandidateInit",
      "kind": "property",
      "name": "sdpMLineIndex",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidateInit",
      "kind": "property",
      "name": "sdpMid",
      "type": "string"
    },
    {
      "interface": "RTCIceCandidateInit",
      "kind": "property",
      "name": "usernameFragment",
      "type": "string"
    }
  ],
  "RTCIceCandidatePairStats": [
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "availableIncomingBitrate",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "availableOutgoingBitrate",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "bytesDiscardedOnSend",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "bytesReceived",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "bytesSent",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "consentRequestsSent",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "currentRoundTripTime",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "lastPacketReceivedTimestamp",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "lastPacketSentTimestamp",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "localCandidateId",
      "type": "string"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "nominated",
      "type": "boolean"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "packetsDiscardedOnSend",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "packetsReceived",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "packetsSent",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "remoteCandidateId",
      "type": "string"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "requestsReceived",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "requestsSent",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "responsesReceived",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "responsesSent",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "state",
      "type": "RTCStatsIceCandidatePairState"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "totalRoundTripTime",
      "type": "number"
    },
    {
      "interface": "RTCIceCandidatePairStats",
      "kind": "property",
      "name": "transportId",
      "type": "string"
    }
  ],
  "RTCIceServer": [
    {
      "interface": "RTCIceServer",
      "kind": "property",
      "name": "credential",
      "type": "string"
    },
    {
      "interface": "RTCIceServer",
      "kind": "property",
      "name": "urls",
      "type": "string | string[]"
    },
    {
      "interface": "RTCIceServer",
      "kind": "property",
      "name": "username",
      "type": "string"
    }
  ],
  "RTCInboundRtpStreamStats": [
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "audioLevel",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "bytesReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "concealedSamples",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "concealmentEvents",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "decoderImplementation",
      "type": "string"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "estimatedPlayoutTimestamp",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "fecBytesReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "fecPacketsDiscarded",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "fecPacketsReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "fecSsrc",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "firCount",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "frameHeight",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "frameWidth",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "framesAssembledFromMultiplePackets",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "framesDecoded",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "framesDropped",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "framesPerSecond",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "framesReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "framesRendered",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "freezeCount",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "headerBytesReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "insertedSamplesForDeceleration",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "jitterBufferDelay",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "jitterBufferEmittedCount",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "jitterBufferMinimumDelay",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "jitterBufferTargetDelay",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "keyFramesDecoded",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "lastPacketReceivedTimestamp",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "mid",
      "type": "string"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "nackCount",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "packetsDiscarded",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "pauseCount",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "playoutId",
      "type": "string"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "pliCount",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "qpSum",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "remoteId",
      "type": "string"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "removedSamplesForAcceleration",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "retransmittedBytesReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "retransmittedPacketsReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "rtxSsrc",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "silentConcealedSamples",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalAssemblyTime",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalAudioEnergy",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalDecodeTime",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalFreezesDuration",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalInterFrameDelay",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalPausesDuration",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalProcessingDelay",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalSamplesDuration",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalSamplesReceived",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "totalSquaredInterFrameDelay",
      "type": "number"
    },
    {
      "interface": "RTCInboundRtpStreamStats",
      "kind": "property",
      "name": "trackIdentifier",
      "type": "string"
    }
  ],
  "RTCLocalSessionDescriptionInit": [
    {
      "interface": "RTCLocalSessionDescriptionInit",
      "kind": "property",
      "name": "sdp",
      "type": "string"
    },
    {
      "interface": "RTCLocalSessionDescriptionInit",
      "kind": "property",
      "name": "type",
      "type": "RTCSdpType"
    }
  ],
  "RTCOfferOptions": [
    {
      "interface": "RTCOfferOptions",
      "kind": "property",
      "name": "iceRestart",
      "type": "boolean"
    },
    {
      "interface": "RTCOfferOptions",
      "kind": "property",
      "name": "offerToReceiveAudio",
      "type": "boolean"
    },
    {
      "interface": "RTCOfferOptions",
      "kind": "property",
      "name": "offerToReceiveVideo",
      "type": "boolean"
    }
  ],
  "RTCOutboundRtpStreamStats": [
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "active",
      "type": "boolean"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "firCount",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "frameHeight",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "frameWidth",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "framesEncoded",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "framesPerSecond",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "framesSent",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "headerBytesSent",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "hugeFramesSent",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "keyFramesEncoded",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "mediaSourceId",
      "type": "string"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "mid",
      "type": "string"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "nackCount",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "pliCount",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "qpSum",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "qualityLimitationDurations",
      "type": "Record<string, number>"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "qualityLimitationReason",
      "type": "RTCQualityLimitationReason"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "qualityLimitationResolutionChanges",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "remoteId",
      "type": "string"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "retransmittedBytesSent",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "retransmittedPacketsSent",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "rid",
      "type": "string"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "rtxSsrc",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "scalabilityMode",
      "type": "string"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "targetBitrate",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "totalEncodeTime",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "totalEncodedBytesTarget",
      "type": "number"
    },
    {
      "interface": "RTCOutboundRtpStreamStats",
      "kind": "property",
      "name": "totalPacketSendDelay",
      "type": "number"
    }
  ],
  "RTCPeerConnectionIceErrorEventInit": [
    {
      "interface": "RTCPeerConnectionIceErrorEventInit",
      "kind": "property",
      "name": "address",
      "type": "string"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEventInit",
      "kind": "property",
      "name": "errorCode",
      "type": "number"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEventInit",
      "kind": "property",
      "name": "errorText",
      "type": "string"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEventInit",
      "kind": "property",
      "name": "port",
      "type": "number"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEventInit",
      "kind": "property",
      "name": "url",
      "type": "string"
    }
  ],
  "RTCPeerConnectionIceEventInit": [
    {
      "interface": "RTCPeerConnectionIceEventInit",
      "kind": "property",
      "name": "candidate",
      "type": "RTCIceCandidate"
    },
    {
      "interface": "RTCPeerConnectionIceEventInit",
      "kind": "property",
      "name": "url",
      "type": "string"
    }
  ],
  "RTCReceivedRtpStreamStats": [
    {
      "interface": "RTCReceivedRtpStreamStats",
      "kind": "property",
      "name": "jitter",
      "type": "number"
    },
    {
      "interface": "RTCReceivedRtpStreamStats",
      "kind": "property",
      "name": "packetsLost",
      "type": "number"
    },
    {
      "interface": "RTCReceivedRtpStreamStats",
      "kind": "property",
      "name": "packetsReceived",
      "type": "number"
    }
  ],
  "RTCRtcpParameters": [
    {
      "interface": "RTCRtcpParameters",
      "kind": "property",
      "name": "cname",
      "type": "string"
    },
    {
      "interface": "RTCRtcpParameters",
      "kind": "property",
      "name": "reducedSize",
      "type": "boolean"
    }
  ],
  "RTCRtpCapabilities": [
    {
      "interface": "RTCRtpCapabilities",
      "kind": "property",
      "name": "codecs",
      "type": "RTCRtpCodec[]"
    },
    {
      "interface": "RTCRtpCapabilities",
      "kind": "property",
      "name": "headerExtensions",
      "type": "RTCRtpHeaderExtensionCapability[]"
    }
  ],
  "RTCRtpCodec": [
    {
      "interface": "RTCRtpCodec",
      "kind": "property",
      "name": "channels",
      "type": "number"
    },
    {
      "interface": "RTCRtpCodec",
      "kind": "property",
      "name": "clockRate",
      "type": "number"
    },
    {
      "interface": "RTCRtpCodec",
      "kind": "property",
      "name": "mimeType",
      "type": "string"
    },
    {
      "interface": "RTCRtpCodec",
      "kind": "property",
      "name": "sdpFmtpLine",
      "type": "string"
    }
  ],
  "RTCRtpCodecParameters": [
    {
      "interface": "RTCRtpCodecParameters",
      "kind": "property",
      "name": "payloadType",
      "type": "number"
    }
  ],
  "RTCRtpCodingParameters": [
    {
      "interface": "RTCRtpCodingParameters",
      "kind": "property",
      "name": "rid",
      "type": "string"
    }
  ],
  "RTCRtpContributingSource": [
    {
      "interface": "RTCRtpContributingSource",
      "kind": "property",
      "name": "audioLevel",
      "type": "number"
    },
    {
      "interface": "RTCRtpContributingSource",
      "kind": "property",
      "name": "rtpTimestamp",
      "type": "number"
    },
    {
      "interface": "RTCRtpContributingSource",
      "kind": "property",
      "name": "source",
      "type": "number"
    },
    {
      "interface": "RTCRtpContributingSource",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    }
  ],
  "RTCRtpEncodingParameters": [
    {
      "interface": "RTCRtpEncodingParameters",
      "kind": "property",
      "name": "active",
      "type": "boolean"
    },
    {
      "interface": "RTCRtpEncodingParameters",
      "kind": "property",
      "name": "maxBitrate",
      "type": "number"
    },
    {
      "interface": "RTCRtpEncodingParameters",
      "kind": "property",
      "name": "maxFramerate",
      "type": "number"
    },
    {
      "interface": "RTCRtpEncodingParameters",
      "kind": "property",
      "name": "networkPriority",
      "type": "RTCPriorityType"
    },
    {
      "interface": "RTCRtpEncodingParameters",
      "kind": "property",
      "name": "priority",
      "type": "RTCPriorityType"
    },
    {
      "interface": "RTCRtpEncodingParameters",
      "kind": "property",
      "name": "scaleResolutionDownBy",
      "type": "number"
    }
  ],
  "RTCRtpHeaderExtensionCapability": [
    {
      "interface": "RTCRtpHeaderExtensionCapability",
      "kind": "property",
      "name": "uri",
      "type": "string"
    }
  ],
  "RTCRtpHeaderExtensionParameters": [
    {
      "interface": "RTCRtpHeaderExtensionParameters",
      "kind": "property",
      "name": "encrypted",
      "type": "boolean"
    },
    {
      "interface": "RTCRtpHeaderExtensionParameters",
      "kind": "property",
      "name": "id",
      "type": "number"
    },
    {
      "interface": "RTCRtpHeaderExtensionParameters",
      "kind": "property",
      "name": "uri",
      "type": "string"
    }
  ],
  "RTCRtpParameters": [
    {
      "interface": "RTCRtpParameters",
      "kind": "property",
      "name": "codecs",
      "type": "RTCRtpCodecParameters[]"
    },
    {
      "interface": "RTCRtpParameters",
      "kind": "property",
      "name": "headerExtensions",
      "type": "RTCRtpHeaderExtensionParameters[]"
    },
    {
      "interface": "RTCRtpParameters",
      "kind": "property",
      "name": "rtcp",
      "type": "RTCRtcpParameters"
    }
  ],
  "RTCRtpSendParameters": [
    {
      "interface": "RTCRtpSendParameters",
      "kind": "property",
      "name": "degradationPreference",
      "type": "RTCDegradationPreference"
    },
    {
      "interface": "RTCRtpSendParameters",
      "kind": "property",
      "name": "encodings",
      "type": "RTCRtpEncodingParameters[]"
    },
    {
      "interface": "RTCRtpSendParameters",
      "kind": "property",
      "name": "transactionId",
      "type": "string"
    }
  ],
  "RTCRtpStreamStats": [
    {
      "interface": "RTCRtpStreamStats",
      "kind": "property",
      "name": "codecId",
      "type": "string"
    },
    {
      "interface": "RTCRtpStreamStats",
      "kind": "property",
      "name": "kind",
      "type": "string"
    },
    {
      "interface": "RTCRtpStreamStats",
      "kind": "property",
      "name": "ssrc",
      "type": "number"
    },
    {
      "interface": "RTCRtpStreamStats",
      "kind": "property",
      "name": "transportId",
      "type": "string"
    }
  ],
  "RTCRtpTransceiverInit": [
    {
      "interface": "RTCRtpTransceiverInit",
      "kind": "property",
      "name": "direction",
      "type": "RTCRtpTransceiverDirection"
    },
    {
      "interface": "RTCRtpTransceiverInit",
      "kind": "property",
      "name": "sendEncodings",
      "type": "RTCRtpEncodingParameters[]"
    },
    {
      "interface": "RTCRtpTransceiverInit",
      "kind": "property",
      "name": "streams",
      "type": "MediaStream[]"
    }
  ],
  "RTCSentRtpStreamStats": [
    {
      "interface": "RTCSentRtpStreamStats",
      "kind": "property",
      "name": "bytesSent",
      "type": "number"
    },
    {
      "interface": "RTCSentRtpStreamStats",
      "kind": "property",
      "name": "packetsSent",
      "type": "number"
    }
  ],
  "RTCSessionDescriptionInit": [
    {
      "interface": "RTCSessionDescriptionInit",
      "kind": "property",
      "name": "sdp",
      "type": "string"
    },
    {
      "interface": "RTCSessionDescriptionInit",
      "kind": "property",
      "name": "type",
      "type": "RTCSdpType"
    }
  ],
  "RTCStats": [
    {
      "interface": "RTCStats",
      "kind": "property",
      "name": "id",
      "type": "string"
    },
    {
      "interface": "RTCStats",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    },
    {
      "interface": "RTCStats",
      "kind": "property",
      "name": "type",
      "type": "RTCStatsType"
    }
  ],
  "RTCTrackEventInit": [
    {
      "interface": "RTCTrackEventInit",
      "kind": "property",
      "name": "receiver",
      "type": "RTCRtpReceiver"
    },
    {
      "interface": "RTCTrackEventInit",
      "kind": "property",
      "name": "streams",
      "type": "MediaStream[]"
    },
    {
      "interface": "RTCTrackEventInit",
      "kind": "property",
      "name": "track",
      "type": "MediaStreamTrack"
    },
    {
      "interface": "RTCTrackEventInit",
      "kind": "property",
      "name": "transceiver",
      "type": "RTCRtpTransceiver"
    }
  ],
  "RTCTransportStats": [
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "bytesReceived",
      "type": "number"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "bytesSent",
      "type": "number"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "dtlsCipher",
      "type": "string"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "dtlsRole",
      "type": "RTCDtlsRole"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "dtlsState",
      "type": "RTCDtlsTransportState"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "iceLocalUsernameFragment",
      "type": "string"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "iceRole",
      "type": "RTCIceRole"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "iceState",
      "type": "RTCIceTransportState"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "localCertificateId",
      "type": "string"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "packetsReceived",
      "type": "number"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "packetsSent",
      "type": "number"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "remoteCertificateId",
      "type": "string"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "selectedCandidatePairChanges",
      "type": "number"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "selectedCandidatePairId",
      "type": "string"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "srtpCipher",
      "type": "string"
    },
    {
      "interface": "RTCTransportStats",
      "kind": "property",
      "name": "tlsVersion",
      "type": "string"
    }
  ],
  "ReadableStreamGetReaderOptions": [
    {
      "interface": "ReadableStreamGetReaderOptions",
      "kind": "property",
      "name": "mode",
      "type": "\"byob\"",
      "doc": "Creates a ReadableStreamBYOBReader and locks the stream to the new reader.\n\nThis call behaves the same way as the no-argument variant, except that it only works on readable byte streams, i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading. The returned BYOB reader provides the ability to directly read individual chunks from the stream via its read() method, into developer-supplied buffers, allowing more precise control over allocation."
    }
  ],
  "ReadableStreamIteratorOptions": [
    {
      "interface": "ReadableStreamIteratorOptions",
      "kind": "property",
      "name": "preventCancel",
      "type": "boolean",
      "doc": "Asynchronously iterates over the chunks in the stream's internal queue.\n\nAsynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader. The lock will be released if the async iterator's return() method is called, e.g. by breaking out of the loop.\n\nBy default, calling the async iterator's return() method will also cancel the stream. To prevent this, use the stream's values() method, passing true for the preventCancel option."
    }
  ],
  "ReadableStreamReadDoneResult": [
    {
      "interface": "ReadableStreamReadDoneResult",
      "kind": "property",
      "name": "done",
      "type": "true"
    },
    {
      "interface": "ReadableStreamReadDoneResult",
      "kind": "property",
      "name": "value",
      "type": "T"
    }
  ],
  "ReadableStreamReadValueResult": [
    {
      "interface": "ReadableStreamReadValueResult",
      "kind": "property",
      "name": "done",
      "type": "false"
    },
    {
      "interface": "ReadableStreamReadValueResult",
      "kind": "property",
      "name": "value",
      "type": "T"
    }
  ],
  "ReadableWritablePair": [
    {
      "interface": "ReadableWritablePair",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<R>"
    },
    {
      "interface": "ReadableWritablePair",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<W>",
      "doc": "Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.\n\nPiping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader."
    }
  ],
  "RegistrationOptions": [
    {
      "interface": "RegistrationOptions",
      "kind": "property",
      "name": "scope",
      "type": "string"
    },
    {
      "interface": "RegistrationOptions",
      "kind": "property",
      "name": "type",
      "type": "WorkerType"
    },
    {
      "interface": "RegistrationOptions",
      "kind": "property",
      "name": "updateViaCache",
      "type": "ServiceWorkerUpdateViaCache"
    }
  ],
  "ReportingObserverOptions": [
    {
      "interface": "ReportingObserverOptions",
      "kind": "property",
      "name": "buffered",
      "type": "boolean"
    },
    {
      "interface": "ReportingObserverOptions",
      "kind": "property",
      "name": "types",
      "type": "string[]"
    }
  ],
  "RequestInit": [
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "body",
      "type": "BodyInit",
      "doc": "A BodyInit object or null to set request's body."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "cache",
      "type": "RequestCache",
      "doc": "A string indicating how the request will interact with the browser's cache to set request's cache."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "credentials",
      "type": "RequestCredentials",
      "doc": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "headers",
      "type": "HeadersInit",
      "doc": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "integrity",
      "type": "string",
      "doc": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "keepalive",
      "type": "boolean",
      "doc": "A boolean to set request's keepalive."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "method",
      "type": "string",
      "doc": "A string to set request's method."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "mode",
      "type": "RequestMode",
      "doc": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "priority",
      "type": "RequestPriority"
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "redirect",
      "type": "RequestRedirect",
      "doc": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "referrer",
      "type": "string",
      "doc": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "ReferrerPolicy",
      "doc": "A referrer policy to set request's referrerPolicy."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal",
      "doc": "An AbortSignal to set request's signal."
    },
    {
      "interface": "RequestInit",
      "kind": "property",
      "name": "window",
      "type": "null",
      "doc": "Can only be null. Used to disassociate request from any Window."
    }
  ],
  "ResizeObserverOptions": [
    {
      "interface": "ResizeObserverOptions",
      "kind": "property",
      "name": "box",
      "type": "ResizeObserverBoxOptions"
    }
  ],
  "ResponseInit": [
    {
      "interface": "ResponseInit",
      "kind": "property",
      "name": "headers",
      "type": "HeadersInit"
    },
    {
      "interface": "ResponseInit",
      "kind": "property",
      "name": "status",
      "type": "number"
    },
    {
      "interface": "ResponseInit",
      "kind": "property",
      "name": "statusText",
      "type": "string"
    }
  ],
  "RsaHashedImportParams": [
    {
      "interface": "RsaHashedImportParams",
      "kind": "property",
      "name": "hash",
      "type": "AlgorithmIdentifier"
    }
  ],
  "RsaHashedKeyAlgorithm": [
    {
      "interface": "RsaHashedKeyAlgorithm",
      "kind": "property",
      "name": "hash",
      "type": "KeyAlgorithm"
    }
  ],
  "RsaHashedKeyGenParams": [
    {
      "interface": "RsaHashedKeyGenParams",
      "kind": "property",
      "name": "hash",
      "type": "AlgorithmIdentifier"
    }
  ],
  "RsaKeyAlgorithm": [
    {
      "interface": "RsaKeyAlgorithm",
      "kind": "property",
      "name": "modulusLength",
      "type": "number"
    },
    {
      "interface": "RsaKeyAlgorithm",
      "kind": "property",
      "name": "publicExponent",
      "type": "BigInteger"
    }
  ],
  "RsaKeyGenParams": [
    {
      "interface": "RsaKeyGenParams",
      "kind": "property",
      "name": "modulusLength",
      "type": "number"
    },
    {
      "interface": "RsaKeyGenParams",
      "kind": "property",
      "name": "publicExponent",
      "type": "BigInteger"
    }
  ],
  "RsaOaepParams": [
    {
      "interface": "RsaOaepParams",
      "kind": "property",
      "name": "label",
      "type": "BufferSource"
    }
  ],
  "RsaOtherPrimesInfo": [
    {
      "interface": "RsaOtherPrimesInfo",
      "kind": "property",
      "name": "d",
      "type": "string"
    },
    {
      "interface": "RsaOtherPrimesInfo",
      "kind": "property",
      "name": "r",
      "type": "string"
    },
    {
      "interface": "RsaOtherPrimesInfo",
      "kind": "property",
      "name": "t",
      "type": "string"
    }
  ],
  "RsaPssParams": [
    {
      "interface": "RsaPssParams",
      "kind": "property",
      "name": "saltLength",
      "type": "number"
    }
  ],
  "SVGBoundingBoxOptions": [
    {
      "interface": "SVGBoundingBoxOptions",
      "kind": "property",
      "name": "clipped",
      "type": "boolean"
    },
    {
      "interface": "SVGBoundingBoxOptions",
      "kind": "property",
      "name": "fill",
      "type": "boolean"
    },
    {
      "interface": "SVGBoundingBoxOptions",
      "kind": "property",
      "name": "markers",
      "type": "boolean"
    },
    {
      "interface": "SVGBoundingBoxOptions",
      "kind": "property",
      "name": "stroke",
      "type": "boolean"
    }
  ],
  "ScrollIntoViewOptions": [
    {
      "interface": "ScrollIntoViewOptions",
      "kind": "property",
      "name": "block",
      "type": "ScrollLogicalPosition"
    },
    {
      "interface": "ScrollIntoViewOptions",
      "kind": "property",
      "name": "inline",
      "type": "ScrollLogicalPosition"
    }
  ],
  "ScrollOptions": [
    {
      "interface": "ScrollOptions",
      "kind": "property",
      "name": "behavior",
      "type": "ScrollBehavior"
    }
  ],
  "ScrollToOptions": [
    {
      "interface": "ScrollToOptions",
      "kind": "property",
      "name": "left",
      "type": "number"
    },
    {
      "interface": "ScrollToOptions",
      "kind": "property",
      "name": "top",
      "type": "number"
    }
  ],
  "SecurityPolicyViolationEventInit": [
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "blockedURI",
      "type": "string"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "columnNumber",
      "type": "number"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "disposition",
      "type": "SecurityPolicyViolationEventDisposition"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "documentURI",
      "type": "string"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "effectiveDirective",
      "type": "string"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "lineNumber",
      "type": "number"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "originalPolicy",
      "type": "string"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "referrer",
      "type": "string"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "sample",
      "type": "string"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "sourceFile",
      "type": "string"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "statusCode",
      "type": "number"
    },
    {
      "interface": "SecurityPolicyViolationEventInit",
      "kind": "property",
      "name": "violatedDirective",
      "type": "string"
    }
  ],
  "ShadowRootInit": [
    {
      "interface": "ShadowRootInit",
      "kind": "property",
      "name": "delegatesFocus",
      "type": "boolean"
    },
    {
      "interface": "ShadowRootInit",
      "kind": "property",
      "name": "mode",
      "type": "ShadowRootMode"
    },
    {
      "interface": "ShadowRootInit",
      "kind": "property",
      "name": "serializable",
      "type": "boolean"
    },
    {
      "interface": "ShadowRootInit",
      "kind": "property",
      "name": "slotAssignment",
      "type": "SlotAssignmentMode"
    }
  ],
  "ShareData": [
    {
      "interface": "ShareData",
      "kind": "property",
      "name": "files",
      "type": "File[]"
    },
    {
      "interface": "ShareData",
      "kind": "property",
      "name": "text",
      "type": "string"
    },
    {
      "interface": "ShareData",
      "kind": "property",
      "name": "title",
      "type": "string"
    },
    {
      "interface": "ShareData",
      "kind": "property",
      "name": "url",
      "type": "string"
    }
  ],
  "SpeechSynthesisErrorEventInit": [
    {
      "interface": "SpeechSynthesisErrorEventInit",
      "kind": "property",
      "name": "error",
      "type": "SpeechSynthesisErrorCode"
    }
  ],
  "SpeechSynthesisEventInit": [
    {
      "interface": "SpeechSynthesisEventInit",
      "kind": "property",
      "name": "charIndex",
      "type": "number"
    },
    {
      "interface": "SpeechSynthesisEventInit",
      "kind": "property",
      "name": "charLength",
      "type": "number"
    },
    {
      "interface": "SpeechSynthesisEventInit",
      "kind": "property",
      "name": "elapsedTime",
      "type": "number"
    },
    {
      "interface": "SpeechSynthesisEventInit",
      "kind": "property",
      "name": "name",
      "type": "string"
    },
    {
      "interface": "SpeechSynthesisEventInit",
      "kind": "property",
      "name": "utterance",
      "type": "SpeechSynthesisUtterance"
    }
  ],
  "StaticRangeInit": [
    {
      "interface": "StaticRangeInit",
      "kind": "property",
      "name": "endContainer",
      "type": "Node"
    },
    {
      "interface": "StaticRangeInit",
      "kind": "property",
      "name": "endOffset",
      "type": "number"
    },
    {
      "interface": "StaticRangeInit",
      "kind": "property",
      "name": "startContainer",
      "type": "Node"
    },
    {
      "interface": "StaticRangeInit",
      "kind": "property",
      "name": "startOffset",
      "type": "number"
    }
  ],
  "StereoPannerOptions": [
    {
      "interface": "StereoPannerOptions",
      "kind": "property",
      "name": "pan",
      "type": "number"
    }
  ],
  "StorageEstimate": [
    {
      "interface": "StorageEstimate",
      "kind": "property",
      "name": "quota",
      "type": "number"
    },
    {
      "interface": "StorageEstimate",
      "kind": "property",
      "name": "usage",
      "type": "number"
    }
  ],
  "StorageEventInit": [
    {
      "interface": "StorageEventInit",
      "kind": "property",
      "name": "key",
      "type": "string"
    },
    {
      "interface": "StorageEventInit",
      "kind": "property",
      "name": "newValue",
      "type": "string"
    },
    {
      "interface": "StorageEventInit",
      "kind": "property",
      "name": "oldValue",
      "type": "string"
    },
    {
      "interface": "StorageEventInit",
      "kind": "property",
      "name": "storageArea",
      "type": "Storage"
    },
    {
      "interface": "StorageEventInit",
      "kind": "property",
      "name": "url",
      "type": "string"
    }
  ],
  "StreamPipeOptions": [
    {
      "interface": "StreamPipeOptions",
      "kind": "property",
      "name": "preventAbort",
      "type": "boolean"
    },
    {
      "interface": "StreamPipeOptions",
      "kind": "property",
      "name": "preventCancel",
      "type": "boolean"
    },
    {
      "interface": "StreamPipeOptions",
      "kind": "property",
      "name": "preventClose",
      "type": "boolean",
      "doc": "Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.\n\nPiping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n\nErrors and closures of the source and destination streams propagate as follows:\n\nAn error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source's error, or with any error that occurs during aborting the destination.\n\nAn error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination's error, or with any error that occurs during canceling the source.\n\nWhen this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n\nIf destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n\nThe signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set."
    },
    {
      "interface": "StreamPipeOptions",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal"
    }
  ],
  "StructuredSerializeOptions": [
    {
      "interface": "StructuredSerializeOptions",
      "kind": "property",
      "name": "transfer",
      "type": "Transferable[]"
    }
  ],
  "SubmitEventInit": [
    {
      "interface": "SubmitEventInit",
      "kind": "property",
      "name": "submitter",
      "type": "HTMLElement"
    }
  ],
  "TextDecodeOptions": [
    {
      "interface": "TextDecodeOptions",
      "kind": "property",
      "name": "stream",
      "type": "boolean"
    }
  ],
  "TextDecoderOptions": [
    {
      "interface": "TextDecoderOptions",
      "kind": "property",
      "name": "fatal",
      "type": "boolean"
    },
    {
      "interface": "TextDecoderOptions",
      "kind": "property",
      "name": "ignoreBOM",
      "type": "boolean"
    }
  ],
  "TextEncoderEncodeIntoResult": [
    {
      "interface": "TextEncoderEncodeIntoResult",
      "kind": "property",
      "name": "read",
      "type": "number"
    },
    {
      "interface": "TextEncoderEncodeIntoResult",
      "kind": "property",
      "name": "written",
      "type": "number"
    }
  ],
  "ToggleEventInit": [
    {
      "interface": "ToggleEventInit",
      "kind": "property",
      "name": "newState",
      "type": "string"
    },
    {
      "interface": "ToggleEventInit",
      "kind": "property",
      "name": "oldState",
      "type": "string"
    }
  ],
  "TouchEventInit": [
    {
      "interface": "TouchEventInit",
      "kind": "property",
      "name": "changedTouches",
      "type": "Touch[]"
    },
    {
      "interface": "TouchEventInit",
      "kind": "property",
      "name": "targetTouches",
      "type": "Touch[]"
    },
    {
      "interface": "TouchEventInit",
      "kind": "property",
      "name": "touches",
      "type": "Touch[]"
    }
  ],
  "TouchInit": [
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "altitudeAngle",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "azimuthAngle",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "clientX",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "clientY",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "force",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "identifier",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "pageX",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "pageY",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "radiusX",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "radiusY",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "rotationAngle",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "screenX",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "screenY",
      "type": "number"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "target",
      "type": "EventTarget"
    },
    {
      "interface": "TouchInit",
      "kind": "property",
      "name": "touchType",
      "type": "TouchType"
    }
  ],
  "TrackEventInit": [
    {
      "interface": "TrackEventInit",
      "kind": "property",
      "name": "track",
      "type": "TextTrack"
    }
  ],
  "Transformer": [
    {
      "interface": "Transformer",
      "kind": "property",
      "name": "flush",
      "type": "TransformerFlushCallback<O>"
    },
    {
      "interface": "Transformer",
      "kind": "property",
      "name": "readableType",
      "type": "undefined"
    },
    {
      "interface": "Transformer",
      "kind": "property",
      "name": "start",
      "type": "TransformerStartCallback<O>"
    },
    {
      "interface": "Transformer",
      "kind": "property",
      "name": "transform",
      "type": "TransformerTransformCallback<I, O>"
    },
    {
      "interface": "Transformer",
      "kind": "property",
      "name": "writableType",
      "type": "undefined"
    }
  ],
  "TransitionEventInit": [
    {
      "interface": "TransitionEventInit",
      "kind": "property",
      "name": "elapsedTime",
      "type": "number"
    },
    {
      "interface": "TransitionEventInit",
      "kind": "property",
      "name": "propertyName",
      "type": "string"
    },
    {
      "interface": "TransitionEventInit",
      "kind": "property",
      "name": "pseudoElement",
      "type": "string"
    }
  ],
  "UIEventInit": [
    {
      "interface": "UIEventInit",
      "kind": "property",
      "name": "detail",
      "type": "number"
    },
    {
      "interface": "UIEventInit",
      "kind": "property",
      "name": "view",
      "type": "Window"
    },
    {
      "interface": "UIEventInit",
      "kind": "property",
      "name": "which",
      "type": "number"
    }
  ],
  "ULongRange": [
    {
      "interface": "ULongRange",
      "kind": "property",
      "name": "max",
      "type": "number"
    },
    {
      "interface": "ULongRange",
      "kind": "property",
      "name": "min",
      "type": "number"
    }
  ],
  "UnderlyingByteSource": [
    {
      "interface": "UnderlyingByteSource",
      "kind": "property",
      "name": "autoAllocateChunkSize",
      "type": "number"
    },
    {
      "interface": "UnderlyingByteSource",
      "kind": "property",
      "name": "cancel",
      "type": "UnderlyingSourceCancelCallback"
    },
    {
      "interface": "UnderlyingByteSource",
      "kind": "property",
      "name": "pull",
      "type": "(controller: ReadableByteStreamController) => void | PromiseLike<void>"
    },
    {
      "interface": "UnderlyingByteSource",
      "kind": "property",
      "name": "start",
      "type": "(controller: ReadableByteStreamController) => any"
    },
    {
      "interface": "UnderlyingByteSource",
      "kind": "property",
      "name": "type",
      "type": "\"bytes\""
    }
  ],
  "UnderlyingDefaultSource": [
    {
      "interface": "UnderlyingDefaultSource",
      "kind": "property",
      "name": "cancel",
      "type": "UnderlyingSourceCancelCallback"
    },
    {
      "interface": "UnderlyingDefaultSource",
      "kind": "property",
      "name": "pull",
      "type": "(controller: ReadableStreamDefaultController<R>) => void | PromiseLike<void>"
    },
    {
      "interface": "UnderlyingDefaultSource",
      "kind": "property",
      "name": "start",
      "type": "(controller: ReadableStreamDefaultController<R>) => any"
    },
    {
      "interface": "UnderlyingDefaultSource",
      "kind": "property",
      "name": "type",
      "type": "undefined"
    }
  ],
  "UnderlyingSink": [
    {
      "interface": "UnderlyingSink",
      "kind": "property",
      "name": "abort",
      "type": "UnderlyingSinkAbortCallback"
    },
    {
      "interface": "UnderlyingSink",
      "kind": "property",
      "name": "close",
      "type": "UnderlyingSinkCloseCallback"
    },
    {
      "interface": "UnderlyingSink",
      "kind": "property",
      "name": "start",
      "type": "UnderlyingSinkStartCallback"
    },
    {
      "interface": "UnderlyingSink",
      "kind": "property",
      "name": "type",
      "type": "undefined"
    },
    {
      "interface": "UnderlyingSink",
      "kind": "property",
      "name": "write",
      "type": "UnderlyingSinkWriteCallback<W>"
    }
  ],
  "UnderlyingSource": [
    {
      "interface": "UnderlyingSource",
      "kind": "property",
      "name": "autoAllocateChunkSize",
      "type": "number"
    },
    {
      "interface": "UnderlyingSource",
      "kind": "property",
      "name": "cancel",
      "type": "UnderlyingSourceCancelCallback"
    },
    {
      "interface": "UnderlyingSource",
      "kind": "property",
      "name": "pull",
      "type": "UnderlyingSourcePullCallback<R>"
    },
    {
      "interface": "UnderlyingSource",
      "kind": "property",
      "name": "start",
      "type": "UnderlyingSourceStartCallback<R>"
    },
    {
      "interface": "UnderlyingSource",
      "kind": "property",
      "name": "type",
      "type": "\"bytes\""
    }
  ],
  "ValidityStateFlags": [
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "badInput",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "customError",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "patternMismatch",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "rangeOverflow",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "rangeUnderflow",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "stepMismatch",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "tooLong",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "tooShort",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "typeMismatch",
      "type": "boolean"
    },
    {
      "interface": "ValidityStateFlags",
      "kind": "property",
      "name": "valueMissing",
      "type": "boolean"
    }
  ],
  "VideoColorSpaceInit": [
    {
      "interface": "VideoColorSpaceInit",
      "kind": "property",
      "name": "fullRange",
      "type": "boolean"
    },
    {
      "interface": "VideoColorSpaceInit",
      "kind": "property",
      "name": "matrix",
      "type": "VideoMatrixCoefficients"
    },
    {
      "interface": "VideoColorSpaceInit",
      "kind": "property",
      "name": "primaries",
      "type": "VideoColorPrimaries"
    },
    {
      "interface": "VideoColorSpaceInit",
      "kind": "property",
      "name": "transfer",
      "type": "VideoTransferCharacteristics"
    }
  ],
  "VideoConfiguration": [
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "bitrate",
      "type": "number"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "colorGamut",
      "type": "ColorGamut"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "contentType",
      "type": "string"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "framerate",
      "type": "number"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "hasAlphaChannel",
      "type": "boolean"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "hdrMetadataType",
      "type": "HdrMetadataType"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "height",
      "type": "number"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "scalabilityMode",
      "type": "string"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "transferFunction",
      "type": "TransferFunction"
    },
    {
      "interface": "VideoConfiguration",
      "kind": "property",
      "name": "width",
      "type": "number"
    }
  ],
  "VideoDecoderConfig": [
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "codec",
      "type": "string"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "codedHeight",
      "type": "number"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "codedWidth",
      "type": "number"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "colorSpace",
      "type": "VideoColorSpaceInit"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "description",
      "type": "AllowSharedBufferSource"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "displayAspectHeight",
      "type": "number"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "displayAspectWidth",
      "type": "number"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "hardwareAcceleration",
      "type": "HardwareAcceleration"
    },
    {
      "interface": "VideoDecoderConfig",
      "kind": "property",
      "name": "optimizeForLatency",
      "type": "boolean"
    }
  ],
  "VideoDecoderInit": [
    {
      "interface": "VideoDecoderInit",
      "kind": "property",
      "name": "error",
      "type": "WebCodecsErrorCallback"
    },
    {
      "interface": "VideoDecoderInit",
      "kind": "property",
      "name": "output",
      "type": "VideoFrameOutputCallback"
    }
  ],
  "VideoDecoderSupport": [
    {
      "interface": "VideoDecoderSupport",
      "kind": "property",
      "name": "config",
      "type": "VideoDecoderConfig"
    },
    {
      "interface": "VideoDecoderSupport",
      "kind": "property",
      "name": "supported",
      "type": "boolean"
    }
  ],
  "VideoEncoderConfig": [
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "alpha",
      "type": "AlphaOption"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "avc",
      "type": "AvcEncoderConfig"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "bitrate",
      "type": "number"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "bitrateMode",
      "type": "VideoEncoderBitrateMode"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "codec",
      "type": "string"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "contentHint",
      "type": "string"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "displayHeight",
      "type": "number"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "displayWidth",
      "type": "number"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "framerate",
      "type": "number"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "hardwareAcceleration",
      "type": "HardwareAcceleration"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "height",
      "type": "number"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "latencyMode",
      "type": "LatencyMode"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "scalabilityMode",
      "type": "string"
    },
    {
      "interface": "VideoEncoderConfig",
      "kind": "property",
      "name": "width",
      "type": "number"
    }
  ],
  "VideoEncoderEncodeOptions": [
    {
      "interface": "VideoEncoderEncodeOptions",
      "kind": "property",
      "name": "avc",
      "type": "VideoEncoderEncodeOptionsForAvc"
    },
    {
      "interface": "VideoEncoderEncodeOptions",
      "kind": "property",
      "name": "keyFrame",
      "type": "boolean"
    }
  ],
  "VideoEncoderEncodeOptionsForAvc": [
    {
      "interface": "VideoEncoderEncodeOptionsForAvc",
      "kind": "property",
      "name": "quantizer",
      "type": "number"
    }
  ],
  "VideoEncoderInit": [
    {
      "interface": "VideoEncoderInit",
      "kind": "property",
      "name": "error",
      "type": "WebCodecsErrorCallback"
    },
    {
      "interface": "VideoEncoderInit",
      "kind": "property",
      "name": "output",
      "type": "EncodedVideoChunkOutputCallback"
    }
  ],
  "VideoEncoderSupport": [
    {
      "interface": "VideoEncoderSupport",
      "kind": "property",
      "name": "config",
      "type": "VideoEncoderConfig"
    },
    {
      "interface": "VideoEncoderSupport",
      "kind": "property",
      "name": "supported",
      "type": "boolean"
    }
  ],
  "VideoFrameBufferInit": [
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "codedHeight",
      "type": "number"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "codedWidth",
      "type": "number"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "colorSpace",
      "type": "VideoColorSpaceInit"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "displayHeight",
      "type": "number"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "displayWidth",
      "type": "number"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "duration",
      "type": "number"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "format",
      "type": "VideoPixelFormat"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "layout",
      "type": "PlaneLayout[]"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    },
    {
      "interface": "VideoFrameBufferInit",
      "kind": "property",
      "name": "visibleRect",
      "type": "DOMRectInit"
    }
  ],
  "VideoFrameCallbackMetadata": [
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "captureTime",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "expectedDisplayTime",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "height",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "mediaTime",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "presentationTime",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "presentedFrames",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "processingDuration",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "receiveTime",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "rtpTimestamp",
      "type": "number"
    },
    {
      "interface": "VideoFrameCallbackMetadata",
      "kind": "property",
      "name": "width",
      "type": "number"
    }
  ],
  "VideoFrameCopyToOptions": [
    {
      "interface": "VideoFrameCopyToOptions",
      "kind": "property",
      "name": "colorSpace",
      "type": "PredefinedColorSpace"
    },
    {
      "interface": "VideoFrameCopyToOptions",
      "kind": "property",
      "name": "format",
      "type": "VideoPixelFormat"
    },
    {
      "interface": "VideoFrameCopyToOptions",
      "kind": "property",
      "name": "layout",
      "type": "PlaneLayout[]"
    },
    {
      "interface": "VideoFrameCopyToOptions",
      "kind": "property",
      "name": "rect",
      "type": "DOMRectInit"
    }
  ],
  "VideoFrameInit": [
    {
      "interface": "VideoFrameInit",
      "kind": "property",
      "name": "alpha",
      "type": "AlphaOption"
    },
    {
      "interface": "VideoFrameInit",
      "kind": "property",
      "name": "displayHeight",
      "type": "number"
    },
    {
      "interface": "VideoFrameInit",
      "kind": "property",
      "name": "displayWidth",
      "type": "number"
    },
    {
      "interface": "VideoFrameInit",
      "kind": "property",
      "name": "duration",
      "type": "number"
    },
    {
      "interface": "VideoFrameInit",
      "kind": "property",
      "name": "timestamp",
      "type": "number"
    },
    {
      "interface": "VideoFrameInit",
      "kind": "property",
      "name": "visibleRect",
      "type": "DOMRectInit"
    }
  ],
  "WaveShaperOptions": [
    {
      "interface": "WaveShaperOptions",
      "kind": "property",
      "name": "curve",
      "type": "number[] | Float32Array<ArrayBufferLike>"
    },
    {
      "interface": "WaveShaperOptions",
      "kind": "property",
      "name": "oversample",
      "type": "OverSampleType"
    }
  ],
  "WebGLContextAttributes": [
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "alpha",
      "type": "boolean"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "antialias",
      "type": "boolean"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "depth",
      "type": "boolean"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "desynchronized",
      "type": "boolean"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "failIfMajorPerformanceCaveat",
      "type": "boolean"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "powerPreference",
      "type": "WebGLPowerPreference"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "premultipliedAlpha",
      "type": "boolean"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "preserveDrawingBuffer",
      "type": "boolean"
    },
    {
      "interface": "WebGLContextAttributes",
      "kind": "property",
      "name": "stencil",
      "type": "boolean"
    }
  ],
  "WebGLContextEventInit": [
    {
      "interface": "WebGLContextEventInit",
      "kind": "property",
      "name": "statusMessage",
      "type": "string"
    }
  ],
  "WebTransportCloseInfo": [
    {
      "interface": "WebTransportCloseInfo",
      "kind": "property",
      "name": "closeCode",
      "type": "number"
    },
    {
      "interface": "WebTransportCloseInfo",
      "kind": "property",
      "name": "reason",
      "type": "string"
    }
  ],
  "WebTransportErrorOptions": [
    {
      "interface": "WebTransportErrorOptions",
      "kind": "property",
      "name": "source",
      "type": "WebTransportErrorSource"
    },
    {
      "interface": "WebTransportErrorOptions",
      "kind": "property",
      "name": "streamErrorCode",
      "type": "number"
    }
  ],
  "WebTransportHash": [
    {
      "interface": "WebTransportHash",
      "kind": "property",
      "name": "algorithm",
      "type": "string"
    },
    {
      "interface": "WebTransportHash",
      "kind": "property",
      "name": "value",
      "type": "BufferSource"
    }
  ],
  "WebTransportOptions": [
    {
      "interface": "WebTransportOptions",
      "kind": "property",
      "name": "allowPooling",
      "type": "boolean"
    },
    {
      "interface": "WebTransportOptions",
      "kind": "property",
      "name": "congestionControl",
      "type": "WebTransportCongestionControl"
    },
    {
      "interface": "WebTransportOptions",
      "kind": "property",
      "name": "requireUnreliable",
      "type": "boolean"
    },
    {
      "interface": "WebTransportOptions",
      "kind": "property",
      "name": "serverCertificateHashes",
      "type": "WebTransportHash[]"
    }
  ],
  "WebTransportSendStreamOptions": [
    {
      "interface": "WebTransportSendStreamOptions",
      "kind": "property",
      "name": "sendOrder",
      "type": "number"
    }
  ],
  "WheelEventInit": [
    {
      "interface": "WheelEventInit",
      "kind": "property",
      "name": "deltaMode",
      "type": "number"
    },
    {
      "interface": "WheelEventInit",
      "kind": "property",
      "name": "deltaX",
      "type": "number"
    },
    {
      "interface": "WheelEventInit",
      "kind": "property",
      "name": "deltaY",
      "type": "number"
    },
    {
      "interface": "WheelEventInit",
      "kind": "property",
      "name": "deltaZ",
      "type": "number"
    }
  ],
  "WindowPostMessageOptions": [
    {
      "interface": "WindowPostMessageOptions",
      "kind": "property",
      "name": "targetOrigin",
      "type": "string"
    }
  ],
  "WorkerOptions": [
    {
      "interface": "WorkerOptions",
      "kind": "property",
      "name": "credentials",
      "type": "RequestCredentials"
    },
    {
      "interface": "WorkerOptions",
      "kind": "property",
      "name": "name",
      "type": "string"
    },
    {
      "interface": "WorkerOptions",
      "kind": "property",
      "name": "type",
      "type": "WorkerType"
    }
  ],
  "WorkletOptions": [
    {
      "interface": "WorkletOptions",
      "kind": "property",
      "name": "credentials",
      "type": "RequestCredentials"
    }
  ],
  "WriteParams": [
    {
      "interface": "WriteParams",
      "kind": "property",
      "name": "data",
      "type": "string | BufferSource | Blob"
    },
    {
      "interface": "WriteParams",
      "kind": "property",
      "name": "position",
      "type": "number"
    },
    {
      "interface": "WriteParams",
      "kind": "property",
      "name": "size",
      "type": "number"
    },
    {
      "interface": "WriteParams",
      "kind": "property",
      "name": "type",
      "type": "WriteCommandType"
    }
  ],
  "ANGLE_instanced_arrays": [
    {
      "interface": "ANGLE_instanced_arrays",
      "kind": "method",
      "name": "drawArraysInstancedANGLE",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "first",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "primcount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/drawArraysInstancedANGLE)"
    },
    {
      "interface": "ANGLE_instanced_arrays",
      "kind": "method",
      "name": "drawElementsInstancedANGLE",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "primcount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/drawElementsInstancedANGLE)"
    },
    {
      "interface": "ANGLE_instanced_arrays",
      "kind": "method",
      "name": "vertexAttribDivisorANGLE",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "divisor",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/vertexAttribDivisorANGLE)"
    },
    {
      "interface": "ANGLE_instanced_arrays",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE",
      "type": "35070"
    }
  ],
  "ARIAMixin": [
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaAtomic",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAtomic)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaAutoComplete",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAutoComplete)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaBrailleLabel",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleLabel)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaBrailleRoleDescription",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleRoleDescription)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaBusy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBusy)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaChecked",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaChecked)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaColCount",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColCount)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaColIndex",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndex)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaColIndexText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndexText)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaColSpan",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColSpan)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaCurrent",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaCurrent)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaDescription",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDescription)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaDisabled",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDisabled)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaExpanded",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaExpanded)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaHasPopup",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHasPopup)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaHidden",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHidden)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaInvalid",
      "type": "string"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaKeyShortcuts",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaKeyShortcuts)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaLabel",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLabel)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaLevel",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLevel)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaLive",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLive)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaModal",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaModal)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaMultiLine",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiLine)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaMultiSelectable",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiSelectable)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaOrientation",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaOrientation)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaPlaceholder",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPlaceholder)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaPosInSet",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPosInSet)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaPressed",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPressed)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaReadOnly",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaReadOnly)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaRelevant",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRelevant)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaRequired",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRequired)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaRoleDescription",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRoleDescription)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaRowCount",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowCount)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaRowIndex",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndex)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaRowIndexText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndexText)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaRowSpan",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowSpan)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaSelected",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSelected)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaSetSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSetSize)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaSort",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSort)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaValueMax",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMax)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaValueMin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMin)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaValueNow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueNow)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "ariaValueText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueText)"
    },
    {
      "interface": "ARIAMixin",
      "kind": "property",
      "name": "role",
      "type": "string"
    }
  ],
  "AbortController": [
    {
      "interface": "AbortController",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal",
      "doc": "Returns the AbortSignal object associated with this object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/signal)"
    },
    {
      "interface": "AbortController",
      "kind": "method",
      "name": "abort",
      "parameters": [
        {
          "name": "reason",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Invoking this method will set this object's AbortSignal's aborted flag and signal to any observers that the associated activity is to be aborted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/abort)"
    }
  ],
  "AbortSignalEventMap": [
    {
      "interface": "AbortSignalEventMap",
      "kind": "property",
      "name": "\"abort\"",
      "type": "Event"
    }
  ],
  "AbortSignal": [
    {
      "interface": "AbortSignal",
      "kind": "property",
      "name": "aborted",
      "type": "boolean",
      "doc": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)"
    },
    {
      "interface": "AbortSignal",
      "kind": "event",
      "name": "onabort",
      "type": "(this: AbortSignal, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)"
    },
    {
      "interface": "AbortSignal",
      "kind": "property",
      "name": "reason",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)"
    },
    {
      "interface": "AbortSignal",
      "kind": "method",
      "name": "throwIfAborted",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted)"
    },
    {
      "interface": "AbortSignal",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AbortSignal, ev: AbortSignalEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AbortSignal",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AbortSignal",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AbortSignal, ev: AbortSignalEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AbortSignal",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AbstractRange": [
    {
      "interface": "AbstractRange",
      "kind": "property",
      "name": "collapsed",
      "type": "boolean",
      "doc": "Returns true if range is collapsed, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/collapsed)"
    },
    {
      "interface": "AbstractRange",
      "kind": "property",
      "name": "endContainer",
      "type": "Node",
      "doc": "Returns range's end node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/endContainer)"
    },
    {
      "interface": "AbstractRange",
      "kind": "property",
      "name": "endOffset",
      "type": "number",
      "doc": "Returns range's end offset.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/endOffset)"
    },
    {
      "interface": "AbstractRange",
      "kind": "property",
      "name": "startContainer",
      "type": "Node",
      "doc": "Returns range's start node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/startContainer)"
    },
    {
      "interface": "AbstractRange",
      "kind": "property",
      "name": "startOffset",
      "type": "number",
      "doc": "Returns range's start offset.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/startOffset)"
    }
  ],
  "AbstractWorkerEventMap": [
    {
      "interface": "AbstractWorkerEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "ErrorEvent"
    }
  ],
  "AbstractWorker": [
    {
      "interface": "AbstractWorker",
      "kind": "event",
      "name": "onerror",
      "type": "(this: AbstractWorker, ev: ErrorEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/error_event)"
    },
    {
      "interface": "AbstractWorker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AbstractWorker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AbstractWorker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AbstractWorker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AnalyserNode": [
    {
      "interface": "AnalyserNode",
      "kind": "property",
      "name": "fftSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/fftSize)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "property",
      "name": "frequencyBinCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/frequencyBinCount)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "property",
      "name": "maxDecibels",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/maxDecibels)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "property",
      "name": "minDecibels",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/minDecibels)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "property",
      "name": "smoothingTimeConstant",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/smoothingTimeConstant)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "method",
      "name": "getByteFrequencyData",
      "parameters": [
        {
          "name": "array",
          "type": "Uint8Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getByteFrequencyData)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "method",
      "name": "getByteTimeDomainData",
      "parameters": [
        {
          "name": "array",
          "type": "Uint8Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getByteTimeDomainData)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "method",
      "name": "getFloatFrequencyData",
      "parameters": [
        {
          "name": "array",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getFloatFrequencyData)"
    },
    {
      "interface": "AnalyserNode",
      "kind": "method",
      "name": "getFloatTimeDomainData",
      "parameters": [
        {
          "name": "array",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getFloatTimeDomainData)"
    }
  ],
  "Animatable": [
    {
      "interface": "Animatable",
      "kind": "method",
      "name": "animate",
      "parameters": [
        {
          "name": "keyframes",
          "type": "Keyframe[] | PropertyIndexedKeyframes",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "number | KeyframeAnimationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Animation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate)"
    },
    {
      "interface": "Animatable",
      "kind": "method",
      "name": "getAnimations",
      "parameters": [
        {
          "name": "options",
          "type": "GetAnimationsOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Animation[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAnimations)"
    }
  ],
  "AnimationEventMap": [
    {
      "interface": "AnimationEventMap",
      "kind": "property",
      "name": "\"cancel\"",
      "type": "AnimationPlaybackEvent"
    },
    {
      "interface": "AnimationEventMap",
      "kind": "property",
      "name": "\"finish\"",
      "type": "AnimationPlaybackEvent"
    },
    {
      "interface": "AnimationEventMap",
      "kind": "property",
      "name": "\"remove\"",
      "type": "AnimationPlaybackEvent"
    }
  ],
  "Animation": [
    {
      "interface": "Animation",
      "kind": "property",
      "name": "currentTime",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/currentTime)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "effect",
      "type": "AnimationEffect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/effect)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "finished",
      "type": "Promise<Animation>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/finished)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/id)"
    },
    {
      "interface": "Animation",
      "kind": "event",
      "name": "oncancel",
      "type": "(this: Animation, ev: AnimationPlaybackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/cancel_event)"
    },
    {
      "interface": "Animation",
      "kind": "event",
      "name": "onfinish",
      "type": "(this: Animation, ev: AnimationPlaybackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/finish_event)"
    },
    {
      "interface": "Animation",
      "kind": "event",
      "name": "onremove",
      "type": "(this: Animation, ev: AnimationPlaybackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/remove_event)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "pending",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/pending)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "playState",
      "type": "AnimationPlayState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/playState)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "playbackRate",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/playbackRate)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "ready",
      "type": "Promise<Animation>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/ready)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "replaceState",
      "type": "AnimationReplaceState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/replaceState)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "startTime",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/startTime)"
    },
    {
      "interface": "Animation",
      "kind": "property",
      "name": "timeline",
      "type": "AnimationTimeline",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/timeline)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "cancel",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/cancel)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "commitStyles",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/commitStyles)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "finish",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/finish)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "pause",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/pause)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "persist",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/persist)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "play",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/play)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "reverse",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/reverse)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "updatePlaybackRate",
      "parameters": [
        {
          "name": "playbackRate",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/updatePlaybackRate)"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Animation, ev: AnimationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Animation, ev: AnimationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Animation",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AnimationEffect": [
    {
      "interface": "AnimationEffect",
      "kind": "method",
      "name": "getComputedTiming",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ComputedEffectTiming",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEffect/getComputedTiming)"
    },
    {
      "interface": "AnimationEffect",
      "kind": "method",
      "name": "getTiming",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "EffectTiming",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEffect/getTiming)"
    },
    {
      "interface": "AnimationEffect",
      "kind": "method",
      "name": "updateTiming",
      "parameters": [
        {
          "name": "timing",
          "type": "OptionalEffectTiming",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEffect/updateTiming)"
    }
  ],
  "AnimationEvent": [
    {
      "interface": "AnimationEvent",
      "kind": "property",
      "name": "animationName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEvent/animationName)"
    },
    {
      "interface": "AnimationEvent",
      "kind": "property",
      "name": "elapsedTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEvent/elapsedTime)"
    },
    {
      "interface": "AnimationEvent",
      "kind": "property",
      "name": "pseudoElement",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEvent/pseudoElement)"
    }
  ],
  "AnimationFrameProvider": [
    {
      "interface": "AnimationFrameProvider",
      "kind": "method",
      "name": "cancelAnimationFrame",
      "parameters": [
        {
          "name": "handle",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/cancelAnimationFrame)"
    },
    {
      "interface": "AnimationFrameProvider",
      "kind": "method",
      "name": "requestAnimationFrame",
      "parameters": [
        {
          "name": "callback",
          "type": "FrameRequestCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/requestAnimationFrame)"
    }
  ],
  "AnimationPlaybackEvent": [
    {
      "interface": "AnimationPlaybackEvent",
      "kind": "property",
      "name": "currentTime",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationPlaybackEvent/currentTime)"
    },
    {
      "interface": "AnimationPlaybackEvent",
      "kind": "property",
      "name": "timelineTime",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationPlaybackEvent/timelineTime)"
    }
  ],
  "AnimationTimeline": [
    {
      "interface": "AnimationTimeline",
      "kind": "property",
      "name": "currentTime",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationTimeline/currentTime)"
    }
  ],
  "Attr": [
    {
      "interface": "Attr",
      "kind": "property",
      "name": "localName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/localName)"
    },
    {
      "interface": "Attr",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/name)"
    },
    {
      "interface": "Attr",
      "kind": "property",
      "name": "namespaceURI",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/namespaceURI)"
    },
    {
      "interface": "Attr",
      "kind": "property",
      "name": "ownerDocument",
      "type": "Document"
    },
    {
      "interface": "Attr",
      "kind": "property",
      "name": "ownerElement",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/ownerElement)"
    },
    {
      "interface": "Attr",
      "kind": "property",
      "name": "prefix",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/prefix)"
    },
    {
      "interface": "Attr",
      "kind": "property",
      "name": "specified",
      "type": "boolean"
    },
    {
      "interface": "Attr",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/value)"
    }
  ],
  "AudioBuffer": [
    {
      "interface": "AudioBuffer",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/duration)"
    },
    {
      "interface": "AudioBuffer",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/length)"
    },
    {
      "interface": "AudioBuffer",
      "kind": "property",
      "name": "numberOfChannels",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/numberOfChannels)"
    },
    {
      "interface": "AudioBuffer",
      "kind": "property",
      "name": "sampleRate",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/sampleRate)"
    },
    {
      "interface": "AudioBuffer",
      "kind": "method",
      "name": "copyFromChannel",
      "parameters": [
        {
          "name": "destination",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "channelNumber",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "bufferOffset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/copyFromChannel)"
    },
    {
      "interface": "AudioBuffer",
      "kind": "method",
      "name": "copyToChannel",
      "parameters": [
        {
          "name": "source",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "channelNumber",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "bufferOffset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/copyToChannel)"
    },
    {
      "interface": "AudioBuffer",
      "kind": "method",
      "name": "getChannelData",
      "parameters": [
        {
          "name": "channel",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Float32Array<ArrayBufferLike>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/getChannelData)"
    }
  ],
  "AudioBufferSourceNode": [
    {
      "interface": "AudioBufferSourceNode",
      "kind": "property",
      "name": "buffer",
      "type": "AudioBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/buffer)"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "property",
      "name": "detune",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/detune)"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "property",
      "name": "loop",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/loop)"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "property",
      "name": "loopEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/loopEnd)"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "property",
      "name": "loopStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/loopStart)"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "property",
      "name": "playbackRate",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/playbackRate)"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "method",
      "name": "start",
      "parameters": [
        {
          "name": "when",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "duration",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/start)"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioBufferSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioBufferSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioBufferSourceNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AudioContext": [
    {
      "interface": "AudioContext",
      "kind": "property",
      "name": "baseLatency",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/baseLatency)"
    },
    {
      "interface": "AudioContext",
      "kind": "property",
      "name": "outputLatency",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/outputLatency)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/close)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "createMediaElementSource",
      "parameters": [
        {
          "name": "mediaElement",
          "type": "HTMLMediaElement",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaElementAudioSourceNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/createMediaElementSource)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "createMediaStreamDestination",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaStreamAudioDestinationNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/createMediaStreamDestination)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "createMediaStreamSource",
      "parameters": [
        {
          "name": "mediaStream",
          "type": "MediaStream",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaStreamAudioSourceNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/createMediaStreamSource)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "getOutputTimestamp",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "AudioTimestamp",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/getOutputTimestamp)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "resume",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/resume)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "suspend",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/suspend)"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioContext, ev: BaseAudioContextEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioContext, ev: BaseAudioContextEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioContext",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AudioData": [
    {
      "interface": "AudioData",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/duration)"
    },
    {
      "interface": "AudioData",
      "kind": "property",
      "name": "format",
      "type": "AudioSampleFormat",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/format)"
    },
    {
      "interface": "AudioData",
      "kind": "property",
      "name": "numberOfChannels",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/numberOfChannels)"
    },
    {
      "interface": "AudioData",
      "kind": "property",
      "name": "numberOfFrames",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/numberOfFrames)"
    },
    {
      "interface": "AudioData",
      "kind": "property",
      "name": "sampleRate",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/sampleRate)"
    },
    {
      "interface": "AudioData",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/timestamp)"
    },
    {
      "interface": "AudioData",
      "kind": "method",
      "name": "allocationSize",
      "parameters": [
        {
          "name": "options",
          "type": "AudioDataCopyToOptions",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/allocationSize)"
    },
    {
      "interface": "AudioData",
      "kind": "method",
      "name": "clone",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "AudioData",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/clone)"
    },
    {
      "interface": "AudioData",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/close)"
    },
    {
      "interface": "AudioData",
      "kind": "method",
      "name": "copyTo",
      "parameters": [
        {
          "name": "destination",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "AudioDataCopyToOptions",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/copyTo)"
    }
  ],
  "AudioDecoderEventMap": [
    {
      "interface": "AudioDecoderEventMap",
      "kind": "property",
      "name": "\"dequeue\"",
      "type": "Event"
    }
  ],
  "AudioDecoder": [
    {
      "interface": "AudioDecoder",
      "kind": "property",
      "name": "decodeQueueSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decodeQueueSize)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "event",
      "name": "ondequeue",
      "type": "(this: AudioDecoder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/dequeue_event)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "property",
      "name": "state",
      "type": "CodecState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/state)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/close)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "configure",
      "parameters": [
        {
          "name": "config",
          "type": "AudioDecoderConfig",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/configure)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "decode",
      "parameters": [
        {
          "name": "chunk",
          "type": "EncodedAudioChunk",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decode)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "flush",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/flush)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/reset)"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioDecoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AudioDestinationNode": [
    {
      "interface": "AudioDestinationNode",
      "kind": "property",
      "name": "maxChannelCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDestinationNode/maxChannelCount)"
    }
  ],
  "AudioEncoderEventMap": [
    {
      "interface": "AudioEncoderEventMap",
      "kind": "property",
      "name": "\"dequeue\"",
      "type": "Event"
    }
  ],
  "AudioEncoder": [
    {
      "interface": "AudioEncoder",
      "kind": "property",
      "name": "encodeQueueSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encodeQueueSize)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "event",
      "name": "ondequeue",
      "type": "(this: AudioEncoder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/dequeue_event)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "property",
      "name": "state",
      "type": "CodecState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/state)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/close)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "configure",
      "parameters": [
        {
          "name": "config",
          "type": "AudioEncoderConfig",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/configure)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "encode",
      "parameters": [
        {
          "name": "data",
          "type": "AudioData",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encode)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "flush",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/flush)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/reset)"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioEncoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AudioListener": [
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "forwardX",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/forwardX)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "forwardY",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/forwardY)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "forwardZ",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/forwardZ)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "positionX",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/positionX)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "positionY",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/positionY)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "positionZ",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/positionZ)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "upX",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/upX)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "upY",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/upY)"
    },
    {
      "interface": "AudioListener",
      "kind": "property",
      "name": "upZ",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/upZ)"
    },
    {
      "interface": "AudioListener",
      "kind": "method",
      "name": "setOrientation",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xUp",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yUp",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zUp",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void"
    },
    {
      "interface": "AudioListener",
      "kind": "method",
      "name": "setPosition",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void"
    }
  ],
  "AudioNode": [
    {
      "interface": "AudioNode",
      "kind": "property",
      "name": "channelCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/channelCount)"
    },
    {
      "interface": "AudioNode",
      "kind": "property",
      "name": "channelCountMode",
      "type": "ChannelCountMode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/channelCountMode)"
    },
    {
      "interface": "AudioNode",
      "kind": "property",
      "name": "channelInterpretation",
      "type": "ChannelInterpretation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/channelInterpretation)"
    },
    {
      "interface": "AudioNode",
      "kind": "property",
      "name": "context",
      "type": "BaseAudioContext",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/context)"
    },
    {
      "interface": "AudioNode",
      "kind": "property",
      "name": "numberOfInputs",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/numberOfInputs)"
    },
    {
      "interface": "AudioNode",
      "kind": "property",
      "name": "numberOfOutputs",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/numberOfOutputs)"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "connect",
      "parameters": [
        {
          "name": "destinationNode",
          "type": "AudioNode",
          "optional": false,
          "rest": false
        },
        {
          "name": "output",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "input",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "AudioNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/connect)"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "connect",
      "parameters": [
        {
          "name": "destinationParam",
          "type": "AudioParam",
          "optional": false,
          "rest": false
        },
        {
          "name": "output",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "disconnect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/disconnect)"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "disconnect",
      "parameters": [
        {
          "name": "output",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "disconnect",
      "parameters": [
        {
          "name": "destinationNode",
          "type": "AudioNode",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "disconnect",
      "parameters": [
        {
          "name": "destinationNode",
          "type": "AudioNode",
          "optional": false,
          "rest": false
        },
        {
          "name": "output",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "disconnect",
      "parameters": [
        {
          "name": "destinationNode",
          "type": "AudioNode",
          "optional": false,
          "rest": false
        },
        {
          "name": "output",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "input",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "disconnect",
      "parameters": [
        {
          "name": "destinationParam",
          "type": "AudioParam",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "AudioNode",
      "kind": "method",
      "name": "disconnect",
      "parameters": [
        {
          "name": "destinationParam",
          "type": "AudioParam",
          "optional": false,
          "rest": false
        },
        {
          "name": "output",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AudioParam": [
    {
      "interface": "AudioParam",
      "kind": "property",
      "name": "automationRate",
      "type": "AutomationRate"
    },
    {
      "interface": "AudioParam",
      "kind": "property",
      "name": "defaultValue",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/defaultValue)"
    },
    {
      "interface": "AudioParam",
      "kind": "property",
      "name": "maxValue",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/maxValue)"
    },
    {
      "interface": "AudioParam",
      "kind": "property",
      "name": "minValue",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/minValue)"
    },
    {
      "interface": "AudioParam",
      "kind": "property",
      "name": "value",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/value)"
    },
    {
      "interface": "AudioParam",
      "kind": "method",
      "name": "cancelAndHoldAtTime",
      "parameters": [
        {
          "name": "cancelTime",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/cancelAndHoldAtTime)"
    },
    {
      "interface": "AudioParam",
      "kind": "method",
      "name": "cancelScheduledValues",
      "parameters": [
        {
          "name": "cancelTime",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/cancelScheduledValues)"
    },
    {
      "interface": "AudioParam",
      "kind": "method",
      "name": "exponentialRampToValueAtTime",
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "endTime",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/exponentialRampToValueAtTime)"
    },
    {
      "interface": "AudioParam",
      "kind": "method",
      "name": "linearRampToValueAtTime",
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "endTime",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/linearRampToValueAtTime)"
    },
    {
      "interface": "AudioParam",
      "kind": "method",
      "name": "setTargetAtTime",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "startTime",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "timeConstant",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setTargetAtTime)"
    },
    {
      "interface": "AudioParam",
      "kind": "method",
      "name": "setValueAtTime",
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "startTime",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setValueAtTime)"
    },
    {
      "interface": "AudioParam",
      "kind": "method",
      "name": "setValueCurveAtTime",
      "parameters": [
        {
          "name": "values",
          "type": "number[] | Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "startTime",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "duration",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setValueCurveAtTime)"
    }
  ],
  "AudioParamMap": [
    {
      "interface": "AudioParamMap",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: AudioParam, key: string, parent: AudioParamMap) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "AudioProcessingEvent": [
    {
      "interface": "AudioProcessingEvent",
      "kind": "property",
      "name": "inputBuffer",
      "type": "AudioBuffer"
    },
    {
      "interface": "AudioProcessingEvent",
      "kind": "property",
      "name": "outputBuffer",
      "type": "AudioBuffer"
    },
    {
      "interface": "AudioProcessingEvent",
      "kind": "property",
      "name": "playbackTime",
      "type": "number"
    }
  ],
  "AudioScheduledSourceNodeEventMap": [
    {
      "interface": "AudioScheduledSourceNodeEventMap",
      "kind": "property",
      "name": "\"ended\"",
      "type": "Event"
    }
  ],
  "AudioScheduledSourceNode": [
    {
      "interface": "AudioScheduledSourceNode",
      "kind": "event",
      "name": "onended",
      "type": "(this: AudioScheduledSourceNode, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/ended_event)"
    },
    {
      "interface": "AudioScheduledSourceNode",
      "kind": "method",
      "name": "start",
      "parameters": [
        {
          "name": "when",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/start)"
    },
    {
      "interface": "AudioScheduledSourceNode",
      "kind": "method",
      "name": "stop",
      "parameters": [
        {
          "name": "when",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/stop)"
    },
    {
      "interface": "AudioScheduledSourceNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioScheduledSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioScheduledSourceNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioScheduledSourceNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioScheduledSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioScheduledSourceNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AudioWorkletNodeEventMap": [
    {
      "interface": "AudioWorkletNodeEventMap",
      "kind": "property",
      "name": "\"processorerror\"",
      "type": "ErrorEvent"
    }
  ],
  "AudioWorkletNode": [
    {
      "interface": "AudioWorkletNode",
      "kind": "event",
      "name": "onprocessorerror",
      "type": "(this: AudioWorkletNode, ev: ErrorEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/processorerror_event)"
    },
    {
      "interface": "AudioWorkletNode",
      "kind": "property",
      "name": "parameters",
      "type": "AudioParamMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/parameters)"
    },
    {
      "interface": "AudioWorkletNode",
      "kind": "property",
      "name": "port",
      "type": "MessagePort",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/port)"
    },
    {
      "interface": "AudioWorkletNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioWorkletNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioWorkletNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "AudioWorkletNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "AuthenticatorAssertionResponse": [
    {
      "interface": "AuthenticatorAssertionResponse",
      "kind": "property",
      "name": "authenticatorData",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData)"
    },
    {
      "interface": "AuthenticatorAssertionResponse",
      "kind": "property",
      "name": "signature",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAssertionResponse/signature)"
    },
    {
      "interface": "AuthenticatorAssertionResponse",
      "kind": "property",
      "name": "userHandle",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAssertionResponse/userHandle)"
    }
  ],
  "AuthenticatorAttestationResponse": [
    {
      "interface": "AuthenticatorAttestationResponse",
      "kind": "property",
      "name": "attestationObject",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/attestationObject)"
    },
    {
      "interface": "AuthenticatorAttestationResponse",
      "kind": "method",
      "name": "getAuthenticatorData",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getAuthenticatorData)"
    },
    {
      "interface": "AuthenticatorAttestationResponse",
      "kind": "method",
      "name": "getPublicKey",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getPublicKey)"
    },
    {
      "interface": "AuthenticatorAttestationResponse",
      "kind": "method",
      "name": "getPublicKeyAlgorithm",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getPublicKeyAlgorithm)"
    },
    {
      "interface": "AuthenticatorAttestationResponse",
      "kind": "method",
      "name": "getTransports",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getTransports)"
    }
  ],
  "AuthenticatorResponse": [
    {
      "interface": "AuthenticatorResponse",
      "kind": "property",
      "name": "clientDataJSON",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorResponse/clientDataJSON)"
    }
  ],
  "BarProp": [
    {
      "interface": "BarProp",
      "kind": "property",
      "name": "visible",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BarProp/visible)"
    }
  ],
  "BaseAudioContextEventMap": [
    {
      "interface": "BaseAudioContextEventMap",
      "kind": "property",
      "name": "\"statechange\"",
      "type": "Event"
    }
  ],
  "BaseAudioContext": [
    {
      "interface": "BaseAudioContext",
      "kind": "property",
      "name": "audioWorklet",
      "type": "AudioWorklet",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/audioWorklet)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "property",
      "name": "currentTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/currentTime)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "property",
      "name": "destination",
      "type": "AudioDestinationNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/destination)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "property",
      "name": "listener",
      "type": "AudioListener",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/listener)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "event",
      "name": "onstatechange",
      "type": "(this: BaseAudioContext, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/statechange_event)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "property",
      "name": "sampleRate",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/sampleRate)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "property",
      "name": "state",
      "type": "AudioContextState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/state)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createAnalyser",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "AnalyserNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createAnalyser)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createBiquadFilter",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "BiquadFilterNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createBiquadFilter)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createBuffer",
      "parameters": [
        {
          "name": "numberOfChannels",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "length",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sampleRate",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "AudioBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createBuffer)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createBufferSource",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "AudioBufferSourceNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createBufferSource)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createChannelMerger",
      "parameters": [
        {
          "name": "numberOfInputs",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "ChannelMergerNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createChannelMerger)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createChannelSplitter",
      "parameters": [
        {
          "name": "numberOfOutputs",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "ChannelSplitterNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createChannelSplitter)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createConstantSource",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ConstantSourceNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createConstantSource)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createConvolver",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ConvolverNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createConvolver)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createDelay",
      "parameters": [
        {
          "name": "maxDelayTime",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DelayNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createDelay)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createDynamicsCompressor",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DynamicsCompressorNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createDynamicsCompressor)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createGain",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "GainNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createGain)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createIIRFilter",
      "parameters": [
        {
          "name": "feedforward",
          "type": "number[]",
          "optional": false,
          "rest": false
        },
        {
          "name": "feedback",
          "type": "number[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "IIRFilterNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createIIRFilter)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createOscillator",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "OscillatorNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createOscillator)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createPanner",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "PannerNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPanner)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createPeriodicWave",
      "parameters": [
        {
          "name": "real",
          "type": "number[] | Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "imag",
          "type": "number[] | Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "constraints",
          "type": "PeriodicWaveConstraints",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "PeriodicWave",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPeriodicWave)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createScriptProcessor",
      "parameters": [
        {
          "name": "bufferSize",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "numberOfInputChannels",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "numberOfOutputChannels",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "ScriptProcessorNode"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createStereoPanner",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "StereoPannerNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createStereoPanner)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "createWaveShaper",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WaveShaperNode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createWaveShaper)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "decodeAudioData",
      "parameters": [
        {
          "name": "audioData",
          "type": "ArrayBuffer",
          "optional": false,
          "rest": false
        },
        {
          "name": "successCallback",
          "type": "DecodeSuccessCallback",
          "optional": true,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "DecodeErrorCallback",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "Promise<AudioBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/decodeAudioData)"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "BaseAudioContext",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "BeforeUnloadEvent": [
    {
      "interface": "BeforeUnloadEvent",
      "kind": "property",
      "name": "returnValue",
      "type": "any"
    }
  ],
  "BiquadFilterNode": [
    {
      "interface": "BiquadFilterNode",
      "kind": "property",
      "name": "Q",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/Q)"
    },
    {
      "interface": "BiquadFilterNode",
      "kind": "property",
      "name": "detune",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/detune)"
    },
    {
      "interface": "BiquadFilterNode",
      "kind": "property",
      "name": "frequency",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/frequency)"
    },
    {
      "interface": "BiquadFilterNode",
      "kind": "property",
      "name": "gain",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/gain)"
    },
    {
      "interface": "BiquadFilterNode",
      "kind": "property",
      "name": "type",
      "type": "BiquadFilterType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/type)"
    },
    {
      "interface": "BiquadFilterNode",
      "kind": "method",
      "name": "getFrequencyResponse",
      "parameters": [
        {
          "name": "frequencyHz",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "magResponse",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "phaseResponse",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/getFrequencyResponse)"
    }
  ],
  "Blob": [
    {
      "interface": "Blob",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size)"
    },
    {
      "interface": "Blob",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type)"
    },
    {
      "interface": "Blob",
      "kind": "method",
      "name": "arrayBuffer",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/arrayBuffer)"
    },
    {
      "interface": "Blob",
      "kind": "method",
      "name": "bytes",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<Uint8Array<ArrayBufferLike>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/bytes)"
    },
    {
      "interface": "Blob",
      "kind": "method",
      "name": "slice",
      "parameters": [
        {
          "name": "start",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "contentType",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "Blob",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice)"
    },
    {
      "interface": "Blob",
      "kind": "method",
      "name": "stream",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ReadableStream<Uint8Array<ArrayBufferLike>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/stream)"
    },
    {
      "interface": "Blob",
      "kind": "method",
      "name": "text",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<string>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text)"
    }
  ],
  "BlobEvent": [
    {
      "interface": "BlobEvent",
      "kind": "property",
      "name": "data",
      "type": "Blob",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BlobEvent/data)"
    },
    {
      "interface": "BlobEvent",
      "kind": "property",
      "name": "timecode",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BlobEvent/timecode)"
    }
  ],
  "Body": [
    {
      "interface": "Body",
      "kind": "property",
      "name": "body",
      "type": "ReadableStream<Uint8Array<ArrayBufferLike>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body)"
    },
    {
      "interface": "Body",
      "kind": "property",
      "name": "bodyUsed",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed)"
    },
    {
      "interface": "Body",
      "kind": "method",
      "name": "arrayBuffer",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/arrayBuffer)"
    },
    {
      "interface": "Body",
      "kind": "method",
      "name": "blob",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<Blob>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/blob)"
    },
    {
      "interface": "Body",
      "kind": "method",
      "name": "bytes",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<Uint8Array<ArrayBufferLike>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bytes)"
    },
    {
      "interface": "Body",
      "kind": "method",
      "name": "formData",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<FormData>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/formData)"
    },
    {
      "interface": "Body",
      "kind": "method",
      "name": "json",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/json)"
    },
    {
      "interface": "Body",
      "kind": "method",
      "name": "text",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<string>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/text)"
    }
  ],
  "BroadcastChannelEventMap": [
    {
      "interface": "BroadcastChannelEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "BroadcastChannelEventMap",
      "kind": "property",
      "name": "\"messageerror\"",
      "type": "MessageEvent<any>"
    }
  ],
  "BroadcastChannel": [
    {
      "interface": "BroadcastChannel",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Returns the channel name (as passed to the constructor).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/name)"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: BroadcastChannel, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/message_event)"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "event",
      "name": "onmessageerror",
      "type": "(this: BroadcastChannel, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/messageerror_event)"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Closes the BroadcastChannel object, opening it up to garbage collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/close)"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/postMessage)"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "BroadcastChannel",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "ByteLengthQueuingStrategy": [
    {
      "interface": "ByteLengthQueuingStrategy",
      "kind": "property",
      "name": "highWaterMark",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/highWaterMark)"
    },
    {
      "interface": "ByteLengthQueuingStrategy",
      "kind": "property",
      "name": "size",
      "type": "QueuingStrategySize<ArrayBufferView<ArrayBufferLike>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/size)"
    }
  ],
  "CSSAnimation": [
    {
      "interface": "CSSAnimation",
      "kind": "property",
      "name": "animationName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSAnimation/animationName)"
    },
    {
      "interface": "CSSAnimation",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: CSSAnimation, ev: AnimationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CSSAnimation",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CSSAnimation",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: CSSAnimation, ev: AnimationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CSSAnimation",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "CSSConditionRule": [
    {
      "interface": "CSSConditionRule",
      "kind": "property",
      "name": "conditionText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSConditionRule/conditionText)"
    }
  ],
  "CSSContainerRule": [
    {
      "interface": "CSSContainerRule",
      "kind": "property",
      "name": "containerName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSContainerRule/containerName)"
    },
    {
      "interface": "CSSContainerRule",
      "kind": "property",
      "name": "containerQuery",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSContainerRule/containerQuery)"
    }
  ],
  "CSSCounterStyleRule": [
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "additiveSymbols",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/additiveSymbols)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "fallback",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/fallback)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/name)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "negative",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/negative)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "pad",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/pad)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "prefix",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/prefix)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "range",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/range)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "speakAs",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/speakAs)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "suffix",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/suffix)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "symbols",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/symbols)"
    },
    {
      "interface": "CSSCounterStyleRule",
      "kind": "property",
      "name": "system",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/system)"
    }
  ],
  "CSSFontFeatureValuesRule": [
    {
      "interface": "CSSFontFeatureValuesRule",
      "kind": "property",
      "name": "fontFamily",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontFeatureValuesRule/fontFamily)"
    }
  ],
  "CSSFontPaletteValuesRule": [
    {
      "interface": "CSSFontPaletteValuesRule",
      "kind": "property",
      "name": "basePalette",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/basePalette)"
    },
    {
      "interface": "CSSFontPaletteValuesRule",
      "kind": "property",
      "name": "fontFamily",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/fontFamily)"
    },
    {
      "interface": "CSSFontPaletteValuesRule",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/name)"
    },
    {
      "interface": "CSSFontPaletteValuesRule",
      "kind": "property",
      "name": "overrideColors",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/overrideColors)"
    }
  ],
  "CSSGroupingRule": [
    {
      "interface": "CSSGroupingRule",
      "kind": "property",
      "name": "cssRules",
      "type": "CSSRuleList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSGroupingRule/cssRules)"
    },
    {
      "interface": "CSSGroupingRule",
      "kind": "method",
      "name": "deleteRule",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSGroupingRule/deleteRule)"
    },
    {
      "interface": "CSSGroupingRule",
      "kind": "method",
      "name": "insertRule",
      "parameters": [
        {
          "name": "rule",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSGroupingRule/insertRule)"
    }
  ],
  "CSSImportRule": [
    {
      "interface": "CSSImportRule",
      "kind": "property",
      "name": "href",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/href)"
    },
    {
      "interface": "CSSImportRule",
      "kind": "property",
      "name": "layerName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/layerName)"
    },
    {
      "interface": "CSSImportRule",
      "kind": "property",
      "name": "styleSheet",
      "type": "CSSStyleSheet",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/styleSheet)"
    },
    {
      "interface": "CSSImportRule",
      "kind": "property",
      "name": "supportsText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/supportsText)"
    }
  ],
  "CSSKeyframeRule": [
    {
      "interface": "CSSKeyframeRule",
      "kind": "property",
      "name": "keyText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframeRule/keyText)"
    }
  ],
  "CSSKeyframesRule": [
    {
      "interface": "CSSKeyframesRule",
      "kind": "property",
      "name": "cssRules",
      "type": "CSSRuleList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/cssRules)"
    },
    {
      "interface": "CSSKeyframesRule",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/length)"
    },
    {
      "interface": "CSSKeyframesRule",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/name)"
    },
    {
      "interface": "CSSKeyframesRule",
      "kind": "method",
      "name": "appendRule",
      "parameters": [
        {
          "name": "rule",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/appendRule)"
    },
    {
      "interface": "CSSKeyframesRule",
      "kind": "method",
      "name": "deleteRule",
      "parameters": [
        {
          "name": "select",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/deleteRule)"
    },
    {
      "interface": "CSSKeyframesRule",
      "kind": "method",
      "name": "findRule",
      "parameters": [
        {
          "name": "select",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CSSKeyframeRule",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/findRule)"
    }
  ],
  "CSSKeywordValue": [
    {
      "interface": "CSSKeywordValue",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeywordValue/value)"
    }
  ],
  "CSSLayerBlockRule": [
    {
      "interface": "CSSLayerBlockRule",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSLayerBlockRule/name)"
    }
  ],
  "CSSLayerStatementRule": [
    {
      "interface": "CSSLayerStatementRule",
      "kind": "property",
      "name": "nameList",
      "type": "readonly string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSLayerStatementRule/nameList)"
    }
  ],
  "CSSMathClamp": [
    {
      "interface": "CSSMathClamp",
      "kind": "property",
      "name": "lower",
      "type": "CSSNumericValue"
    },
    {
      "interface": "CSSMathClamp",
      "kind": "property",
      "name": "upper",
      "type": "CSSNumericValue"
    },
    {
      "interface": "CSSMathClamp",
      "kind": "property",
      "name": "value",
      "type": "CSSNumericValue"
    }
  ],
  "CSSMathInvert": [
    {
      "interface": "CSSMathInvert",
      "kind": "property",
      "name": "value",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathInvert/value)"
    }
  ],
  "CSSMathMax": [
    {
      "interface": "CSSMathMax",
      "kind": "property",
      "name": "values",
      "type": "CSSNumericArray",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMax/values)"
    }
  ],
  "CSSMathMin": [
    {
      "interface": "CSSMathMin",
      "kind": "property",
      "name": "values",
      "type": "CSSNumericArray",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin/values)"
    }
  ],
  "CSSMathNegate": [
    {
      "interface": "CSSMathNegate",
      "kind": "property",
      "name": "value",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate/value)"
    }
  ],
  "CSSMathProduct": [
    {
      "interface": "CSSMathProduct",
      "kind": "property",
      "name": "values",
      "type": "CSSNumericArray",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathProduct/values)"
    }
  ],
  "CSSMathSum": [
    {
      "interface": "CSSMathSum",
      "kind": "property",
      "name": "values",
      "type": "CSSNumericArray",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum/values)"
    }
  ],
  "CSSMathValue": [
    {
      "interface": "CSSMathValue",
      "kind": "property",
      "name": "operator",
      "type": "CSSMathOperator",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue/operator)"
    }
  ],
  "CSSMatrixComponent": [
    {
      "interface": "CSSMatrixComponent",
      "kind": "property",
      "name": "matrix",
      "type": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMatrixComponent/matrix)"
    }
  ],
  "CSSNamespaceRule": [
    {
      "interface": "CSSNamespaceRule",
      "kind": "property",
      "name": "namespaceURI",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNamespaceRule/namespaceURI)"
    },
    {
      "interface": "CSSNamespaceRule",
      "kind": "property",
      "name": "prefix",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNamespaceRule/prefix)"
    }
  ],
  "CSSNumericArray": [
    {
      "interface": "CSSNumericArray",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericArray/length)"
    },
    {
      "interface": "CSSNumericArray",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: CSSNumericValue, key: number, parent: CSSNumericArray) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "CSSNumericValue": [
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "values",
          "type": "CSSNumberish[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/add)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "div",
      "parameters": [
        {
          "name": "values",
          "type": "CSSNumberish[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/div)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "equals",
      "parameters": [
        {
          "name": "value",
          "type": "CSSNumberish[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/equals)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "max",
      "parameters": [
        {
          "name": "values",
          "type": "CSSNumberish[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/max)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "min",
      "parameters": [
        {
          "name": "values",
          "type": "CSSNumberish[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/min)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "mul",
      "parameters": [
        {
          "name": "values",
          "type": "CSSNumberish[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/mul)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "sub",
      "parameters": [
        {
          "name": "values",
          "type": "CSSNumberish[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/sub)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "to",
      "parameters": [
        {
          "name": "unit",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CSSUnitValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/to)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "toSum",
      "parameters": [
        {
          "name": "units",
          "type": "string[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "CSSMathSum",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/toSum)"
    },
    {
      "interface": "CSSNumericValue",
      "kind": "method",
      "name": "type",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "CSSNumericType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/type)"
    }
  ],
  "CSSPageRule": [
    {
      "interface": "CSSPageRule",
      "kind": "property",
      "name": "selectorText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPageRule/selectorText)"
    }
  ],
  "CSSPerspective": [
    {
      "interface": "CSSPerspective",
      "kind": "property",
      "name": "length",
      "type": "CSSPerspectiveValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPerspective/length)"
    }
  ],
  "CSSPropertyRule": [
    {
      "interface": "CSSPropertyRule",
      "kind": "property",
      "name": "inherits",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/inherits)"
    },
    {
      "interface": "CSSPropertyRule",
      "kind": "property",
      "name": "initialValue",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/initialValue)"
    },
    {
      "interface": "CSSPropertyRule",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/name)"
    },
    {
      "interface": "CSSPropertyRule",
      "kind": "property",
      "name": "syntax",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/syntax)"
    }
  ],
  "CSSRotate": [
    {
      "interface": "CSSRotate",
      "kind": "property",
      "name": "angle",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/angle)"
    },
    {
      "interface": "CSSRotate",
      "kind": "property",
      "name": "x",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/x)"
    },
    {
      "interface": "CSSRotate",
      "kind": "property",
      "name": "y",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/y)"
    },
    {
      "interface": "CSSRotate",
      "kind": "property",
      "name": "z",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/z)"
    }
  ],
  "CSSRule": [
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "cssText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule/cssText)"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "parentRule",
      "type": "CSSRule",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule/parentRule)"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "parentStyleSheet",
      "type": "CSSStyleSheet",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule/parentStyleSheet)"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "type",
      "type": "number"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "STYLE_RULE",
      "type": "1"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "CHARSET_RULE",
      "type": "2"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "IMPORT_RULE",
      "type": "3"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "MEDIA_RULE",
      "type": "4"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "FONT_FACE_RULE",
      "type": "5"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "PAGE_RULE",
      "type": "6"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "NAMESPACE_RULE",
      "type": "10"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "KEYFRAMES_RULE",
      "type": "7"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "KEYFRAME_RULE",
      "type": "8"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "SUPPORTS_RULE",
      "type": "12"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "COUNTER_STYLE_RULE",
      "type": "11"
    },
    {
      "interface": "CSSRule",
      "kind": "property",
      "name": "FONT_FEATURE_VALUES_RULE",
      "type": "14"
    }
  ],
  "CSSRuleList": [
    {
      "interface": "CSSRuleList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRuleList/length)"
    },
    {
      "interface": "CSSRuleList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CSSRule",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRuleList/item)"
    }
  ],
  "CSSScale": [
    {
      "interface": "CSSScale",
      "kind": "property",
      "name": "x",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/x)"
    },
    {
      "interface": "CSSScale",
      "kind": "property",
      "name": "y",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/y)"
    },
    {
      "interface": "CSSScale",
      "kind": "property",
      "name": "z",
      "type": "CSSNumberish",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/z)"
    }
  ],
  "CSSScopeRule": [
    {
      "interface": "CSSScopeRule",
      "kind": "property",
      "name": "end",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScopeRule/end)"
    },
    {
      "interface": "CSSScopeRule",
      "kind": "property",
      "name": "start",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScopeRule/start)"
    }
  ],
  "CSSSkew": [
    {
      "interface": "CSSSkew",
      "kind": "property",
      "name": "ax",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew/ax)"
    },
    {
      "interface": "CSSSkew",
      "kind": "property",
      "name": "ay",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew/ay)"
    }
  ],
  "CSSSkewX": [
    {
      "interface": "CSSSkewX",
      "kind": "property",
      "name": "ax",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewX/ax)"
    }
  ],
  "CSSSkewY": [
    {
      "interface": "CSSSkewY",
      "kind": "property",
      "name": "ay",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewY/ay)"
    }
  ],
  "CSSStyleDeclaration": [
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "accentColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/accent-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "alignContent",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-content)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "alignItems",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-items)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "alignSelf",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-self)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "alignmentBaseline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/alignment-baseline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "all",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/all)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animation",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationComposition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-composition)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationDelay",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-delay)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationDirection",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-direction)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationDuration",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-duration)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationFillMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationIterationCount",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-name)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationPlayState",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-play-state)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "animationTimingFunction",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-timing-function)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "appearance",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/appearance)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "aspectRatio",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/aspect-ratio)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backdropFilter",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/backdrop-filter)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backfaceVisibility",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/backface-visibility)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "background",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundAttachment",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-attachment)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundBlendMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-blend-mode)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundClip",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-clip)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundImage",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-image)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-origin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundPosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundPositionX",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-position-x)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundPositionY",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-position-y)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundRepeat",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-repeat)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "backgroundSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "baselineShift",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "baselineSource",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "blockSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/block-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "border",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlock",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockEndColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockEndStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockEndWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockStartColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockStartStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockStartWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBlockWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBottom",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBottomColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBottomLeftRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBottomRightRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBottomStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderBottomWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderCollapse",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-collapse)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderEndEndRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderEndStartRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderImage",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderImageOutset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-outset)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderImageRepeat",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-repeat)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderImageSlice",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-slice)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderImageSource",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-source)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderImageWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineEndColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineEndStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineEndWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineStartColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineStartStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineStartWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderInlineWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderLeft",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderLeftColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderLeftStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderLeftWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderRight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderRightColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderRightStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderRightWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderSpacing",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-spacing)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderStartEndRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderStartStartRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderTop",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderTopColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderTopLeftRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderTopRightRadius",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderTopStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderTopWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "borderWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "bottom",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/bottom)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "boxDecorationBreak",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-decoration-break)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "boxShadow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-shadow)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "boxSizing",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-sizing)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "breakAfter",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/break-after)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "breakBefore",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/break-before)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "breakInside",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/break-inside)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "captionSide",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/caption-side)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "caretColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/caret-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "clear",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/clear)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "clip",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "clipPath",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/clip-path)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "clipRule",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/clip-rule)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "color",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "colorInterpolation",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color-interpolation)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "colorInterpolationFilters",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color-interpolation-filters)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "colorScheme",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color-scheme)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnCount",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-count)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnFill",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-fill)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnGap",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-gap)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnRule",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnRuleColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnRuleStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnRuleWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnSpan",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-span)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columnWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "columns",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/columns)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "contain",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "containIntrinsicBlockSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-block-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "containIntrinsicHeight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-height)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "containIntrinsicInlineSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-inline-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "containIntrinsicSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "containIntrinsicWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "container",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/container)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "containerName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/container-name)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "containerType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/container-type)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "content",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/content)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "contentVisibility",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/content-visibility)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "counterIncrement",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/counter-increment)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "counterReset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/counter-reset)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "counterSet",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/counter-set)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "cssFloat",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/cssFloat)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "cssText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/cssText)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "cursor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/cursor)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "cx",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/cx)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "cy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/cy)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "d",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/d)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "direction",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/direction)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "display",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/display)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "dominantBaseline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/dominant-baseline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "emptyCells",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/empty-cells)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fill",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/fill)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fillOpacity",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/fill-opacity)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fillRule",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/fill-rule)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "filter",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/filter)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "flex",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "flexBasis",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-basis)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "flexDirection",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-direction)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "flexFlow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-flow)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "flexGrow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-grow)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "flexShrink",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-shrink)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "flexWrap",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-wrap)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "float",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/float)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "floodColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flood-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "floodOpacity",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flood-opacity)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "font",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontFamily",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-family)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontFeatureSettings",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-feature-settings)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontKerning",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-kerning)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontOpticalSizing",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontPalette",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-palette)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontSizeAdjust",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-size-adjust)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontStretch",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-stretch)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontSynthesis",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontSynthesisSmallCaps",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis-small-caps)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontSynthesisStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontSynthesisWeight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis-weight)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariant",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariantAlternates",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariantCaps",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-caps)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariantEastAsian",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariantLigatures",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariantNumeric",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariantPosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontVariationSettings",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variation-settings)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "fontWeight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-weight)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "forcedColorAdjust",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gap",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/gap)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "grid",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridArea",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-area)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridAutoColumns",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridAutoFlow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridAutoRows",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridColumn",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-column)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridColumnEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-column-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridColumnGap",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridColumnStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-column-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridGap",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridRow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-row)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridRowEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-row-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridRowGap",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridRowStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-row-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridTemplate",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridTemplateAreas",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template-areas)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridTemplateColumns",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template-columns)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "gridTemplateRows",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template-rows)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "height",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/height)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "hyphenateCharacter",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/hyphenate-character)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "hyphens",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/hyphens)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "imageOrientation",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "imageRendering",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/image-rendering)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "inlineSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inline-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "inset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "insetBlock",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-block)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "insetBlockEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-block-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "insetBlockStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-block-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "insetInline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-inline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "insetInlineEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-inline-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "insetInlineStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-inline-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "isolation",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/isolation)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "justifyContent",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/justify-content)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "justifyItems",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/justify-items)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "justifySelf",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/justify-self)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "left",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/left)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/length)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "letterSpacing",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/letter-spacing)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "lightingColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/lighting-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "lineBreak",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/line-break)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "lineHeight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/line-height)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "listStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "listStyleImage",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style-image)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "listStylePosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "listStyleType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style-type)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "margin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginBlock",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-block)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginBlockEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-block-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginBlockStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-block-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginBottom",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-bottom)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginInline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-inline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginInlineEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-inline-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginInlineStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-inline-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginLeft",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-left)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginRight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-right)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marginTop",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-top)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "marker",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "markerEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "markerMid",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker-mid)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "markerStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "mask",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskClip",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-clip)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskComposite",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-composite)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskImage",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-image)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-mode)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-origin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskPosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskRepeat",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-repeat)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maskType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-type)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "mathDepth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/math-depth)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "mathStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/math-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maxBlockSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-block-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maxHeight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-height)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maxInlineSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-inline-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "maxWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "minBlockSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-block-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "minHeight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-height)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "minInlineSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-inline-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "minWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "mixBlendMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "objectFit",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/object-fit)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "objectPosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/object-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "offset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "offsetAnchor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-anchor)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "offsetDistance",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-distance)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "offsetPath",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-path)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "offsetPosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "offsetRotate",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-rotate)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "opacity",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/opacity)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "order",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/order)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "orphans",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/orphans)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "outline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "outlineColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "outlineOffset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-offset)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "outlineStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "outlineWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overflow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overflowAnchor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-anchor)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overflowClipMargin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-clip-margin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overflowWrap",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-wrap)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overflowX",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-x)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overflowY",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-y)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overscrollBehavior",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overscrollBehaviorBlock",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overscrollBehaviorInline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overscrollBehaviorX",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "overscrollBehaviorY",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "padding",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingBlock",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-block)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingBlockEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-block-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingBlockStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-block-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingBottom",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-bottom)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingInline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-inline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingInlineEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-inline-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingInlineStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-inline-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingLeft",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-left)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingRight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-right)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paddingTop",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-top)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "page",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/page)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "pageBreakAfter",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "pageBreakBefore",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "pageBreakInside",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "paintOrder",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/paint-order)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "parentRule",
      "type": "CSSRule",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/parentRule)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "perspective",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/perspective)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "perspectiveOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/perspective-origin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "placeContent",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/place-content)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "placeItems",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/place-items)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "placeSelf",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/place-self)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "pointerEvents",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/pointer-events)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "position",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "printColorAdjust",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/print-color-adjust)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "quotes",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/quotes)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "r",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/r)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "resize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/resize)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "right",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/right)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "rotate",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/rotate)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "rowGap",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/row-gap)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "rubyAlign",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/ruby-align)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "rubyPosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/ruby-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "rx",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/rx)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "ry",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/ry)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scale",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scale)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollBehavior",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-behavior)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMargin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginBlock",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginBlockEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginBlockStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginBottom",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginInline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginInlineEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginInlineStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginLeft",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginRight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollMarginTop",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPadding",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingBlock",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingBlockEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingBlockStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingBottom",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingInline",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingInlineEnd",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingInlineStart",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingLeft",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingRight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollPaddingTop",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollSnapAlign",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollSnapStop",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollSnapType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollbarColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scrollbar-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollbarGutter",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "scrollbarWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scrollbar-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "shapeImageThreshold",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "shapeMargin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-margin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "shapeOutside",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-outside)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "shapeRendering",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-rendering)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "stopColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stop-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "stopOpacity",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stop-opacity)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "stroke",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "strokeDasharray",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-dasharray)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "strokeDashoffset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-dashoffset)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "strokeLinecap",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-linecap)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "strokeLinejoin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-linejoin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "strokeMiterlimit",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-miterlimit)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "strokeOpacity",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-opacity)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "strokeWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "tabSize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/tab-size)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "tableLayout",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/table-layout)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textAlign",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-align)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textAlignLast",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-align-last)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textAnchor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-anchor)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textBox",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textBoxEdge",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textBoxTrim",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textCombineUpright",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-combine-upright)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textDecoration",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textDecorationColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textDecorationLine",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-line)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textDecorationSkipInk",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textDecorationStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textDecorationThickness",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textEmphasis",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textEmphasisColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textEmphasisPosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textEmphasisStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textIndent",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-indent)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textOrientation",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-orientation)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textOverflow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-overflow)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textRendering",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-rendering)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textShadow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-shadow)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textTransform",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-transform)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textUnderlineOffset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-underline-offset)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textUnderlinePosition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-underline-position)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textWrap",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-wrap)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textWrapMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-wrap-mode)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "textWrapStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-wrap-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "top",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/top)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "touchAction",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/touch-action)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transform",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transformBox",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-box)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transformOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-origin)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transformStyle",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-style)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transition",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transitionBehavior",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-behavior)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transitionDelay",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-delay)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transitionDuration",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-duration)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transitionProperty",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-property)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "transitionTimingFunction",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-timing-function)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "translate",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/translate)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "unicodeBidi",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/unicode-bidi)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "userSelect",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/user-select)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "vectorEffect",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/vector-effect)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "verticalAlign",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/vertical-align)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "viewTransitionClass",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "viewTransitionName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/view-transition-name)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "visibility",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/visibility)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAlignContent",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAlignItems",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAlignSelf",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimation",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationDelay",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationDirection",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationDuration",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationFillMode",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationIterationCount",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationName",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationPlayState",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAnimationTimingFunction",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitAppearance",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBackfaceVisibility",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBackgroundClip",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBackgroundOrigin",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBackgroundSize",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBorderBottomLeftRadius",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBorderBottomRightRadius",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBorderRadius",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBorderTopLeftRadius",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBorderTopRightRadius",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBoxAlign",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBoxFlex",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBoxOrdinalGroup",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBoxOrient",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBoxPack",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBoxShadow",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitBoxSizing",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFilter",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFlex",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFlexBasis",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFlexDirection",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFlexFlow",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFlexGrow",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFlexShrink",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitFlexWrap",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitJustifyContent",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitLineClamp",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-line-clamp)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMask",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskBoxImage",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskBoxImageOutset",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskBoxImageRepeat",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskBoxImageSlice",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskBoxImageSource",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskBoxImageWidth",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskClip",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskComposite",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskImage",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskOrigin",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskPosition",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskRepeat",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitMaskSize",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitOrder",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitPerspective",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitPerspectiveOrigin",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTextFillColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-fill-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTextSizeAdjust",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTextStroke",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTextStrokeColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-color)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTextStrokeWidth",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransform",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransformOrigin",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransformStyle",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransition",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransitionDelay",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransitionDuration",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransitionProperty",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitTransitionTimingFunction",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "webkitUserSelect",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "whiteSpace",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/white-space)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "whiteSpaceCollapse",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/white-space-collapse)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "widows",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/widows)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/width)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "willChange",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/will-change)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "wordBreak",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/word-break)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "wordSpacing",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/word-spacing)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "wordWrap",
      "type": "string"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "writingMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/writing-mode)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "x",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/x)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "y",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/y)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "zIndex",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/z-index)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "property",
      "name": "zoom",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/CSS/zoom)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "method",
      "name": "getPropertyPriority",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/getPropertyPriority)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "method",
      "name": "getPropertyValue",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/getPropertyValue)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/item)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "method",
      "name": "removeProperty",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/removeProperty)"
    },
    {
      "interface": "CSSStyleDeclaration",
      "kind": "method",
      "name": "setProperty",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "priority",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/setProperty)"
    }
  ],
  "CSSStyleRule": [
    {
      "interface": "CSSStyleRule",
      "kind": "property",
      "name": "selectorText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleRule/selectorText)"
    },
    {
      "interface": "CSSStyleRule",
      "kind": "property",
      "name": "styleMap",
      "type": "StylePropertyMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleRule/styleMap)"
    }
  ],
  "CSSStyleSheet": [
    {
      "interface": "CSSStyleSheet",
      "kind": "property",
      "name": "cssRules",
      "type": "CSSRuleList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/cssRules)"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "property",
      "name": "ownerRule",
      "type": "CSSRule",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/ownerRule)"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "property",
      "name": "rules",
      "type": "CSSRuleList"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "method",
      "name": "addRule",
      "parameters": [
        {
          "name": "selector",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "style",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "number"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "method",
      "name": "deleteRule",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/deleteRule)"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "method",
      "name": "insertRule",
      "parameters": [
        {
          "name": "rule",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/insertRule)"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "method",
      "name": "removeRule",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "method",
      "name": "replace",
      "parameters": [
        {
          "name": "text",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<CSSStyleSheet>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/replace)"
    },
    {
      "interface": "CSSStyleSheet",
      "kind": "method",
      "name": "replaceSync",
      "parameters": [
        {
          "name": "text",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/replaceSync)"
    }
  ],
  "CSSStyleValue": [
    {
      "interface": "CSSStyleValue",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    }
  ],
  "CSSTransformComponent": [
    {
      "interface": "CSSTransformComponent",
      "kind": "property",
      "name": "is2D",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent/is2D)"
    },
    {
      "interface": "CSSTransformComponent",
      "kind": "method",
      "name": "toMatrix",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent/toMatrix)"
    },
    {
      "interface": "CSSTransformComponent",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    }
  ],
  "CSSTransformValue": [
    {
      "interface": "CSSTransformValue",
      "kind": "property",
      "name": "is2D",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/is2D)"
    },
    {
      "interface": "CSSTransformValue",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/length)"
    },
    {
      "interface": "CSSTransformValue",
      "kind": "method",
      "name": "toMatrix",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/toMatrix)"
    },
    {
      "interface": "CSSTransformValue",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: CSSTransformComponent, key: number, parent: CSSTransformValue) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "CSSTransition": [
    {
      "interface": "CSSTransition",
      "kind": "property",
      "name": "transitionProperty",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransition/transitionProperty)"
    },
    {
      "interface": "CSSTransition",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: CSSTransition, ev: AnimationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CSSTransition",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CSSTransition",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: CSSTransition, ev: AnimationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CSSTransition",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "CSSTranslate": [
    {
      "interface": "CSSTranslate",
      "kind": "property",
      "name": "x",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/x)"
    },
    {
      "interface": "CSSTranslate",
      "kind": "property",
      "name": "y",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/y)"
    },
    {
      "interface": "CSSTranslate",
      "kind": "property",
      "name": "z",
      "type": "CSSNumericValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/z)"
    }
  ],
  "CSSUnitValue": [
    {
      "interface": "CSSUnitValue",
      "kind": "property",
      "name": "unit",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue/unit)"
    },
    {
      "interface": "CSSUnitValue",
      "kind": "property",
      "name": "value",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue/value)"
    }
  ],
  "CSSUnparsedValue": [
    {
      "interface": "CSSUnparsedValue",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnparsedValue/length)"
    },
    {
      "interface": "CSSUnparsedValue",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "CSSVariableReferenceValue": [
    {
      "interface": "CSSVariableReferenceValue",
      "kind": "property",
      "name": "fallback",
      "type": "CSSUnparsedValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue/fallback)"
    },
    {
      "interface": "CSSVariableReferenceValue",
      "kind": "property",
      "name": "variable",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue/variable)"
    }
  ],
  "CSSViewTransitionRule": [
    {
      "interface": "CSSViewTransitionRule",
      "kind": "property",
      "name": "navigation",
      "type": "string"
    },
    {
      "interface": "CSSViewTransitionRule",
      "kind": "property",
      "name": "types",
      "type": "readonly string[]"
    }
  ],
  "Cache": [
    {
      "interface": "Cache",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "request",
          "type": "RequestInfo | URL",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/add)"
    },
    {
      "interface": "Cache",
      "kind": "method",
      "name": "addAll",
      "parameters": [
        {
          "name": "requests",
          "type": "RequestInfo[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll)"
    },
    {
      "interface": "Cache",
      "kind": "method",
      "name": "delete",
      "parameters": [
        {
          "name": "request",
          "type": "RequestInfo | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "CacheQueryOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/delete)"
    },
    {
      "interface": "Cache",
      "kind": "method",
      "name": "keys",
      "parameters": [
        {
          "name": "request",
          "type": "RequestInfo | URL",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "CacheQueryOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "Promise<readonly Request[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/keys)"
    },
    {
      "interface": "Cache",
      "kind": "method",
      "name": "match",
      "parameters": [
        {
          "name": "request",
          "type": "RequestInfo | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "CacheQueryOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<Response>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/match)"
    },
    {
      "interface": "Cache",
      "kind": "method",
      "name": "matchAll",
      "parameters": [
        {
          "name": "request",
          "type": "RequestInfo | URL",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "CacheQueryOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "Promise<readonly Response[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/matchAll)"
    },
    {
      "interface": "Cache",
      "kind": "method",
      "name": "put",
      "parameters": [
        {
          "name": "request",
          "type": "RequestInfo | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "response",
          "type": "Response",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/put)"
    }
  ],
  "CacheStorage": [
    {
      "interface": "CacheStorage",
      "kind": "method",
      "name": "delete",
      "parameters": [
        {
          "name": "cacheName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/delete)"
    },
    {
      "interface": "CacheStorage",
      "kind": "method",
      "name": "has",
      "parameters": [
        {
          "name": "cacheName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/has)"
    },
    {
      "interface": "CacheStorage",
      "kind": "method",
      "name": "keys",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<string[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/keys)"
    },
    {
      "interface": "CacheStorage",
      "kind": "method",
      "name": "match",
      "parameters": [
        {
          "name": "request",
          "type": "RequestInfo | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "MultiCacheQueryOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<Response>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/match)"
    },
    {
      "interface": "CacheStorage",
      "kind": "method",
      "name": "open",
      "parameters": [
        {
          "name": "cacheName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<Cache>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/open)"
    }
  ],
  "CanvasCaptureMediaStreamTrack": [
    {
      "interface": "CanvasCaptureMediaStreamTrack",
      "kind": "property",
      "name": "canvas",
      "type": "HTMLCanvasElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasCaptureMediaStreamTrack/canvas)"
    },
    {
      "interface": "CanvasCaptureMediaStreamTrack",
      "kind": "method",
      "name": "requestFrame",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasCaptureMediaStreamTrack/requestFrame)"
    },
    {
      "interface": "CanvasCaptureMediaStreamTrack",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: CanvasCaptureMediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CanvasCaptureMediaStreamTrack",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CanvasCaptureMediaStreamTrack",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: CanvasCaptureMediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "CanvasCaptureMediaStreamTrack",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "CanvasCompositing": [
    {
      "interface": "CanvasCompositing",
      "kind": "property",
      "name": "globalAlpha",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/globalAlpha)"
    },
    {
      "interface": "CanvasCompositing",
      "kind": "property",
      "name": "globalCompositeOperation",
      "type": "GlobalCompositeOperation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation)"
    }
  ],
  "CanvasDrawImage": [
    {
      "interface": "CanvasDrawImage",
      "kind": "method",
      "name": "drawImage",
      "parameters": [
        {
          "name": "image",
          "type": "CanvasImageSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "dx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dy",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/drawImage)"
    },
    {
      "interface": "CanvasDrawImage",
      "kind": "method",
      "name": "drawImage",
      "parameters": [
        {
          "name": "image",
          "type": "CanvasImageSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "dx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dy",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dw",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dh",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void"
    },
    {
      "interface": "CanvasDrawImage",
      "kind": "method",
      "name": "drawImage",
      "parameters": [
        {
          "name": "image",
          "type": "CanvasImageSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "sx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sy",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sw",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sh",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dy",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dw",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dh",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void"
    }
  ],
  "CanvasDrawPath": [
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "beginPath",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/beginPath)"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "clip",
      "parameters": [
        {
          "name": "fillRule",
          "type": "CanvasFillRule",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/clip)"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "clip",
      "parameters": [
        {
          "name": "path",
          "type": "Path2D",
          "optional": false,
          "rest": false
        },
        {
          "name": "fillRule",
          "type": "CanvasFillRule",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "fill",
      "parameters": [
        {
          "name": "fillRule",
          "type": "CanvasFillRule",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fill)"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "fill",
      "parameters": [
        {
          "name": "path",
          "type": "Path2D",
          "optional": false,
          "rest": false
        },
        {
          "name": "fillRule",
          "type": "CanvasFillRule",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "isPointInPath",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "fillRule",
          "type": "CanvasFillRule",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isPointInPath)"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "isPointInPath",
      "parameters": [
        {
          "name": "path",
          "type": "Path2D",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "fillRule",
          "type": "CanvasFillRule",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "boolean"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "isPointInStroke",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isPointInStroke)"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "isPointInStroke",
      "parameters": [
        {
          "name": "path",
          "type": "Path2D",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "boolean"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "stroke",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/stroke)"
    },
    {
      "interface": "CanvasDrawPath",
      "kind": "method",
      "name": "stroke",
      "parameters": [
        {
          "name": "path",
          "type": "Path2D",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    }
  ],
  "CanvasFillStrokeStyles": [
    {
      "interface": "CanvasFillStrokeStyles",
      "kind": "property",
      "name": "fillStyle",
      "type": "string | CanvasGradient | CanvasPattern",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillStyle)"
    },
    {
      "interface": "CanvasFillStrokeStyles",
      "kind": "property",
      "name": "strokeStyle",
      "type": "string | CanvasGradient | CanvasPattern",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeStyle)"
    },
    {
      "interface": "CanvasFillStrokeStyles",
      "kind": "method",
      "name": "createConicGradient",
      "parameters": [
        {
          "name": "startAngle",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "CanvasGradient",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createConicGradient)"
    },
    {
      "interface": "CanvasFillStrokeStyles",
      "kind": "method",
      "name": "createLinearGradient",
      "parameters": [
        {
          "name": "x0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y1",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "CanvasGradient",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createLinearGradient)"
    },
    {
      "interface": "CanvasFillStrokeStyles",
      "kind": "method",
      "name": "createPattern",
      "parameters": [
        {
          "name": "image",
          "type": "CanvasImageSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "repetition",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "CanvasPattern",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createPattern)"
    },
    {
      "interface": "CanvasFillStrokeStyles",
      "kind": "method",
      "name": "createRadialGradient",
      "parameters": [
        {
          "name": "x0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "r0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "r1",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "CanvasGradient",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createRadialGradient)"
    }
  ],
  "CanvasFilters": [
    {
      "interface": "CanvasFilters",
      "kind": "property",
      "name": "filter",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/filter)"
    }
  ],
  "CanvasGradient": [
    {
      "interface": "CanvasGradient",
      "kind": "method",
      "name": "addColorStop",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "color",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n\nThrows an \"IndexSizeError\" DOMException if the offset is out of range. Throws a \"SyntaxError\" DOMException if the color cannot be parsed.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasGradient/addColorStop)"
    }
  ],
  "CanvasImageData": [
    {
      "interface": "CanvasImageData",
      "kind": "method",
      "name": "createImageData",
      "parameters": [
        {
          "name": "sw",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sh",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "settings",
          "type": "ImageDataSettings",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "ImageData",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createImageData)"
    },
    {
      "interface": "CanvasImageData",
      "kind": "method",
      "name": "createImageData",
      "parameters": [
        {
          "name": "imagedata",
          "type": "ImageData",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ImageData"
    },
    {
      "interface": "CanvasImageData",
      "kind": "method",
      "name": "getImageData",
      "parameters": [
        {
          "name": "sx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sy",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sw",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sh",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "settings",
          "type": "ImageDataSettings",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 4,
      "returnType": "ImageData",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getImageData)"
    },
    {
      "interface": "CanvasImageData",
      "kind": "method",
      "name": "putImageData",
      "parameters": [
        {
          "name": "imagedata",
          "type": "ImageData",
          "optional": false,
          "rest": false
        },
        {
          "name": "dx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dy",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/putImageData)"
    },
    {
      "interface": "CanvasImageData",
      "kind": "method",
      "name": "putImageData",
      "parameters": [
        {
          "name": "imagedata",
          "type": "ImageData",
          "optional": false,
          "rest": false
        },
        {
          "name": "dx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dy",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dirtyX",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dirtyY",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dirtyWidth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dirtyHeight",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void"
    }
  ],
  "CanvasImageSmoothing": [
    {
      "interface": "CanvasImageSmoothing",
      "kind": "property",
      "name": "imageSmoothingEnabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled)"
    },
    {
      "interface": "CanvasImageSmoothing",
      "kind": "property",
      "name": "imageSmoothingQuality",
      "type": "ImageSmoothingQuality",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality)"
    }
  ],
  "CanvasPath": [
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "arc",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "radius",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "startAngle",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "endAngle",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "counterclockwise",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/arc)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "arcTo",
      "parameters": [
        {
          "name": "x1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x2",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y2",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "radius",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/arcTo)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "bezierCurveTo",
      "parameters": [
        {
          "name": "cp1x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "cp1y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "cp2x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "cp2y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "closePath",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/closePath)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "ellipse",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "radiusX",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "radiusY",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "rotation",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "startAngle",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "endAngle",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "counterclockwise",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 7,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/ellipse)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "lineTo",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineTo)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "moveTo",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/moveTo)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "quadraticCurveTo",
      "parameters": [
        {
          "name": "cpx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "cpy",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "rect",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "h",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/rect)"
    },
    {
      "interface": "CanvasPath",
      "kind": "method",
      "name": "roundRect",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "h",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "radii",
          "type": "number | DOMPointInit | (number | DOMPointInit)[]",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/roundRect)"
    }
  ],
  "CanvasPathDrawingStyles": [
    {
      "interface": "CanvasPathDrawingStyles",
      "kind": "property",
      "name": "lineCap",
      "type": "CanvasLineCap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineCap)"
    },
    {
      "interface": "CanvasPathDrawingStyles",
      "kind": "property",
      "name": "lineDashOffset",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineDashOffset)"
    },
    {
      "interface": "CanvasPathDrawingStyles",
      "kind": "property",
      "name": "lineJoin",
      "type": "CanvasLineJoin",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineJoin)"
    },
    {
      "interface": "CanvasPathDrawingStyles",
      "kind": "property",
      "name": "lineWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineWidth)"
    },
    {
      "interface": "CanvasPathDrawingStyles",
      "kind": "property",
      "name": "miterLimit",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/miterLimit)"
    },
    {
      "interface": "CanvasPathDrawingStyles",
      "kind": "method",
      "name": "getLineDash",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getLineDash)"
    },
    {
      "interface": "CanvasPathDrawingStyles",
      "kind": "method",
      "name": "setLineDash",
      "parameters": [
        {
          "name": "segments",
          "type": "number[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash)"
    }
  ],
  "CanvasPattern": [
    {
      "interface": "CanvasPattern",
      "kind": "method",
      "name": "setTransform",
      "parameters": [
        {
          "name": "transform",
          "type": "DOMMatrix2DInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasPattern/setTransform)"
    }
  ],
  "CanvasRect": [
    {
      "interface": "CanvasRect",
      "kind": "method",
      "name": "clearRect",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "h",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/clearRect)"
    },
    {
      "interface": "CanvasRect",
      "kind": "method",
      "name": "fillRect",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "h",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillRect)"
    },
    {
      "interface": "CanvasRect",
      "kind": "method",
      "name": "strokeRect",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "h",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeRect)"
    }
  ],
  "CanvasRenderingContext2D": [
    {
      "interface": "CanvasRenderingContext2D",
      "kind": "property",
      "name": "canvas",
      "type": "HTMLCanvasElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/canvas)"
    }
  ],
  "CanvasSettings": [
    {
      "interface": "CanvasSettings",
      "kind": "method",
      "name": "getContextAttributes",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "CanvasRenderingContext2DSettings",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getContextAttributes)"
    }
  ],
  "CanvasShadowStyles": [
    {
      "interface": "CanvasShadowStyles",
      "kind": "property",
      "name": "shadowBlur",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowBlur)"
    },
    {
      "interface": "CanvasShadowStyles",
      "kind": "property",
      "name": "shadowColor",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowColor)"
    },
    {
      "interface": "CanvasShadowStyles",
      "kind": "property",
      "name": "shadowOffsetX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX)"
    },
    {
      "interface": "CanvasShadowStyles",
      "kind": "property",
      "name": "shadowOffsetY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY)"
    }
  ],
  "CanvasState": [
    {
      "interface": "CanvasState",
      "kind": "method",
      "name": "isContextLost",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isContextLost)"
    },
    {
      "interface": "CanvasState",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/reset)"
    },
    {
      "interface": "CanvasState",
      "kind": "method",
      "name": "restore",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/restore)"
    },
    {
      "interface": "CanvasState",
      "kind": "method",
      "name": "save",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/save)"
    }
  ],
  "CanvasText": [
    {
      "interface": "CanvasText",
      "kind": "method",
      "name": "fillText",
      "parameters": [
        {
          "name": "text",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "maxWidth",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillText)"
    },
    {
      "interface": "CanvasText",
      "kind": "method",
      "name": "measureText",
      "parameters": [
        {
          "name": "text",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TextMetrics",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/measureText)"
    },
    {
      "interface": "CanvasText",
      "kind": "method",
      "name": "strokeText",
      "parameters": [
        {
          "name": "text",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "maxWidth",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeText)"
    }
  ],
  "CanvasTextDrawingStyles": [
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "direction",
      "type": "CanvasDirection",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/direction)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "font",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/font)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "fontKerning",
      "type": "CanvasFontKerning",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontKerning)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "fontStretch",
      "type": "CanvasFontStretch",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontStretch)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "fontVariantCaps",
      "type": "CanvasFontVariantCaps",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontVariantCaps)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "letterSpacing",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/letterSpacing)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "textAlign",
      "type": "CanvasTextAlign",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textAlign)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "textBaseline",
      "type": "CanvasTextBaseline",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textBaseline)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "textRendering",
      "type": "CanvasTextRendering",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textRendering)"
    },
    {
      "interface": "CanvasTextDrawingStyles",
      "kind": "property",
      "name": "wordSpacing",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/wordSpacing)"
    }
  ],
  "CanvasTransform": [
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "getTransform",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getTransform)"
    },
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "resetTransform",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/resetTransform)"
    },
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "rotate",
      "parameters": [
        {
          "name": "angle",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/rotate)"
    },
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "scale",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/scale)"
    },
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "setTransform",
      "parameters": [
        {
          "name": "a",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "b",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "c",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "d",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "e",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "f",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setTransform)"
    },
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "setTransform",
      "parameters": [
        {
          "name": "transform",
          "type": "DOMMatrix2DInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "transform",
      "parameters": [
        {
          "name": "a",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "b",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "c",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "d",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "e",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "f",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/transform)"
    },
    {
      "interface": "CanvasTransform",
      "kind": "method",
      "name": "translate",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/translate)"
    }
  ],
  "CanvasUserInterface": [
    {
      "interface": "CanvasUserInterface",
      "kind": "method",
      "name": "drawFocusIfNeeded",
      "parameters": [
        {
          "name": "element",
          "type": "Element",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded)"
    },
    {
      "interface": "CanvasUserInterface",
      "kind": "method",
      "name": "drawFocusIfNeeded",
      "parameters": [
        {
          "name": "path",
          "type": "Path2D",
          "optional": false,
          "rest": false
        },
        {
          "name": "element",
          "type": "Element",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    }
  ],
  "CaretPosition": [
    {
      "interface": "CaretPosition",
      "kind": "property",
      "name": "offset",
      "type": "number"
    },
    {
      "interface": "CaretPosition",
      "kind": "property",
      "name": "offsetNode",
      "type": "Node"
    },
    {
      "interface": "CaretPosition",
      "kind": "method",
      "name": "getClientRect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMRect"
    }
  ],
  "CharacterData": [
    {
      "interface": "CharacterData",
      "kind": "property",
      "name": "data",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/data)"
    },
    {
      "interface": "CharacterData",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/length)"
    },
    {
      "interface": "CharacterData",
      "kind": "property",
      "name": "ownerDocument",
      "type": "Document"
    },
    {
      "interface": "CharacterData",
      "kind": "method",
      "name": "appendData",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/appendData)"
    },
    {
      "interface": "CharacterData",
      "kind": "method",
      "name": "deleteData",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/deleteData)"
    },
    {
      "interface": "CharacterData",
      "kind": "method",
      "name": "insertData",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/insertData)"
    },
    {
      "interface": "CharacterData",
      "kind": "method",
      "name": "replaceData",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceData)"
    },
    {
      "interface": "CharacterData",
      "kind": "method",
      "name": "substringData",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/substringData)"
    }
  ],
  "ChildNode": [
    {
      "interface": "ChildNode",
      "kind": "method",
      "name": "after",
      "parameters": [
        {
          "name": "nodes",
          "type": "(string | Node)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/after)"
    },
    {
      "interface": "ChildNode",
      "kind": "method",
      "name": "before",
      "parameters": [
        {
          "name": "nodes",
          "type": "(string | Node)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/before)"
    },
    {
      "interface": "ChildNode",
      "kind": "method",
      "name": "remove",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Removes node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/remove)"
    },
    {
      "interface": "ChildNode",
      "kind": "method",
      "name": "replaceWith",
      "parameters": [
        {
          "name": "nodes",
          "type": "(string | Node)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceWith)"
    }
  ],
  "Clipboard": [
    {
      "interface": "Clipboard",
      "kind": "method",
      "name": "read",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<ClipboardItems>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/read)"
    },
    {
      "interface": "Clipboard",
      "kind": "method",
      "name": "readText",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<string>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/readText)"
    },
    {
      "interface": "Clipboard",
      "kind": "method",
      "name": "write",
      "parameters": [
        {
          "name": "data",
          "type": "ClipboardItems",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/write)"
    },
    {
      "interface": "Clipboard",
      "kind": "method",
      "name": "writeText",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/writeText)"
    }
  ],
  "ClipboardEvent": [
    {
      "interface": "ClipboardEvent",
      "kind": "property",
      "name": "clipboardData",
      "type": "DataTransfer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardEvent/clipboardData)"
    }
  ],
  "ClipboardItem": [
    {
      "interface": "ClipboardItem",
      "kind": "property",
      "name": "presentationStyle",
      "type": "PresentationStyle",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/presentationStyle)"
    },
    {
      "interface": "ClipboardItem",
      "kind": "property",
      "name": "types",
      "type": "readonly string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/types)"
    },
    {
      "interface": "ClipboardItem",
      "kind": "method",
      "name": "getType",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<Blob>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/getType)"
    }
  ],
  "CloseEvent": [
    {
      "interface": "CloseEvent",
      "kind": "property",
      "name": "code",
      "type": "number",
      "doc": "Returns the WebSocket connection close code provided by the server.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/code)"
    },
    {
      "interface": "CloseEvent",
      "kind": "property",
      "name": "reason",
      "type": "string",
      "doc": "Returns the WebSocket connection close reason provided by the server.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/reason)"
    },
    {
      "interface": "CloseEvent",
      "kind": "property",
      "name": "wasClean",
      "type": "boolean",
      "doc": "Returns true if the connection closed cleanly; false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/wasClean)"
    }
  ],
  "CompositionEvent": [
    {
      "interface": "CompositionEvent",
      "kind": "property",
      "name": "data",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CompositionEvent/data)"
    },
    {
      "interface": "CompositionEvent",
      "kind": "method",
      "name": "initCompositionEvent",
      "parameters": [
        {
          "name": "typeArg",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubblesArg",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelableArg",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "viewArg",
          "type": "Window",
          "optional": true,
          "rest": false
        },
        {
          "name": "dataArg",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 1,
      "returnType": "void"
    }
  ],
  "CompressionStream": [
    {
      "interface": "CompressionStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<Uint8Array<ArrayBufferLike>>"
    },
    {
      "interface": "CompressionStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<BufferSource>"
    }
  ],
  "ConstantSourceNode": [
    {
      "interface": "ConstantSourceNode",
      "kind": "property",
      "name": "offset",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ConstantSourceNode/offset)"
    },
    {
      "interface": "ConstantSourceNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ConstantSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ConstantSourceNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ConstantSourceNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ConstantSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ConstantSourceNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "ContentVisibilityAutoStateChangeEvent": [
    {
      "interface": "ContentVisibilityAutoStateChangeEvent",
      "kind": "property",
      "name": "skipped",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContentVisibilityAutoStateChangeEvent/skipped)"
    }
  ],
  "ConvolverNode": [
    {
      "interface": "ConvolverNode",
      "kind": "property",
      "name": "buffer",
      "type": "AudioBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ConvolverNode/buffer)"
    },
    {
      "interface": "ConvolverNode",
      "kind": "property",
      "name": "normalize",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ConvolverNode/normalize)"
    }
  ],
  "CountQueuingStrategy": [
    {
      "interface": "CountQueuingStrategy",
      "kind": "property",
      "name": "highWaterMark",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/highWaterMark)"
    },
    {
      "interface": "CountQueuingStrategy",
      "kind": "property",
      "name": "size",
      "type": "QueuingStrategySize<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/size)"
    }
  ],
  "Credential": [
    {
      "interface": "Credential",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Credential/id)"
    },
    {
      "interface": "Credential",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Credential/type)"
    }
  ],
  "CredentialsContainer": [
    {
      "interface": "CredentialsContainer",
      "kind": "method",
      "name": "create",
      "parameters": [
        {
          "name": "options",
          "type": "CredentialCreationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<Credential>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/create)"
    },
    {
      "interface": "CredentialsContainer",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "options",
          "type": "CredentialRequestOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<Credential>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/get)"
    },
    {
      "interface": "CredentialsContainer",
      "kind": "method",
      "name": "preventSilentAccess",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/preventSilentAccess)"
    },
    {
      "interface": "CredentialsContainer",
      "kind": "method",
      "name": "store",
      "parameters": [
        {
          "name": "credential",
          "type": "Credential",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/store)"
    }
  ],
  "Crypto": [
    {
      "interface": "Crypto",
      "kind": "property",
      "name": "subtle",
      "type": "SubtleCrypto",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/subtle)"
    },
    {
      "interface": "Crypto",
      "kind": "method",
      "name": "getRandomValues",
      "parameters": [
        {
          "name": "array",
          "type": "T",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "T",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/getRandomValues)"
    },
    {
      "interface": "Crypto",
      "kind": "method",
      "name": "randomUUID",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "`${string}-${string}-${string}-${string}-${string}`",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/randomUUID)"
    }
  ],
  "CryptoKey": [
    {
      "interface": "CryptoKey",
      "kind": "property",
      "name": "algorithm",
      "type": "KeyAlgorithm",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/algorithm)"
    },
    {
      "interface": "CryptoKey",
      "kind": "property",
      "name": "extractable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/extractable)"
    },
    {
      "interface": "CryptoKey",
      "kind": "property",
      "name": "type",
      "type": "KeyType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/type)"
    },
    {
      "interface": "CryptoKey",
      "kind": "property",
      "name": "usages",
      "type": "KeyUsage[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/usages)"
    }
  ],
  "CustomElementRegistry": [
    {
      "interface": "CustomElementRegistry",
      "kind": "method",
      "name": "define",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "constructor",
          "type": "CustomElementConstructor",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ElementDefinitionOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/define)"
    },
    {
      "interface": "CustomElementRegistry",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CustomElementConstructor",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/get)"
    },
    {
      "interface": "CustomElementRegistry",
      "kind": "method",
      "name": "getName",
      "parameters": [
        {
          "name": "constructor",
          "type": "CustomElementConstructor",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/getName)"
    },
    {
      "interface": "CustomElementRegistry",
      "kind": "method",
      "name": "upgrade",
      "parameters": [
        {
          "name": "root",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/upgrade)"
    },
    {
      "interface": "CustomElementRegistry",
      "kind": "method",
      "name": "whenDefined",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<CustomElementConstructor>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/whenDefined)"
    }
  ],
  "CustomEvent": [
    {
      "interface": "CustomEvent",
      "kind": "property",
      "name": "detail",
      "type": "T",
      "doc": "Returns any custom data event was created with. Typically used for synthetic events.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent/detail)"
    },
    {
      "interface": "CustomEvent",
      "kind": "method",
      "name": "initCustomEvent",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubbles",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelable",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "detail",
          "type": "T",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 1,
      "returnType": "void"
    }
  ],
  "CustomStateSet": [
    {
      "interface": "CustomStateSet",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: string, key: string, parent: CustomStateSet) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "DOMException": [
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "code",
      "type": "number"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "message",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/message)"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/name)"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "INDEX_SIZE_ERR",
      "type": "1"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "DOMSTRING_SIZE_ERR",
      "type": "2"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "HIERARCHY_REQUEST_ERR",
      "type": "3"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "WRONG_DOCUMENT_ERR",
      "type": "4"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "INVALID_CHARACTER_ERR",
      "type": "5"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "NO_DATA_ALLOWED_ERR",
      "type": "6"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "NO_MODIFICATION_ALLOWED_ERR",
      "type": "7"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "NOT_FOUND_ERR",
      "type": "8"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "NOT_SUPPORTED_ERR",
      "type": "9"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "INUSE_ATTRIBUTE_ERR",
      "type": "10"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "INVALID_STATE_ERR",
      "type": "11"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "SYNTAX_ERR",
      "type": "12"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "INVALID_MODIFICATION_ERR",
      "type": "13"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "NAMESPACE_ERR",
      "type": "14"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "INVALID_ACCESS_ERR",
      "type": "15"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "VALIDATION_ERR",
      "type": "16"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "TYPE_MISMATCH_ERR",
      "type": "17"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "SECURITY_ERR",
      "type": "18"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "NETWORK_ERR",
      "type": "19"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "ABORT_ERR",
      "type": "20"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "URL_MISMATCH_ERR",
      "type": "21"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "QUOTA_EXCEEDED_ERR",
      "type": "22"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "TIMEOUT_ERR",
      "type": "23"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "INVALID_NODE_TYPE_ERR",
      "type": "24"
    },
    {
      "interface": "DOMException",
      "kind": "property",
      "name": "DATA_CLONE_ERR",
      "type": "25"
    }
  ],
  "DOMImplementation": [
    {
      "interface": "DOMImplementation",
      "kind": "method",
      "name": "createDocument",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "doctype",
          "type": "DocumentType",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "XMLDocument",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/createDocument)"
    },
    {
      "interface": "DOMImplementation",
      "kind": "method",
      "name": "createDocumentType",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "publicId",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "systemId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "DocumentType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/createDocumentType)"
    },
    {
      "interface": "DOMImplementation",
      "kind": "method",
      "name": "createHTMLDocument",
      "parameters": [
        {
          "name": "title",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Document",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument)"
    },
    {
      "interface": "DOMImplementation",
      "kind": "method",
      "name": "hasFeature",
      "parameters": [
        {
          "name": "args",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "true"
    }
  ],
  "DOMMatrix": [
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "a",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "b",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "c",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "d",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "e",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "f",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m11",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m12",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m13",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m14",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m21",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m22",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m23",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m24",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m31",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m32",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m33",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m34",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m41",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m42",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m43",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "property",
      "name": "m44",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "invertSelf",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/invertSelf)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "multiplySelf",
      "parameters": [
        {
          "name": "other",
          "type": "DOMMatrixInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/multiplySelf)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "preMultiplySelf",
      "parameters": [
        {
          "name": "other",
          "type": "DOMMatrixInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/preMultiplySelf)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "rotateAxisAngleSelf",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "angle",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "rotateFromVectorSelf",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "rotateSelf",
      "parameters": [
        {
          "name": "rotX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "rotY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "rotZ",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/rotateSelf)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "scale3dSelf",
      "parameters": [
        {
          "name": "scale",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originZ",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "scaleSelf",
      "parameters": [
        {
          "name": "scaleX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "scaleY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "scaleZ",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originZ",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "setMatrixValue",
      "parameters": [
        {
          "name": "transformList",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/setMatrixValue)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "skewXSelf",
      "parameters": [
        {
          "name": "sx",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/skewXSelf)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "skewYSelf",
      "parameters": [
        {
          "name": "sy",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/skewYSelf)"
    },
    {
      "interface": "DOMMatrix",
      "kind": "method",
      "name": "translateSelf",
      "parameters": [
        {
          "name": "tx",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "ty",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "tz",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/translateSelf)"
    }
  ],
  "DOMMatrixReadOnly": [
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "a",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "b",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "c",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "d",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "e",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "f",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "is2D",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/is2D)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "isIdentity",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/isIdentity)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m11",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m12",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m13",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m14",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m21",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m22",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m23",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m24",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m31",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m32",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m33",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m34",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m41",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m42",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m43",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "property",
      "name": "m44",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "flipX",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/flipX)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "flipY",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/flipY)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "inverse",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/inverse)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "multiply",
      "parameters": [
        {
          "name": "other",
          "type": "DOMMatrixInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/multiply)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "rotate",
      "parameters": [
        {
          "name": "rotX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "rotY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "rotZ",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "rotateAxisAngle",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "angle",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "rotateFromVector",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "scale",
      "parameters": [
        {
          "name": "scaleX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "scaleY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "scaleZ",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originZ",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/scale)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "scale3d",
      "parameters": [
        {
          "name": "scale",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originY",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "originZ",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "scaleNonUniform",
      "parameters": [
        {
          "name": "scaleX",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "scaleY",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "skewX",
      "parameters": [
        {
          "name": "sx",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "skewY",
      "parameters": [
        {
          "name": "sy",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "toFloat32Array",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Float32Array<ArrayBufferLike>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toFloat32Array)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "toFloat64Array",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Float64Array<ArrayBufferLike>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toFloat64Array)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toJSON)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "transformPoint",
      "parameters": [
        {
          "name": "point",
          "type": "DOMPointInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/transformPoint)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "translate",
      "parameters": [
        {
          "name": "tx",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "ty",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "tz",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/translate)"
    },
    {
      "interface": "DOMMatrixReadOnly",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    }
  ],
  "DOMParser": [
    {
      "interface": "DOMParser",
      "kind": "method",
      "name": "parseFromString",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "DOMParserSupportedType",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Document",
      "doc": "Parses string using either the HTML or XML parser, according to type, and returns the resulting Document. type can be \"text/html\" (which will invoke the HTML parser), or any of \"text/xml\", \"application/xml\", \"application/xhtml+xml\", or \"image/svg+xml\" (which will invoke the XML parser).\n\nFor the XML parser, if string cannot be parsed, then the returned Document will contain elements describing the resulting error.\n\nNote that script elements are not evaluated during parsing, and the resulting document's encoding will always be UTF-8.\n\nValues other than the above for type will cause a TypeError exception to be thrown.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMParser/parseFromString)"
    }
  ],
  "DOMPoint": [
    {
      "interface": "DOMPoint",
      "kind": "property",
      "name": "w",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/w)"
    },
    {
      "interface": "DOMPoint",
      "kind": "property",
      "name": "x",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/x)"
    },
    {
      "interface": "DOMPoint",
      "kind": "property",
      "name": "y",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/y)"
    },
    {
      "interface": "DOMPoint",
      "kind": "property",
      "name": "z",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/z)"
    }
  ],
  "DOMPointReadOnly": [
    {
      "interface": "DOMPointReadOnly",
      "kind": "property",
      "name": "w",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/w)"
    },
    {
      "interface": "DOMPointReadOnly",
      "kind": "property",
      "name": "x",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/x)"
    },
    {
      "interface": "DOMPointReadOnly",
      "kind": "property",
      "name": "y",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/y)"
    },
    {
      "interface": "DOMPointReadOnly",
      "kind": "property",
      "name": "z",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/z)"
    },
    {
      "interface": "DOMPointReadOnly",
      "kind": "method",
      "name": "matrixTransform",
      "parameters": [
        {
          "name": "matrix",
          "type": "DOMMatrixInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/matrixTransform)"
    },
    {
      "interface": "DOMPointReadOnly",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/toJSON)"
    }
  ],
  "DOMQuad": [
    {
      "interface": "DOMQuad",
      "kind": "property",
      "name": "p1",
      "type": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p1)"
    },
    {
      "interface": "DOMQuad",
      "kind": "property",
      "name": "p2",
      "type": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p2)"
    },
    {
      "interface": "DOMQuad",
      "kind": "property",
      "name": "p3",
      "type": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p3)"
    },
    {
      "interface": "DOMQuad",
      "kind": "property",
      "name": "p4",
      "type": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p4)"
    },
    {
      "interface": "DOMQuad",
      "kind": "method",
      "name": "getBounds",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/getBounds)"
    },
    {
      "interface": "DOMQuad",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/toJSON)"
    }
  ],
  "DOMRect": [
    {
      "interface": "DOMRect",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/height)"
    },
    {
      "interface": "DOMRect",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/width)"
    },
    {
      "interface": "DOMRect",
      "kind": "property",
      "name": "x",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/x)"
    },
    {
      "interface": "DOMRect",
      "kind": "property",
      "name": "y",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/y)"
    }
  ],
  "DOMRectList": [
    {
      "interface": "DOMRectList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectList/length)"
    },
    {
      "interface": "DOMRectList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectList/item)"
    }
  ],
  "DOMRectReadOnly": [
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "bottom",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/bottom)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/height)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "left",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/left)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "right",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/right)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "top",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/top)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/width)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "x",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/x)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "property",
      "name": "y",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/y)"
    },
    {
      "interface": "DOMRectReadOnly",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/toJSON)"
    }
  ],
  "DOMStringList": [
    {
      "interface": "DOMStringList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of strings in strings.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/length)"
    },
    {
      "interface": "DOMStringList",
      "kind": "method",
      "name": "contains",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns true if strings contains string, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/contains)"
    },
    {
      "interface": "DOMStringList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns the string with index index from strings.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/item)"
    }
  ],
  "DOMTokenList": [
    {
      "interface": "DOMTokenList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of tokens.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/length)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Returns the associated set as string.\n\nCan be set, to change the associated attribute.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/value)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "tokens",
          "type": "string[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Adds all arguments passed, except those already present.\n\nThrows a \"SyntaxError\" DOMException if one of the arguments is the empty string.\n\nThrows an \"InvalidCharacterError\" DOMException if one of the arguments contains any ASCII whitespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/add)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "contains",
      "parameters": [
        {
          "name": "token",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns true if token is present, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/contains)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns the token with index index.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/item)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "remove",
      "parameters": [
        {
          "name": "tokens",
          "type": "string[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Removes arguments passed, if they are present.\n\nThrows a \"SyntaxError\" DOMException if one of the arguments is the empty string.\n\nThrows an \"InvalidCharacterError\" DOMException if one of the arguments contains any ASCII whitespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/remove)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "replace",
      "parameters": [
        {
          "name": "token",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "newToken",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "boolean",
      "doc": "Replaces token with newToken.\n\nReturns true if token was replaced with newToken, and false otherwise.\n\nThrows a \"SyntaxError\" DOMException if one of the arguments is the empty string.\n\nThrows an \"InvalidCharacterError\" DOMException if one of the arguments contains any ASCII whitespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/replace)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "supports",
      "parameters": [
        {
          "name": "token",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns true if token is in the associated attribute's supported tokens. Returns false otherwise.\n\nThrows a TypeError if the associated attribute has no supported tokens defined.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/supports)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "toggle",
      "parameters": [
        {
          "name": "token",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "force",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "boolean",
      "doc": "If force is not given, \"toggles\" token, removing it if it's present and adding it if it's not present. If force is true, adds token (same as add()). If force is false, removes token (same as remove()).\n\nReturns true if token is now present, and false otherwise.\n\nThrows a \"SyntaxError\" DOMException if token is empty.\n\nThrows an \"InvalidCharacterError\" DOMException if token contains any spaces.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/toggle)"
    },
    {
      "interface": "DOMTokenList",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: string, key: number, parent: DOMTokenList) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "DataTransfer": [
    {
      "interface": "DataTransfer",
      "kind": "property",
      "name": "dropEffect",
      "type": "\"none\" | \"copy\" | \"link\" | \"move\"",
      "doc": "Returns the kind of operation that is currently selected. If the kind of operation isn't one of those that is allowed by the effectAllowed attribute, then the operation will fail.\n\nCan be set, to change the selected operation.\n\nThe possible values are \"none\", \"copy\", \"link\", and \"move\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/dropEffect)"
    },
    {
      "interface": "DataTransfer",
      "kind": "property",
      "name": "effectAllowed",
      "type": "\"all\" | \"none\" | \"copy\" | \"link\" | \"move\" | \"copyLink\" | \"copyMove\" | \"linkMove\" | \"uninitialized\"",
      "doc": "Returns the kinds of operations that are to be allowed.\n\nCan be set (during the dragstart event), to change the allowed operations.\n\nThe possible values are \"none\", \"copy\", \"copyLink\", \"copyMove\", \"link\", \"linkMove\", \"move\", \"all\", and \"uninitialized\",\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/effectAllowed)"
    },
    {
      "interface": "DataTransfer",
      "kind": "property",
      "name": "files",
      "type": "FileList",
      "doc": "Returns a FileList of the files being dragged, if any.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/files)"
    },
    {
      "interface": "DataTransfer",
      "kind": "property",
      "name": "items",
      "type": "DataTransferItemList",
      "doc": "Returns a DataTransferItemList object, with the drag data.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/items)"
    },
    {
      "interface": "DataTransfer",
      "kind": "property",
      "name": "types",
      "type": "readonly string[]",
      "doc": "Returns a frozen array listing the formats that were set in the dragstart event. In addition, if any files are being dragged, then one of the types will be the string \"Files\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/types)"
    },
    {
      "interface": "DataTransfer",
      "kind": "method",
      "name": "clearData",
      "parameters": [
        {
          "name": "format",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Removes the data of the specified formats. Removes all data if the argument is omitted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/clearData)"
    },
    {
      "interface": "DataTransfer",
      "kind": "method",
      "name": "getData",
      "parameters": [
        {
          "name": "format",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns the specified data. If there is no such data, returns the empty string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/getData)"
    },
    {
      "interface": "DataTransfer",
      "kind": "method",
      "name": "setData",
      "parameters": [
        {
          "name": "format",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Adds the specified data.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/setData)"
    },
    {
      "interface": "DataTransfer",
      "kind": "method",
      "name": "setDragImage",
      "parameters": [
        {
          "name": "image",
          "type": "Element",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "Uses the given element to update the drag feedback, replacing any previously specified feedback.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/setDragImage)"
    }
  ],
  "DataTransferItem": [
    {
      "interface": "DataTransferItem",
      "kind": "property",
      "name": "kind",
      "type": "string",
      "doc": "Returns the drag data item kind, one of: \"string\", \"file\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/kind)"
    },
    {
      "interface": "DataTransferItem",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Returns the drag data item type string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/type)"
    },
    {
      "interface": "DataTransferItem",
      "kind": "method",
      "name": "getAsFile",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "File",
      "doc": "Returns a File object, if the drag data item kind is File.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/getAsFile)"
    },
    {
      "interface": "DataTransferItem",
      "kind": "method",
      "name": "getAsString",
      "parameters": [
        {
          "name": "callback",
          "type": "FunctionStringCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Invokes the callback with the string data as the argument, if the drag data item kind is text.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/getAsString)"
    },
    {
      "interface": "DataTransferItem",
      "kind": "method",
      "name": "webkitGetAsEntry",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "FileSystemEntry",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/webkitGetAsEntry)"
    }
  ],
  "DataTransferItemList": [
    {
      "interface": "DataTransferItemList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of items in the drag data store.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/length)"
    },
    {
      "interface": "DataTransferItemList",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "DataTransferItem",
      "doc": "Adds a new entry for the given data to the drag data store. If the data is plain text then a type string has to be provided also.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/add)"
    },
    {
      "interface": "DataTransferItemList",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "data",
          "type": "File",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DataTransferItem"
    },
    {
      "interface": "DataTransferItemList",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Removes all the entries in the drag data store.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/clear)"
    },
    {
      "interface": "DataTransferItemList",
      "kind": "method",
      "name": "remove",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the indexth entry in the drag data store.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/remove)"
    }
  ],
  "DecompressionStream": [
    {
      "interface": "DecompressionStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<Uint8Array<ArrayBufferLike>>"
    },
    {
      "interface": "DecompressionStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<BufferSource>"
    }
  ],
  "DelayNode": [
    {
      "interface": "DelayNode",
      "kind": "property",
      "name": "delayTime",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DelayNode/delayTime)"
    }
  ],
  "DeviceMotionEvent": [
    {
      "interface": "DeviceMotionEvent",
      "kind": "property",
      "name": "acceleration",
      "type": "DeviceMotionEventAcceleration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/acceleration)"
    },
    {
      "interface": "DeviceMotionEvent",
      "kind": "property",
      "name": "accelerationIncludingGravity",
      "type": "DeviceMotionEventAcceleration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/accelerationIncludingGravity)"
    },
    {
      "interface": "DeviceMotionEvent",
      "kind": "property",
      "name": "interval",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/interval)"
    },
    {
      "interface": "DeviceMotionEvent",
      "kind": "property",
      "name": "rotationRate",
      "type": "DeviceMotionEventRotationRate",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/rotationRate)"
    }
  ],
  "DeviceMotionEventAcceleration": [
    {
      "interface": "DeviceMotionEventAcceleration",
      "kind": "property",
      "name": "x",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventAcceleration/x)"
    },
    {
      "interface": "DeviceMotionEventAcceleration",
      "kind": "property",
      "name": "y",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventAcceleration/y)"
    },
    {
      "interface": "DeviceMotionEventAcceleration",
      "kind": "property",
      "name": "z",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventAcceleration/z)"
    }
  ],
  "DeviceMotionEventRotationRate": [
    {
      "interface": "DeviceMotionEventRotationRate",
      "kind": "property",
      "name": "alpha",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventRotationRate/alpha)"
    },
    {
      "interface": "DeviceMotionEventRotationRate",
      "kind": "property",
      "name": "beta",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventRotationRate/beta)"
    },
    {
      "interface": "DeviceMotionEventRotationRate",
      "kind": "property",
      "name": "gamma",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventRotationRate/gamma)"
    }
  ],
  "DeviceOrientationEvent": [
    {
      "interface": "DeviceOrientationEvent",
      "kind": "property",
      "name": "absolute",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/absolute)"
    },
    {
      "interface": "DeviceOrientationEvent",
      "kind": "property",
      "name": "alpha",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/alpha)"
    },
    {
      "interface": "DeviceOrientationEvent",
      "kind": "property",
      "name": "beta",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/beta)"
    },
    {
      "interface": "DeviceOrientationEvent",
      "kind": "property",
      "name": "gamma",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/gamma)"
    }
  ],
  "DocumentEventMap": [
    {
      "interface": "DocumentEventMap",
      "kind": "property",
      "name": "\"DOMContentLoaded\"",
      "type": "Event"
    },
    {
      "interface": "DocumentEventMap",
      "kind": "property",
      "name": "\"fullscreenchange\"",
      "type": "Event"
    },
    {
      "interface": "DocumentEventMap",
      "kind": "property",
      "name": "\"fullscreenerror\"",
      "type": "Event"
    },
    {
      "interface": "DocumentEventMap",
      "kind": "property",
      "name": "\"pointerlockchange\"",
      "type": "Event"
    },
    {
      "interface": "DocumentEventMap",
      "kind": "property",
      "name": "\"pointerlockerror\"",
      "type": "Event"
    },
    {
      "interface": "DocumentEventMap",
      "kind": "property",
      "name": "\"readystatechange\"",
      "type": "Event"
    },
    {
      "interface": "DocumentEventMap",
      "kind": "property",
      "name": "\"visibilitychange\"",
      "type": "Event"
    }
  ],
  "Document": [
    {
      "interface": "Document",
      "kind": "property",
      "name": "URL",
      "type": "string",
      "doc": "Sets or gets the URL for the current document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/URL)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "alinkColor",
      "type": "string",
      "doc": "Sets or gets the color of all active links in the document."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "all",
      "type": "HTMLAllCollection",
      "doc": "Returns a reference to the collection of elements contained by the object."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "anchors",
      "type": "HTMLCollectionOf<HTMLAnchorElement>",
      "doc": "Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "applets",
      "type": "HTMLCollection",
      "doc": "Retrieves a collection of all applet objects in the document."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "bgColor",
      "type": "string",
      "doc": "Deprecated. Sets or retrieves a value that indicates the background color behind the object."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "body",
      "type": "HTMLElement",
      "doc": "Specifies the beginning and end of the document body.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/body)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "characterSet",
      "type": "string",
      "doc": "Returns document's encoding.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/characterSet)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "charset",
      "type": "string",
      "doc": "Gets or sets the character set used to encode the object."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "compatMode",
      "type": "string",
      "doc": "Gets a value that indicates whether standards-compliant mode is switched on for the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/compatMode)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "contentType",
      "type": "string",
      "doc": "Returns document's content type.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/contentType)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "cookie",
      "type": "string",
      "doc": "Returns the HTTP cookies that apply to the Document. If there are no cookies or cookies can't be applied to this resource, the empty string will be returned.\n\nCan be set, to add a new cookie to the element's set of HTTP cookies.\n\nIf the contents are sandboxed into a unique origin (e.g. in an iframe with the sandbox attribute), a \"SecurityError\" DOMException will be thrown on getting and setting.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/cookie)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "currentScript",
      "type": "HTMLOrSVGScriptElement",
      "doc": "Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n\nReturns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/currentScript)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "defaultView",
      "type": "Window & typeof globalThis",
      "doc": "Returns the Window object of the active document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/defaultView)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "designMode",
      "type": "string",
      "doc": "Sets or gets a value that indicates whether the document can be edited.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/designMode)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "dir",
      "type": "string",
      "doc": "Sets or retrieves a value that indicates the reading order of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/dir)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "doctype",
      "type": "DocumentType",
      "doc": "Gets an object representing the document type declaration associated with the current document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/doctype)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "documentElement",
      "type": "HTMLElement",
      "doc": "Gets a reference to the root node of the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/documentElement)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "documentURI",
      "type": "string",
      "doc": "Returns document's URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/documentURI)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "domain",
      "type": "string",
      "doc": "Sets or gets the security domain of the document."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "embeds",
      "type": "HTMLCollectionOf<HTMLEmbedElement>",
      "doc": "Retrieves a collection of all embed objects in the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/embeds)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "fgColor",
      "type": "string",
      "doc": "Sets or gets the foreground (text) color of the document."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "forms",
      "type": "HTMLCollectionOf<HTMLFormElement>",
      "doc": "Retrieves a collection, in source order, of all form objects in the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/forms)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "fragmentDirective",
      "type": "FragmentDirective",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fragmentDirective)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "fullscreen",
      "type": "boolean"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "fullscreenEnabled",
      "type": "boolean",
      "doc": "Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenEnabled)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "head",
      "type": "HTMLHeadElement",
      "doc": "Returns the head element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/head)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "hidden",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/hidden)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "images",
      "type": "HTMLCollectionOf<HTMLImageElement>",
      "doc": "Retrieves a collection, in source order, of img objects in the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/images)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "implementation",
      "type": "DOMImplementation",
      "doc": "Gets the implementation object of the current document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/implementation)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "inputEncoding",
      "type": "string",
      "doc": "Returns the character encoding used to create the webpage that is loaded into the document object."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "lastModified",
      "type": "string",
      "doc": "Gets the date that the page was last modified, if the page supplies one.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastModified)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "linkColor",
      "type": "string",
      "doc": "Sets or gets the color of the document links."
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "links",
      "type": "HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>",
      "doc": "Retrieves a collection of all a objects that specify the href property and all area objects in the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/links)"
    },
    {
      "interface": "Document",
      "kind": "event",
      "name": "onfullscreenchange",
      "type": "(this: Document, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenchange_event)"
    },
    {
      "interface": "Document",
      "kind": "event",
      "name": "onfullscreenerror",
      "type": "(this: Document, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenerror_event)"
    },
    {
      "interface": "Document",
      "kind": "event",
      "name": "onpointerlockchange",
      "type": "(this: Document, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockchange_event)"
    },
    {
      "interface": "Document",
      "kind": "event",
      "name": "onpointerlockerror",
      "type": "(this: Document, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockerror_event)"
    },
    {
      "interface": "Document",
      "kind": "event",
      "name": "onreadystatechange",
      "type": "(this: Document, ev: Event) => any",
      "doc": "Fires when the state of the object has changed."
    },
    {
      "interface": "Document",
      "kind": "event",
      "name": "onvisibilitychange",
      "type": "(this: Document, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/visibilitychange_event)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "ownerDocument",
      "type": "null"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "pictureInPictureEnabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pictureInPictureEnabled)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "plugins",
      "type": "HTMLCollectionOf<HTMLEmbedElement>",
      "doc": "Return an HTMLCollection of the embed elements in the Document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/plugins)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "readyState",
      "type": "DocumentReadyState",
      "doc": "Retrieves a value that indicates the current state of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/readyState)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "referrer",
      "type": "string",
      "doc": "Gets the URL of the location that referred the user to the current page.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/referrer)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "rootElement",
      "type": "SVGSVGElement"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "scripts",
      "type": "HTMLCollectionOf<HTMLScriptElement>",
      "doc": "Retrieves a collection of all script objects in the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scripts)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "scrollingElement",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollingElement)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "timeline",
      "type": "DocumentTimeline",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/timeline)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "title",
      "type": "string",
      "doc": "Contains the title of the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/title)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "visibilityState",
      "type": "DocumentVisibilityState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/visibilityState)"
    },
    {
      "interface": "Document",
      "kind": "property",
      "name": "vlinkColor",
      "type": "string",
      "doc": "Sets or gets the color of the links that the user has visited."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "adoptNode",
      "parameters": [
        {
          "name": "node",
          "type": "T",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "T",
      "doc": "Moves node from another document and returns it.\n\nIf node is a document, throws a \"NotSupportedError\" DOMException or, if node is a shadow root, throws a \"HierarchyRequestError\" DOMException.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptNode)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "captureEvents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "caretPositionFromPoint",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "CaretPositionFromPointOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "CaretPosition",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/caretPositionFromPoint)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "caretRangeFromPoint",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Range"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Closes an output stream and forces the sent data to display.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/close)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createAttribute",
      "parameters": [
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "Creates an attribute object with a specified name."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createAttributeNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createAttributeNS)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createCDATASection",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CDATASection",
      "doc": "Returns a CDATASection node whose data is data.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createCDATASection)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createComment",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Comment",
      "doc": "Creates a comment object with the specified data."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createDocumentFragment",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DocumentFragment",
      "doc": "Creates a new document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createDocumentFragment)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElement",
      "parameters": [
        {
          "name": "tagName",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ElementCreationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "HTMLElementTagNameMap[K]",
      "doc": "Creates an instance of the element for the specified tag."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElement",
      "parameters": [
        {
          "name": "tagName",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ElementCreationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "HTMLElementDeprecatedTagNameMap[K]"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElement",
      "parameters": [
        {
          "name": "tagName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ElementCreationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "HTMLElement"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElementNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/1999/xhtml\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLElement",
      "doc": "Returns an element with namespace namespace. Its namespace prefix will be everything before \":\" (U+003E) in qualifiedName or null. Its local name will be everything after \":\" (U+003E) in qualifiedName or qualifiedName.\n\nIf localName does not match the Name production an \"InvalidCharacterError\" DOMException will be thrown.\n\nIf one of the following conditions is true a \"NamespaceError\" DOMException will be thrown:\n\nlocalName does not match the QName production.\nNamespace prefix is not null and namespace is the empty string.\nNamespace prefix is \"xml\" and namespace is not the XML namespace.\nqualifiedName or namespace prefix is \"xmlns\" and namespace is not the XMLNS namespace.\nnamespace is the XMLNS namespace and neither qualifiedName nor namespace prefix is \"xmlns\".\n\nWhen supplied, options's is can be used to create a customized built-in element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createElementNS)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElementNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/2000/svg\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGElementTagNameMap[K]"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElementNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/2000/svg\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGElement"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElementNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/1998/Math/MathML\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "MathMLElementTagNameMap[K]"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElementNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/1998/Math/MathML\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "MathMLElement"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElementNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ElementCreationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "Element"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createElementNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "string | ElementCreationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "Element"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"AnimationEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "AnimationEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"AnimationPlaybackEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "AnimationPlaybackEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"AudioProcessingEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "AudioProcessingEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"BeforeUnloadEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "BeforeUnloadEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"BlobEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "BlobEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"ClipboardEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ClipboardEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"CloseEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CloseEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"CompositionEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CompositionEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"ContentVisibilityAutoStateChangeEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ContentVisibilityAutoStateChangeEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"CustomEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CustomEvent<any>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"DeviceMotionEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DeviceMotionEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"DeviceOrientationEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DeviceOrientationEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"DragEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DragEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"ErrorEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ErrorEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"Event\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Event"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"Events\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Event"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"FocusEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "FocusEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"FontFaceSetLoadEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "FontFaceSetLoadEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"FormDataEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "FormDataEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"GamepadEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "GamepadEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"HashChangeEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HashChangeEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"IDBVersionChangeEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBVersionChangeEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"InputEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "InputEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"KeyboardEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "KeyboardEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MIDIConnectionEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MIDIConnectionEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MIDIMessageEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MIDIMessageEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MediaEncryptedEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaEncryptedEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MediaKeyMessageEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaKeyMessageEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MediaQueryListEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaQueryListEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MediaStreamTrackEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaStreamTrackEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MessageEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MessageEvent<any>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MouseEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MouseEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"MouseEvents\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MouseEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"OfflineAudioCompletionEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OfflineAudioCompletionEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PageRevealEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PageRevealEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PageSwapEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PageSwapEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PageTransitionEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PageTransitionEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PaymentMethodChangeEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PaymentMethodChangeEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PaymentRequestUpdateEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PaymentRequestUpdateEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PictureInPictureEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PictureInPictureEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PointerEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PointerEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PopStateEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PopStateEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"ProgressEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ProgressEvent<EventTarget>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"PromiseRejectionEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PromiseRejectionEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"RTCDTMFToneChangeEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "RTCDTMFToneChangeEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"RTCDataChannelEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "RTCDataChannelEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"RTCErrorEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "RTCErrorEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"RTCPeerConnectionIceErrorEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "RTCPeerConnectionIceErrorEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"RTCPeerConnectionIceEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "RTCPeerConnectionIceEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"RTCTrackEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "RTCTrackEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"SecurityPolicyViolationEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SecurityPolicyViolationEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"SpeechSynthesisErrorEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SpeechSynthesisErrorEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"SpeechSynthesisEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SpeechSynthesisEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"StorageEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "StorageEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"SubmitEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SubmitEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"TextEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TextEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"ToggleEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ToggleEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"TouchEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TouchEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"TrackEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TrackEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"TransitionEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TransitionEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"UIEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "UIEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"UIEvents\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "UIEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"WebGLContextEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WebGLContextEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "\"WheelEvent\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WheelEvent"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createEvent",
      "parameters": [
        {
          "name": "eventInterface",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Event"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createNodeIterator",
      "parameters": [
        {
          "name": "root",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "whatToShow",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "filter",
          "type": "NodeFilter",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "NodeIterator",
      "doc": "Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createProcessingInstruction",
      "parameters": [
        {
          "name": "target",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "ProcessingInstruction",
      "doc": "Returns a ProcessingInstruction node whose target is target and data is data. If target does not match the Name production an \"InvalidCharacterError\" DOMException will be thrown. If data contains \"?>\" an \"InvalidCharacterError\" DOMException will be thrown.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createProcessingInstruction)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createRange",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Range",
      "doc": "Returns an empty range object that has both of its boundary points positioned at the beginning of the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createRange)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createTextNode",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Text",
      "doc": "Creates a text string from the specified value."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "createTreeWalker",
      "parameters": [
        {
          "name": "root",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "whatToShow",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "filter",
          "type": "NodeFilter",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "TreeWalker",
      "doc": "Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "execCommand",
      "parameters": [
        {
          "name": "commandId",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "showUI",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "boolean",
      "doc": "Executes a command on the current document, current selection, or the given range."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "exitFullscreen",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "Stops document's fullscreen element from being displayed fullscreen and resolves promise when done.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/exitFullscreen)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "exitPictureInPicture",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/exitPictureInPicture)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "exitPointerLock",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/exitPointerLock)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementById",
      "parameters": [
        {
          "name": "elementId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLElement",
      "doc": "Returns a reference to the first object with the specified value of the ID attribute."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByClassName",
      "parameters": [
        {
          "name": "classNames",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<Element>",
      "doc": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementsByClassName)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByName",
      "parameters": [
        {
          "name": "elementName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "NodeListOf<HTMLElement>",
      "doc": "Gets a collection of objects based on the value of the NAME or ID attribute."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<HTMLElementTagNameMap[K]>",
      "doc": "Retrieves a collection of objects based on the specified element name."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<SVGElementTagNameMap[K]>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<MathMLElementTagNameMap[K]>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<HTMLElementDeprecatedTagNameMap[K]>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<Element>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/1999/xhtml\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<HTMLElement>",
      "doc": "If namespace and localName are \"*\" returns a HTMLCollection of all descendant elements.\n\nIf only namespace is \"*\" returns a HTMLCollection of all descendant elements whose local name is localName.\n\nIf only localName is \"*\" returns a HTMLCollection of all descendant elements whose namespace is namespace.\n\nOtherwise, returns a HTMLCollection of all descendant elements whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementsByTagNameNS)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/2000/svg\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<SVGElement>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/1998/Math/MathML\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<MathMLElement>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<Element>"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "getSelection",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Selection",
      "doc": "Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getSelection)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "hasFocus",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Gets a value indicating whether the object currently has focus.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/hasFocus)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "hasStorageAccess",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/hasStorageAccess)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "importNode",
      "parameters": [
        {
          "name": "node",
          "type": "T",
          "optional": false,
          "rest": false
        },
        {
          "name": "subtree",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "T",
      "doc": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\nIf node is a document or a shadow root, throws a \"NotSupportedError\" DOMException.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/importNode)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "open",
      "parameters": [
        {
          "name": "unused1",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "unused2",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "Document",
      "doc": "Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "open",
      "parameters": [
        {
          "name": "url",
          "type": "string | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "features",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Window"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "queryCommandEnabled",
      "parameters": [
        {
          "name": "commandId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "queryCommandIndeterm",
      "parameters": [
        {
          "name": "commandId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns a Boolean value that indicates whether the specified command is in the indeterminate state."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "queryCommandState",
      "parameters": [
        {
          "name": "commandId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns a Boolean value that indicates the current state of the command."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "queryCommandSupported",
      "parameters": [
        {
          "name": "commandId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns a Boolean value that indicates whether the current command is supported on the current range."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "queryCommandValue",
      "parameters": [
        {
          "name": "commandId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns the current value of the document, range, or current selection for the given command."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "releaseEvents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "requestStorageAccess",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/requestStorageAccess)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "startViewTransition",
      "parameters": [
        {
          "name": "callbackOptions",
          "type": "ViewTransitionUpdateCallback",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "ViewTransition",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/startViewTransition)"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "write",
      "parameters": [
        {
          "name": "text",
          "type": "string[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Writes one or more HTML expressions to a document in the specified window."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "writeln",
      "parameters": [
        {
          "name": "text",
          "type": "string[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window."
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Document, ev: DocumentEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Document, ev: DocumentEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Document",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "DocumentFragment": [
    {
      "interface": "DocumentFragment",
      "kind": "property",
      "name": "ownerDocument",
      "type": "Document"
    },
    {
      "interface": "DocumentFragment",
      "kind": "method",
      "name": "getElementById",
      "parameters": [
        {
          "name": "elementId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLElement"
    }
  ],
  "DocumentOrShadowRoot": [
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "property",
      "name": "activeElement",
      "type": "Element",
      "doc": "Returns the deepest element in the document through which or to which key events are being routed. This is, roughly speaking, the focused element in the document.\n\nFor the purposes of this API, when a child browsing context is focused, its container is focused in the parent browsing context. For example, if the user moves the focus to a text control in an iframe, the iframe is the element returned by the activeElement API in the iframe's node document.\n\nSimilarly, when the focused element is in a different node tree than documentOrShadowRoot, the element returned will be the host that's located in the same node tree as documentOrShadowRoot if documentOrShadowRoot is a shadow-including inclusive ancestor of the focused element, and null if not.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/activeElement)"
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "property",
      "name": "adoptedStyleSheets",
      "type": "CSSStyleSheet[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptedStyleSheets)"
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "property",
      "name": "fullscreenElement",
      "type": "Element",
      "doc": "Returns document's fullscreen element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenElement)"
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "property",
      "name": "pictureInPictureElement",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pictureInPictureElement)"
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "property",
      "name": "pointerLockElement",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerLockElement)"
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "property",
      "name": "styleSheets",
      "type": "StyleSheetList",
      "doc": "Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/styleSheets)"
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "method",
      "name": "elementFromPoint",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Element",
      "doc": "Returns the element for the specified x coordinate and the specified y coordinate."
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "method",
      "name": "elementsFromPoint",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Element[]"
    },
    {
      "interface": "DocumentOrShadowRoot",
      "kind": "method",
      "name": "getAnimations",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Animation[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getAnimations)"
    }
  ],
  "DocumentType": [
    {
      "interface": "DocumentType",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentType/name)"
    },
    {
      "interface": "DocumentType",
      "kind": "property",
      "name": "ownerDocument",
      "type": "Document"
    },
    {
      "interface": "DocumentType",
      "kind": "property",
      "name": "publicId",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentType/publicId)"
    },
    {
      "interface": "DocumentType",
      "kind": "property",
      "name": "systemId",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentType/systemId)"
    }
  ],
  "DragEvent": [
    {
      "interface": "DragEvent",
      "kind": "property",
      "name": "dataTransfer",
      "type": "DataTransfer",
      "doc": "Returns the DataTransfer object for the event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/DragEvent/dataTransfer)"
    }
  ],
  "DynamicsCompressorNode": [
    {
      "interface": "DynamicsCompressorNode",
      "kind": "property",
      "name": "attack",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/attack)"
    },
    {
      "interface": "DynamicsCompressorNode",
      "kind": "property",
      "name": "knee",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/knee)"
    },
    {
      "interface": "DynamicsCompressorNode",
      "kind": "property",
      "name": "ratio",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/ratio)"
    },
    {
      "interface": "DynamicsCompressorNode",
      "kind": "property",
      "name": "reduction",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/reduction)"
    },
    {
      "interface": "DynamicsCompressorNode",
      "kind": "property",
      "name": "release",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/release)"
    },
    {
      "interface": "DynamicsCompressorNode",
      "kind": "property",
      "name": "threshold",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/threshold)"
    }
  ],
  "EXT_blend_minmax": [
    {
      "interface": "EXT_blend_minmax",
      "kind": "property",
      "name": "MIN_EXT",
      "type": "32775"
    },
    {
      "interface": "EXT_blend_minmax",
      "kind": "property",
      "name": "MAX_EXT",
      "type": "32776"
    }
  ],
  "EXT_color_buffer_half_float": [
    {
      "interface": "EXT_color_buffer_half_float",
      "kind": "property",
      "name": "RGBA16F_EXT",
      "type": "34842"
    },
    {
      "interface": "EXT_color_buffer_half_float",
      "kind": "property",
      "name": "RGB16F_EXT",
      "type": "34843"
    },
    {
      "interface": "EXT_color_buffer_half_float",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT",
      "type": "33297"
    },
    {
      "interface": "EXT_color_buffer_half_float",
      "kind": "property",
      "name": "UNSIGNED_NORMALIZED_EXT",
      "type": "35863"
    }
  ],
  "EXT_sRGB": [
    {
      "interface": "EXT_sRGB",
      "kind": "property",
      "name": "SRGB_EXT",
      "type": "35904"
    },
    {
      "interface": "EXT_sRGB",
      "kind": "property",
      "name": "SRGB_ALPHA_EXT",
      "type": "35906"
    },
    {
      "interface": "EXT_sRGB",
      "kind": "property",
      "name": "SRGB8_ALPHA8_EXT",
      "type": "35907"
    },
    {
      "interface": "EXT_sRGB",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT",
      "type": "33296"
    }
  ],
  "EXT_texture_compression_bptc": [
    {
      "interface": "EXT_texture_compression_bptc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_BPTC_UNORM_EXT",
      "type": "36492"
    },
    {
      "interface": "EXT_texture_compression_bptc",
      "kind": "property",
      "name": "COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT",
      "type": "36493"
    },
    {
      "interface": "EXT_texture_compression_bptc",
      "kind": "property",
      "name": "COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT",
      "type": "36494"
    },
    {
      "interface": "EXT_texture_compression_bptc",
      "kind": "property",
      "name": "COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT",
      "type": "36495"
    }
  ],
  "EXT_texture_compression_rgtc": [
    {
      "interface": "EXT_texture_compression_rgtc",
      "kind": "property",
      "name": "COMPRESSED_RED_RGTC1_EXT",
      "type": "36283"
    },
    {
      "interface": "EXT_texture_compression_rgtc",
      "kind": "property",
      "name": "COMPRESSED_SIGNED_RED_RGTC1_EXT",
      "type": "36284"
    },
    {
      "interface": "EXT_texture_compression_rgtc",
      "kind": "property",
      "name": "COMPRESSED_RED_GREEN_RGTC2_EXT",
      "type": "36285"
    },
    {
      "interface": "EXT_texture_compression_rgtc",
      "kind": "property",
      "name": "COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT",
      "type": "36286"
    }
  ],
  "EXT_texture_filter_anisotropic": [
    {
      "interface": "EXT_texture_filter_anisotropic",
      "kind": "property",
      "name": "TEXTURE_MAX_ANISOTROPY_EXT",
      "type": "34046"
    },
    {
      "interface": "EXT_texture_filter_anisotropic",
      "kind": "property",
      "name": "MAX_TEXTURE_MAX_ANISOTROPY_EXT",
      "type": "34047"
    }
  ],
  "EXT_texture_norm16": [
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "R16_EXT",
      "type": "33322"
    },
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "RG16_EXT",
      "type": "33324"
    },
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "RGB16_EXT",
      "type": "32852"
    },
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "RGBA16_EXT",
      "type": "32859"
    },
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "R16_SNORM_EXT",
      "type": "36760"
    },
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "RG16_SNORM_EXT",
      "type": "36761"
    },
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "RGB16_SNORM_EXT",
      "type": "36762"
    },
    {
      "interface": "EXT_texture_norm16",
      "kind": "property",
      "name": "RGBA16_SNORM_EXT",
      "type": "36763"
    }
  ],
  "ElementEventMap": [
    {
      "interface": "ElementEventMap",
      "kind": "property",
      "name": "\"fullscreenchange\"",
      "type": "Event"
    },
    {
      "interface": "ElementEventMap",
      "kind": "property",
      "name": "\"fullscreenerror\"",
      "type": "Event"
    }
  ],
  "Element": [
    {
      "interface": "Element",
      "kind": "property",
      "name": "attributes",
      "type": "NamedNodeMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attributes)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "className",
      "type": "string",
      "doc": "Returns the value of element's class content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/className)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "clientHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientHeight)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "clientLeft",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientLeft)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "clientTop",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientTop)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "clientWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientWidth)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "currentCSSZoom",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/currentCSSZoom)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "Returns the value of element's id content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/id)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "innerHTML",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/innerHTML)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "localName",
      "type": "string",
      "doc": "Returns the local name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/localName)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "namespaceURI",
      "type": "string",
      "doc": "Returns the namespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/namespaceURI)"
    },
    {
      "interface": "Element",
      "kind": "event",
      "name": "onfullscreenchange",
      "type": "(this: Element, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event)"
    },
    {
      "interface": "Element",
      "kind": "event",
      "name": "onfullscreenerror",
      "type": "(this: Element, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "outerHTML",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "ownerDocument",
      "type": "Document"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "prefix",
      "type": "string",
      "doc": "Returns the namespace prefix.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/prefix)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "scrollHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollHeight)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "scrollLeft",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollLeft)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "scrollTop",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTop)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "scrollWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollWidth)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "shadowRoot",
      "type": "ShadowRoot",
      "doc": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/shadowRoot)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "slot",
      "type": "string",
      "doc": "Returns the value of element's slot content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/slot)"
    },
    {
      "interface": "Element",
      "kind": "property",
      "name": "tagName",
      "type": "string",
      "doc": "Returns the HTML-uppercased qualified name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/tagName)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "attachShadow",
      "parameters": [
        {
          "name": "init",
          "type": "ShadowRootInit",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ShadowRoot",
      "doc": "Creates a shadow root for element and returns it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attachShadow)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "checkVisibility",
      "parameters": [
        {
          "name": "options",
          "type": "CheckVisibilityOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/checkVisibility)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "closest",
      "parameters": [
        {
          "name": "selector",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLElementTagNameMap[K]",
      "doc": "Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/closest)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "closest",
      "parameters": [
        {
          "name": "selector",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGElementTagNameMap[K]"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "closest",
      "parameters": [
        {
          "name": "selector",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MathMLElementTagNameMap[K]"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "closest",
      "parameters": [
        {
          "name": "selectors",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "E"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "computedStyleMap",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "StylePropertyMapReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/computedStyleMap)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getAttribute",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttribute)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getAttributeNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "string",
      "doc": "Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNS)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getAttributeNames",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string[]",
      "doc": "Returns the qualified names of all element's attributes. Can contain duplicates.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNames)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getAttributeNode",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNode)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getAttributeNodeNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNodeNS)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getBoundingClientRect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getBoundingClientRect)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getClientRects",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMRectList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getClientRects)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByClassName",
      "parameters": [
        {
          "name": "classNames",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<Element>",
      "doc": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByClassName)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<HTMLElementTagNameMap[K]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagName)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<SVGElementTagNameMap[K]>"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<MathMLElementTagNameMap[K]>"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<HTMLElementDeprecatedTagNameMap[K]>"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagName",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLCollectionOf<Element>"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/1999/xhtml\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<HTMLElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagNameNS)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/2000/svg\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<SVGElement>"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "\"http://www.w3.org/1998/Math/MathML\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<MathMLElement>"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getElementsByTagNameNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "HTMLCollectionOf<Element>"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "getHTML",
      "parameters": [
        {
          "name": "options",
          "type": "GetHTMLOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getHTML)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "hasAttribute",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttribute)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "hasAttributeNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "boolean",
      "doc": "Returns true if element has an attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributeNS)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "hasAttributes",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns true if element has attributes, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributes)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "hasPointerCapture",
      "parameters": [
        {
          "name": "pointerId",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasPointerCapture)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "insertAdjacentElement",
      "parameters": [
        {
          "name": "where",
          "type": "InsertPosition",
          "optional": false,
          "rest": false
        },
        {
          "name": "element",
          "type": "Element",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentElement)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "insertAdjacentHTML",
      "parameters": [
        {
          "name": "position",
          "type": "InsertPosition",
          "optional": false,
          "rest": false
        },
        {
          "name": "string",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentHTML)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "insertAdjacentText",
      "parameters": [
        {
          "name": "where",
          "type": "InsertPosition",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentText)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "matches",
      "parameters": [
        {
          "name": "selectors",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns true if matching selectors against element's root yields element, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "releasePointerCapture",
      "parameters": [
        {
          "name": "pointerId",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/releasePointerCapture)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "removeAttribute",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes element's first attribute whose qualified name is qualifiedName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttribute)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "removeAttributeNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Removes element's attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNS)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "removeAttributeNode",
      "parameters": [
        {
          "name": "attr",
          "type": "Attr",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNode)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "requestFullscreen",
      "parameters": [
        {
          "name": "options",
          "type": "FullscreenOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "Displays element fullscreen and resolves promise when done.\n\nWhen supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestFullscreen)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "requestPointerLock",
      "parameters": [
        {
          "name": "options",
          "type": "PointerLockOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestPointerLock)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "scroll",
      "parameters": [
        {
          "name": "options",
          "type": "ScrollToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scroll)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "scroll",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "scrollBy",
      "parameters": [
        {
          "name": "options",
          "type": "ScrollToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollBy)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "scrollBy",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "scrollIntoView",
      "parameters": [
        {
          "name": "arg",
          "type": "boolean | ScrollIntoViewOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "scrollTo",
      "parameters": [
        {
          "name": "options",
          "type": "ScrollToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTo)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "scrollTo",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "setAttribute",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Sets the value of element's first attribute whose qualified name is qualifiedName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttribute)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "setAttributeNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "Sets the value of element's attribute whose namespace is namespace and local name is localName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNS)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "setAttributeNode",
      "parameters": [
        {
          "name": "attr",
          "type": "Attr",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNode)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "setAttributeNodeNS",
      "parameters": [
        {
          "name": "attr",
          "type": "Attr",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNodeNS)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "setHTMLUnsafe",
      "parameters": [
        {
          "name": "html",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setHTMLUnsafe)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "setPointerCapture",
      "parameters": [
        {
          "name": "pointerId",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setPointerCapture)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "toggleAttribute",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "force",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "boolean",
      "doc": "If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n\nReturns true if qualifiedName is now present, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/toggleAttribute)"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "webkitMatchesSelector",
      "parameters": [
        {
          "name": "selectors",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Element, ev: ElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Element, ev: ElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Element",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "ElementCSSInlineStyle": [
    {
      "interface": "ElementCSSInlineStyle",
      "kind": "property",
      "name": "attributeStyleMap",
      "type": "StylePropertyMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attributeStyleMap)"
    }
  ],
  "ElementContentEditable": [
    {
      "interface": "ElementContentEditable",
      "kind": "property",
      "name": "contentEditable",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/contentEditable)"
    },
    {
      "interface": "ElementContentEditable",
      "kind": "property",
      "name": "enterKeyHint",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/enterKeyHint)"
    },
    {
      "interface": "ElementContentEditable",
      "kind": "property",
      "name": "inputMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inputMode)"
    },
    {
      "interface": "ElementContentEditable",
      "kind": "property",
      "name": "isContentEditable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/isContentEditable)"
    }
  ],
  "ElementInternals": [
    {
      "interface": "ElementInternals",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Returns the form owner of internals's target element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/form)"
    },
    {
      "interface": "ElementInternals",
      "kind": "property",
      "name": "labels",
      "type": "NodeList",
      "doc": "Returns a NodeList of all the label elements that internals's target element is associated with.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/labels)"
    },
    {
      "interface": "ElementInternals",
      "kind": "property",
      "name": "shadowRoot",
      "type": "ShadowRoot",
      "doc": "Returns the ShadowRoot for internals's target element, if the target element is a shadow host, or null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/shadowRoot)"
    },
    {
      "interface": "ElementInternals",
      "kind": "property",
      "name": "states",
      "type": "CustomStateSet",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/states)"
    },
    {
      "interface": "ElementInternals",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "Returns the error message that would be shown to the user if internals's target element was to be checked for validity.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/validationMessage)"
    },
    {
      "interface": "ElementInternals",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "Returns the ValidityState object for internals's target element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/validity)"
    },
    {
      "interface": "ElementInternals",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "Returns true if internals's target element will be validated when the form is submitted; false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/willValidate)"
    },
    {
      "interface": "ElementInternals",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns true if internals's target element has no validity problems; false otherwise. Fires an invalid event at the element in the latter case.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/checkValidity)"
    },
    {
      "interface": "ElementInternals",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns true if internals's target element has no validity problems; otherwise, returns false, fires an invalid event at the element, and (if the event isn't canceled) reports the problem to the user.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/reportValidity)"
    },
    {
      "interface": "ElementInternals",
      "kind": "method",
      "name": "setFormValue",
      "parameters": [
        {
          "name": "value",
          "type": "string | FormData | File",
          "optional": false,
          "rest": false
        },
        {
          "name": "state",
          "type": "string | FormData | File",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Sets both the state and submission value of internals's target element to value.\n\nIf value is null, the element won't participate in form submission.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/setFormValue)"
    },
    {
      "interface": "ElementInternals",
      "kind": "method",
      "name": "setValidity",
      "parameters": [
        {
          "name": "flags",
          "type": "ValidityStateFlags",
          "optional": true,
          "rest": false
        },
        {
          "name": "message",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "anchor",
          "type": "HTMLElement",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "void",
      "doc": "Marks internals's target element as suffering from the constraints indicated by the flags argument, and sets the element's validation message to message. If anchor is specified, the user agent might use it to indicate problems with the constraints of internals's target element when the form owner is validated interactively or reportValidity() is called.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/setValidity)"
    }
  ],
  "EncodedAudioChunk": [
    {
      "interface": "EncodedAudioChunk",
      "kind": "property",
      "name": "byteLength",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/byteLength)"
    },
    {
      "interface": "EncodedAudioChunk",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/duration)"
    },
    {
      "interface": "EncodedAudioChunk",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/timestamp)"
    },
    {
      "interface": "EncodedAudioChunk",
      "kind": "property",
      "name": "type",
      "type": "EncodedAudioChunkType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/type)"
    },
    {
      "interface": "EncodedAudioChunk",
      "kind": "method",
      "name": "copyTo",
      "parameters": [
        {
          "name": "destination",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/copyTo)"
    }
  ],
  "EncodedVideoChunk": [
    {
      "interface": "EncodedVideoChunk",
      "kind": "property",
      "name": "byteLength",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/byteLength)"
    },
    {
      "interface": "EncodedVideoChunk",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/duration)"
    },
    {
      "interface": "EncodedVideoChunk",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/timestamp)"
    },
    {
      "interface": "EncodedVideoChunk",
      "kind": "property",
      "name": "type",
      "type": "EncodedVideoChunkType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/type)"
    },
    {
      "interface": "EncodedVideoChunk",
      "kind": "method",
      "name": "copyTo",
      "parameters": [
        {
          "name": "destination",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/copyTo)"
    }
  ],
  "ErrorEvent": [
    {
      "interface": "ErrorEvent",
      "kind": "property",
      "name": "colno",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/colno)"
    },
    {
      "interface": "ErrorEvent",
      "kind": "property",
      "name": "error",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/error)"
    },
    {
      "interface": "ErrorEvent",
      "kind": "property",
      "name": "filename",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/filename)"
    },
    {
      "interface": "ErrorEvent",
      "kind": "property",
      "name": "lineno",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/lineno)"
    },
    {
      "interface": "ErrorEvent",
      "kind": "property",
      "name": "message",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/message)"
    }
  ],
  "Event": [
    {
      "interface": "Event",
      "kind": "property",
      "name": "bubbles",
      "type": "boolean",
      "doc": "Returns true or false depending on how event was initialized. True if event goes through its target's ancestors in reverse tree order, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/bubbles)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "cancelBubble",
      "type": "boolean"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "cancelable",
      "type": "boolean",
      "doc": "Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/cancelable)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "composed",
      "type": "boolean",
      "doc": "Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/composed)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "currentTarget",
      "type": "EventTarget",
      "doc": "Returns the object whose event listener's callback is currently being invoked.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/currentTarget)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "defaultPrevented",
      "type": "boolean",
      "doc": "Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/defaultPrevented)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "eventPhase",
      "type": "number",
      "doc": "Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/eventPhase)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "isTrusted",
      "type": "boolean",
      "doc": "Returns true if event was dispatched by the user agent, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/isTrusted)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "returnValue",
      "type": "boolean"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "srcElement",
      "type": "EventTarget"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "target",
      "type": "EventTarget",
      "doc": "Returns the object to which event is dispatched (its target).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/target)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "timeStamp",
      "type": "number",
      "doc": "Returns the event's timestamp as the number of milliseconds measured relative to the time origin.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/timeStamp)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/type)"
    },
    {
      "interface": "Event",
      "kind": "method",
      "name": "composedPath",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "EventTarget[]",
      "doc": "Returns the invocation target objects of event's path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root's mode is \"closed\" that are not reachable from event's currentTarget.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/composedPath)"
    },
    {
      "interface": "Event",
      "kind": "method",
      "name": "initEvent",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubbles",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelable",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "Event",
      "kind": "method",
      "name": "preventDefault",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/preventDefault)"
    },
    {
      "interface": "Event",
      "kind": "method",
      "name": "stopImmediatePropagation",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/stopImmediatePropagation)"
    },
    {
      "interface": "Event",
      "kind": "method",
      "name": "stopPropagation",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/stopPropagation)"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "NONE",
      "type": "0"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "CAPTURING_PHASE",
      "type": "1"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "AT_TARGET",
      "type": "2"
    },
    {
      "interface": "Event",
      "kind": "property",
      "name": "BUBBLING_PHASE",
      "type": "3"
    }
  ],
  "EventCounts": [
    {
      "interface": "EventCounts",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: number, key: string, parent: EventCounts) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "EventListenerObject": [
    {
      "interface": "EventListenerObject",
      "kind": "method",
      "name": "handleEvent",
      "parameters": [
        {
          "name": "object",
          "type": "Event",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    }
  ],
  "EventSourceEventMap": [
    {
      "interface": "EventSourceEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "Event"
    },
    {
      "interface": "EventSourceEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "EventSourceEventMap",
      "kind": "property",
      "name": "\"open\"",
      "type": "Event"
    }
  ],
  "EventSource": [
    {
      "interface": "EventSource",
      "kind": "event",
      "name": "onerror",
      "type": "(this: EventSource, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/error_event)"
    },
    {
      "interface": "EventSource",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: EventSource, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/message_event)"
    },
    {
      "interface": "EventSource",
      "kind": "event",
      "name": "onopen",
      "type": "(this: EventSource, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/open_event)"
    },
    {
      "interface": "EventSource",
      "kind": "property",
      "name": "readyState",
      "type": "number",
      "doc": "Returns the state of this EventSource object's connection. It can have the values described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/readyState)"
    },
    {
      "interface": "EventSource",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "Returns the URL providing the event stream.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/url)"
    },
    {
      "interface": "EventSource",
      "kind": "property",
      "name": "withCredentials",
      "type": "boolean",
      "doc": "Returns true if the credentials mode for connection requests to the URL providing the event stream is set to \"include\", and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/withCredentials)"
    },
    {
      "interface": "EventSource",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/close)"
    },
    {
      "interface": "EventSource",
      "kind": "property",
      "name": "CONNECTING",
      "type": "0"
    },
    {
      "interface": "EventSource",
      "kind": "property",
      "name": "OPEN",
      "type": "1"
    },
    {
      "interface": "EventSource",
      "kind": "property",
      "name": "CLOSED",
      "type": "2"
    },
    {
      "interface": "EventSource",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: EventSource, ev: EventSourceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "EventSource",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: EventSource, event: MessageEvent<any>) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "EventSource",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "EventSource",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: EventSource, ev: EventSourceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "EventSource",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: EventSource, event: MessageEvent<any>) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "EventSource",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "EventTarget": [
    {
      "interface": "EventTarget",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "callback",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)"
    },
    {
      "interface": "EventTarget",
      "kind": "method",
      "name": "dispatchEvent",
      "parameters": [
        {
          "name": "event",
          "type": "Event",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)"
    },
    {
      "interface": "EventTarget",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "callback",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "Removes the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)"
    }
  ],
  "External": [
    {
      "interface": "External",
      "kind": "method",
      "name": "AddSearchProvider",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "External",
      "kind": "method",
      "name": "IsSearchProviderInstalled",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    }
  ],
  "File": [
    {
      "interface": "File",
      "kind": "property",
      "name": "lastModified",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified)"
    },
    {
      "interface": "File",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name)"
    },
    {
      "interface": "File",
      "kind": "property",
      "name": "webkitRelativePath",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/File/webkitRelativePath)"
    }
  ],
  "FileList": [
    {
      "interface": "FileList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList/length)"
    },
    {
      "interface": "FileList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "File",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList/item)"
    }
  ],
  "FileReaderEventMap": [
    {
      "interface": "FileReaderEventMap",
      "kind": "property",
      "name": "\"abort\"",
      "type": "ProgressEvent<FileReader>"
    },
    {
      "interface": "FileReaderEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "ProgressEvent<FileReader>"
    },
    {
      "interface": "FileReaderEventMap",
      "kind": "property",
      "name": "\"load\"",
      "type": "ProgressEvent<FileReader>"
    },
    {
      "interface": "FileReaderEventMap",
      "kind": "property",
      "name": "\"loadend\"",
      "type": "ProgressEvent<FileReader>"
    },
    {
      "interface": "FileReaderEventMap",
      "kind": "property",
      "name": "\"loadstart\"",
      "type": "ProgressEvent<FileReader>"
    },
    {
      "interface": "FileReaderEventMap",
      "kind": "property",
      "name": "\"progress\"",
      "type": "ProgressEvent<FileReader>"
    }
  ],
  "FileReader": [
    {
      "interface": "FileReader",
      "kind": "property",
      "name": "error",
      "type": "DOMException",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error)"
    },
    {
      "interface": "FileReader",
      "kind": "event",
      "name": "onabort",
      "type": "(this: FileReader, ev: ProgressEvent<FileReader>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort_event)"
    },
    {
      "interface": "FileReader",
      "kind": "event",
      "name": "onerror",
      "type": "(this: FileReader, ev: ProgressEvent<FileReader>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error_event)"
    },
    {
      "interface": "FileReader",
      "kind": "event",
      "name": "onload",
      "type": "(this: FileReader, ev: ProgressEvent<FileReader>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/load_event)"
    },
    {
      "interface": "FileReader",
      "kind": "event",
      "name": "onloadend",
      "type": "(this: FileReader, ev: ProgressEvent<FileReader>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadend_event)"
    },
    {
      "interface": "FileReader",
      "kind": "event",
      "name": "onloadstart",
      "type": "(this: FileReader, ev: ProgressEvent<FileReader>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadstart_event)"
    },
    {
      "interface": "FileReader",
      "kind": "event",
      "name": "onprogress",
      "type": "(this: FileReader, ev: ProgressEvent<FileReader>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/progress_event)"
    },
    {
      "interface": "FileReader",
      "kind": "property",
      "name": "readyState",
      "type": "0 | 2 | 1",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readyState)"
    },
    {
      "interface": "FileReader",
      "kind": "property",
      "name": "result",
      "type": "string | ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/result)"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "abort",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort)"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "readAsArrayBuffer",
      "parameters": [
        {
          "name": "blob",
          "type": "Blob",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsArrayBuffer)"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "readAsBinaryString",
      "parameters": [
        {
          "name": "blob",
          "type": "Blob",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "readAsDataURL",
      "parameters": [
        {
          "name": "blob",
          "type": "Blob",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsDataURL)"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "readAsText",
      "parameters": [
        {
          "name": "blob",
          "type": "Blob",
          "optional": false,
          "rest": false
        },
        {
          "name": "encoding",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsText)"
    },
    {
      "interface": "FileReader",
      "kind": "property",
      "name": "EMPTY",
      "type": "0"
    },
    {
      "interface": "FileReader",
      "kind": "property",
      "name": "LOADING",
      "type": "1"
    },
    {
      "interface": "FileReader",
      "kind": "property",
      "name": "DONE",
      "type": "2"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: FileReader, ev: FileReaderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: FileReader, ev: FileReaderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FileReader",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "FileSystem": [
    {
      "interface": "FileSystem",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystem/name)"
    },
    {
      "interface": "FileSystem",
      "kind": "property",
      "name": "root",
      "type": "FileSystemDirectoryEntry",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystem/root)"
    }
  ],
  "FileSystemDirectoryEntry": [
    {
      "interface": "FileSystemDirectoryEntry",
      "kind": "method",
      "name": "createReader",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "FileSystemDirectoryReader",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryEntry/createReader)"
    },
    {
      "interface": "FileSystemDirectoryEntry",
      "kind": "method",
      "name": "getDirectory",
      "parameters": [
        {
          "name": "path",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "FileSystemFlags",
          "optional": true,
          "rest": false
        },
        {
          "name": "successCallback",
          "type": "FileSystemEntryCallback",
          "optional": true,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "ErrorCallback",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryEntry/getDirectory)"
    },
    {
      "interface": "FileSystemDirectoryEntry",
      "kind": "method",
      "name": "getFile",
      "parameters": [
        {
          "name": "path",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "FileSystemFlags",
          "optional": true,
          "rest": false
        },
        {
          "name": "successCallback",
          "type": "FileSystemEntryCallback",
          "optional": true,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "ErrorCallback",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryEntry/getFile)"
    }
  ],
  "FileSystemDirectoryHandle": [
    {
      "interface": "FileSystemDirectoryHandle",
      "kind": "property",
      "name": "kind",
      "type": "\"directory\""
    },
    {
      "interface": "FileSystemDirectoryHandle",
      "kind": "method",
      "name": "getDirectoryHandle",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "FileSystemGetDirectoryOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<FileSystemDirectoryHandle>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/getDirectoryHandle)"
    },
    {
      "interface": "FileSystemDirectoryHandle",
      "kind": "method",
      "name": "getFileHandle",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "FileSystemGetFileOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<FileSystemFileHandle>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/getFileHandle)"
    },
    {
      "interface": "FileSystemDirectoryHandle",
      "kind": "method",
      "name": "removeEntry",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "FileSystemRemoveOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/removeEntry)"
    },
    {
      "interface": "FileSystemDirectoryHandle",
      "kind": "method",
      "name": "resolve",
      "parameters": [
        {
          "name": "possibleDescendant",
          "type": "FileSystemHandle",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<string[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/resolve)"
    }
  ],
  "FileSystemDirectoryReader": [
    {
      "interface": "FileSystemDirectoryReader",
      "kind": "method",
      "name": "readEntries",
      "parameters": [
        {
          "name": "successCallback",
          "type": "FileSystemEntriesCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "ErrorCallback",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryReader/readEntries)"
    }
  ],
  "FileSystemEntry": [
    {
      "interface": "FileSystemEntry",
      "kind": "property",
      "name": "filesystem",
      "type": "FileSystem",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/filesystem)"
    },
    {
      "interface": "FileSystemEntry",
      "kind": "property",
      "name": "fullPath",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/fullPath)"
    },
    {
      "interface": "FileSystemEntry",
      "kind": "property",
      "name": "isDirectory",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/isDirectory)"
    },
    {
      "interface": "FileSystemEntry",
      "kind": "property",
      "name": "isFile",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/isFile)"
    },
    {
      "interface": "FileSystemEntry",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/name)"
    },
    {
      "interface": "FileSystemEntry",
      "kind": "method",
      "name": "getParent",
      "parameters": [
        {
          "name": "successCallback",
          "type": "FileSystemEntryCallback",
          "optional": true,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "ErrorCallback",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/getParent)"
    }
  ],
  "FileSystemFileEntry": [
    {
      "interface": "FileSystemFileEntry",
      "kind": "method",
      "name": "file",
      "parameters": [
        {
          "name": "successCallback",
          "type": "FileCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "ErrorCallback",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileEntry/file)"
    }
  ],
  "FileSystemFileHandle": [
    {
      "interface": "FileSystemFileHandle",
      "kind": "property",
      "name": "kind",
      "type": "\"file\""
    },
    {
      "interface": "FileSystemFileHandle",
      "kind": "method",
      "name": "createWritable",
      "parameters": [
        {
          "name": "options",
          "type": "FileSystemCreateWritableOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<FileSystemWritableFileStream>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle/createWritable)"
    },
    {
      "interface": "FileSystemFileHandle",
      "kind": "method",
      "name": "getFile",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<File>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle/getFile)"
    }
  ],
  "FileSystemHandle": [
    {
      "interface": "FileSystemHandle",
      "kind": "property",
      "name": "kind",
      "type": "FileSystemHandleKind",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/kind)"
    },
    {
      "interface": "FileSystemHandle",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/name)"
    },
    {
      "interface": "FileSystemHandle",
      "kind": "method",
      "name": "isSameEntry",
      "parameters": [
        {
          "name": "other",
          "type": "FileSystemHandle",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/isSameEntry)"
    }
  ],
  "FileSystemWritableFileStream": [
    {
      "interface": "FileSystemWritableFileStream",
      "kind": "method",
      "name": "seek",
      "parameters": [
        {
          "name": "position",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/seek)"
    },
    {
      "interface": "FileSystemWritableFileStream",
      "kind": "method",
      "name": "truncate",
      "parameters": [
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/truncate)"
    },
    {
      "interface": "FileSystemWritableFileStream",
      "kind": "method",
      "name": "write",
      "parameters": [
        {
          "name": "data",
          "type": "FileSystemWriteChunkType",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/write)"
    }
  ],
  "FocusEvent": [
    {
      "interface": "FocusEvent",
      "kind": "property",
      "name": "relatedTarget",
      "type": "EventTarget",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FocusEvent/relatedTarget)"
    }
  ],
  "FontFace": [
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "ascentOverride",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/ascentOverride)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "descentOverride",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/descentOverride)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "display",
      "type": "FontDisplay",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/display)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "family",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/family)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "featureSettings",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/featureSettings)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "lineGapOverride",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/lineGapOverride)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "loaded",
      "type": "Promise<FontFace>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/loaded)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "status",
      "type": "FontFaceLoadStatus",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/status)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "stretch",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/stretch)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "style",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/style)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "unicodeRange",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/unicodeRange)"
    },
    {
      "interface": "FontFace",
      "kind": "property",
      "name": "weight",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/weight)"
    },
    {
      "interface": "FontFace",
      "kind": "method",
      "name": "load",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<FontFace>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/load)"
    }
  ],
  "FontFaceSetEventMap": [
    {
      "interface": "FontFaceSetEventMap",
      "kind": "property",
      "name": "\"loading\"",
      "type": "FontFaceSetLoadEvent"
    },
    {
      "interface": "FontFaceSetEventMap",
      "kind": "property",
      "name": "\"loadingdone\"",
      "type": "FontFaceSetLoadEvent"
    },
    {
      "interface": "FontFaceSetEventMap",
      "kind": "property",
      "name": "\"loadingerror\"",
      "type": "FontFaceSetLoadEvent"
    }
  ],
  "FontFaceSet": [
    {
      "interface": "FontFaceSet",
      "kind": "event",
      "name": "onloading",
      "type": "(this: FontFaceSet, ev: FontFaceSetLoadEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loading_event)"
    },
    {
      "interface": "FontFaceSet",
      "kind": "event",
      "name": "onloadingdone",
      "type": "(this: FontFaceSet, ev: FontFaceSetLoadEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingdone_event)"
    },
    {
      "interface": "FontFaceSet",
      "kind": "event",
      "name": "onloadingerror",
      "type": "(this: FontFaceSet, ev: FontFaceSetLoadEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingerror_event)"
    },
    {
      "interface": "FontFaceSet",
      "kind": "property",
      "name": "ready",
      "type": "Promise<FontFaceSet>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready)"
    },
    {
      "interface": "FontFaceSet",
      "kind": "property",
      "name": "status",
      "type": "FontFaceSetLoadStatus",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/status)"
    },
    {
      "interface": "FontFaceSet",
      "kind": "method",
      "name": "check",
      "parameters": [
        {
          "name": "font",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "text",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/check)"
    },
    {
      "interface": "FontFaceSet",
      "kind": "method",
      "name": "load",
      "parameters": [
        {
          "name": "font",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "text",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<FontFace[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/load)"
    },
    {
      "interface": "FontFaceSet",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: FontFace, key: FontFace, parent: FontFaceSet) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "FontFaceSet",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FontFaceSet",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FontFaceSet",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FontFaceSet",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "FontFaceSetLoadEvent": [
    {
      "interface": "FontFaceSetLoadEvent",
      "kind": "property",
      "name": "fontfaces",
      "type": "readonly FontFace[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSetLoadEvent/fontfaces)"
    }
  ],
  "FontFaceSource": [
    {
      "interface": "FontFaceSource",
      "kind": "property",
      "name": "fonts",
      "type": "FontFaceSet",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fonts)"
    }
  ],
  "FormData": [
    {
      "interface": "FormData",
      "kind": "method",
      "name": "append",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string | Blob",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/append)"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "append",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "append",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "blobValue",
          "type": "Blob",
          "optional": false,
          "rest": false
        },
        {
          "name": "filename",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "delete",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/delete)"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "FormDataEntryValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/get)"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "getAll",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "FormDataEntryValue[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/getAll)"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "has",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/has)"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "set",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string | Blob",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/set)"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "set",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "set",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "blobValue",
          "type": "Blob",
          "optional": false,
          "rest": false
        },
        {
          "name": "filename",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "FormData",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: FormDataEntryValue, key: string, parent: FormData) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "FormDataEvent": [
    {
      "interface": "FormDataEvent",
      "kind": "property",
      "name": "formData",
      "type": "FormData",
      "doc": "Returns a FormData object representing names and values of elements associated to the target form. Operations on the FormData object will affect form data to be submitted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/FormDataEvent/formData)"
    }
  ],
  "GPUError": [
    {
      "interface": "GPUError",
      "kind": "property",
      "name": "message",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GPUError/message)"
    }
  ],
  "GainNode": [
    {
      "interface": "GainNode",
      "kind": "property",
      "name": "gain",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GainNode/gain)"
    }
  ],
  "Gamepad": [
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "axes",
      "type": "readonly number[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/axes)"
    },
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "buttons",
      "type": "readonly GamepadButton[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/buttons)"
    },
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "connected",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/connected)"
    },
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/id)"
    },
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "index",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/index)"
    },
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "mapping",
      "type": "GamepadMappingType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/mapping)"
    },
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/timestamp)"
    },
    {
      "interface": "Gamepad",
      "kind": "property",
      "name": "vibrationActuator",
      "type": "GamepadHapticActuator",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/vibrationActuator)"
    }
  ],
  "GamepadButton": [
    {
      "interface": "GamepadButton",
      "kind": "property",
      "name": "pressed",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadButton/pressed)"
    },
    {
      "interface": "GamepadButton",
      "kind": "property",
      "name": "touched",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadButton/touched)"
    },
    {
      "interface": "GamepadButton",
      "kind": "property",
      "name": "value",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadButton/value)"
    }
  ],
  "GamepadEvent": [
    {
      "interface": "GamepadEvent",
      "kind": "property",
      "name": "gamepad",
      "type": "Gamepad",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadEvent/gamepad)"
    }
  ],
  "GamepadHapticActuator": [
    {
      "interface": "GamepadHapticActuator",
      "kind": "method",
      "name": "playEffect",
      "parameters": [
        {
          "name": "type",
          "type": "GamepadHapticEffectType",
          "optional": false,
          "rest": false
        },
        {
          "name": "params",
          "type": "GamepadEffectParameters",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<GamepadHapticsResult>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadHapticActuator/playEffect)"
    },
    {
      "interface": "GamepadHapticActuator",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<GamepadHapticsResult>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadHapticActuator/reset)"
    }
  ],
  "GenericTransformStream": [
    {
      "interface": "GenericTransformStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream/readable)"
    },
    {
      "interface": "GenericTransformStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream/writable)"
    }
  ],
  "Geolocation": [
    {
      "interface": "Geolocation",
      "kind": "method",
      "name": "clearWatch",
      "parameters": [
        {
          "name": "watchId",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Geolocation/clearWatch)"
    },
    {
      "interface": "Geolocation",
      "kind": "method",
      "name": "getCurrentPosition",
      "parameters": [
        {
          "name": "successCallback",
          "type": "PositionCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "PositionErrorCallback",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "PositionOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Geolocation/getCurrentPosition)"
    },
    {
      "interface": "Geolocation",
      "kind": "method",
      "name": "watchPosition",
      "parameters": [
        {
          "name": "successCallback",
          "type": "PositionCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "errorCallback",
          "type": "PositionErrorCallback",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "PositionOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Geolocation/watchPosition)"
    }
  ],
  "GeolocationCoordinates": [
    {
      "interface": "GeolocationCoordinates",
      "kind": "property",
      "name": "accuracy",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/accuracy)"
    },
    {
      "interface": "GeolocationCoordinates",
      "kind": "property",
      "name": "altitude",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/altitude)"
    },
    {
      "interface": "GeolocationCoordinates",
      "kind": "property",
      "name": "altitudeAccuracy",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/altitudeAccuracy)"
    },
    {
      "interface": "GeolocationCoordinates",
      "kind": "property",
      "name": "heading",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/heading)"
    },
    {
      "interface": "GeolocationCoordinates",
      "kind": "property",
      "name": "latitude",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/latitude)"
    },
    {
      "interface": "GeolocationCoordinates",
      "kind": "property",
      "name": "longitude",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/longitude)"
    },
    {
      "interface": "GeolocationCoordinates",
      "kind": "property",
      "name": "speed",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/speed)"
    },
    {
      "interface": "GeolocationCoordinates",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/toJSON)"
    }
  ],
  "GeolocationPosition": [
    {
      "interface": "GeolocationPosition",
      "kind": "property",
      "name": "coords",
      "type": "GeolocationCoordinates",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/coords)"
    },
    {
      "interface": "GeolocationPosition",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/timestamp)"
    },
    {
      "interface": "GeolocationPosition",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/toJSON)"
    }
  ],
  "GeolocationPositionError": [
    {
      "interface": "GeolocationPositionError",
      "kind": "property",
      "name": "code",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPositionError/code)"
    },
    {
      "interface": "GeolocationPositionError",
      "kind": "property",
      "name": "message",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPositionError/message)"
    },
    {
      "interface": "GeolocationPositionError",
      "kind": "property",
      "name": "PERMISSION_DENIED",
      "type": "1"
    },
    {
      "interface": "GeolocationPositionError",
      "kind": "property",
      "name": "POSITION_UNAVAILABLE",
      "type": "2"
    },
    {
      "interface": "GeolocationPositionError",
      "kind": "property",
      "name": "TIMEOUT",
      "type": "3"
    }
  ],
  "GlobalEventHandlersEventMap": [
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"abort\"",
      "type": "UIEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"animationcancel\"",
      "type": "AnimationEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"animationend\"",
      "type": "AnimationEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"animationiteration\"",
      "type": "AnimationEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"animationstart\"",
      "type": "AnimationEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"auxclick\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"beforeinput\"",
      "type": "InputEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"beforetoggle\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"blur\"",
      "type": "FocusEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"cancel\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"canplay\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"canplaythrough\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"change\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"click\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"close\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"compositionend\"",
      "type": "CompositionEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"compositionstart\"",
      "type": "CompositionEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"compositionupdate\"",
      "type": "CompositionEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"contextlost\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"contextmenu\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"contextrestored\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"copy\"",
      "type": "ClipboardEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"cuechange\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"cut\"",
      "type": "ClipboardEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"dblclick\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"drag\"",
      "type": "DragEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"dragend\"",
      "type": "DragEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"dragenter\"",
      "type": "DragEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"dragleave\"",
      "type": "DragEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"dragover\"",
      "type": "DragEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"dragstart\"",
      "type": "DragEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"drop\"",
      "type": "DragEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"durationchange\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"emptied\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"ended\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "ErrorEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"focus\"",
      "type": "FocusEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"focusin\"",
      "type": "FocusEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"focusout\"",
      "type": "FocusEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"formdata\"",
      "type": "FormDataEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"gotpointercapture\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"input\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"invalid\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"keydown\"",
      "type": "KeyboardEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"keypress\"",
      "type": "KeyboardEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"keyup\"",
      "type": "KeyboardEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"load\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"loadeddata\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"loadedmetadata\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"loadstart\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"lostpointercapture\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"mousedown\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"mouseenter\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"mouseleave\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"mousemove\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"mouseout\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"mouseover\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"mouseup\"",
      "type": "MouseEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"paste\"",
      "type": "ClipboardEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pause\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"play\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"playing\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointercancel\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointerdown\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointerenter\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointerleave\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointermove\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointerout\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointerover\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"pointerup\"",
      "type": "PointerEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"progress\"",
      "type": "ProgressEvent<EventTarget>"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"ratechange\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"reset\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"resize\"",
      "type": "UIEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"scroll\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"scrollend\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"securitypolicyviolation\"",
      "type": "SecurityPolicyViolationEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"seeked\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"seeking\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"select\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"selectionchange\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"selectstart\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"slotchange\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"stalled\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"submit\"",
      "type": "SubmitEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"suspend\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"timeupdate\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"toggle\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"touchcancel\"",
      "type": "TouchEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"touchend\"",
      "type": "TouchEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"touchmove\"",
      "type": "TouchEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"touchstart\"",
      "type": "TouchEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"transitioncancel\"",
      "type": "TransitionEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"transitionend\"",
      "type": "TransitionEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"transitionrun\"",
      "type": "TransitionEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"transitionstart\"",
      "type": "TransitionEvent"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"volumechange\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"waiting\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"webkitanimationend\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"webkitanimationiteration\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"webkitanimationstart\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"webkittransitionend\"",
      "type": "Event"
    },
    {
      "interface": "GlobalEventHandlersEventMap",
      "kind": "property",
      "name": "\"wheel\"",
      "type": "WheelEvent"
    }
  ],
  "GlobalEventHandlers": [
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onabort",
      "type": "(this: GlobalEventHandlers, ev: UIEvent) => any",
      "doc": "Fires when the user aborts the download."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onanimationcancel",
      "type": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onanimationend",
      "type": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onanimationiteration",
      "type": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onanimationstart",
      "type": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onauxclick",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onbeforeinput",
      "type": "(this: GlobalEventHandlers, ev: InputEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onbeforetoggle",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onblur",
      "type": "(this: GlobalEventHandlers, ev: FocusEvent) => any",
      "doc": "Fires when the object loses the input focus."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncancel",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/cancel_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncanplay",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when playback is possible, but would require further buffering."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncanplaythrough",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onchange",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Fires when the contents of the object or selection have changed."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onclick",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user clicks the left mouse button on the object"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onclose",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncontextlost",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextlost_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncontextmenu",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user clicks the right mouse button in the client area, opening the context menu."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncontextrestored",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncopy",
      "type": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncuechange",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oncut",
      "type": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondblclick",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user double-clicks the object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondrag",
      "type": "(this: GlobalEventHandlers, ev: DragEvent) => any",
      "doc": "Fires on the source object continuously during a drag operation."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondragend",
      "type": "(this: GlobalEventHandlers, ev: DragEvent) => any",
      "doc": "Fires on the source object when the user releases the mouse at the close of a drag operation."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondragenter",
      "type": "(this: GlobalEventHandlers, ev: DragEvent) => any",
      "doc": "Fires on the target element when the user drags the object to a valid drop target."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondragleave",
      "type": "(this: GlobalEventHandlers, ev: DragEvent) => any",
      "doc": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondragover",
      "type": "(this: GlobalEventHandlers, ev: DragEvent) => any",
      "doc": "Fires on the target element continuously while the user drags the object over a valid drop target."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondragstart",
      "type": "(this: GlobalEventHandlers, ev: DragEvent) => any",
      "doc": "Fires on the source object when the user starts to drag a text selection or selected object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondrop",
      "type": "(this: GlobalEventHandlers, ev: DragEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ondurationchange",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the duration attribute is updated."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onemptied",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the media element is reset to its initial state."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onended",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the end of playback is reached."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onerror",
      "type": "OnErrorEventHandlerNonNull",
      "doc": "Fires when an error occurs during object loading."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onfocus",
      "type": "(this: GlobalEventHandlers, ev: FocusEvent) => any",
      "doc": "Fires when the object receives focus."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onformdata",
      "type": "(this: GlobalEventHandlers, ev: FormDataEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ongotpointercapture",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oninput",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "oninvalid",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onkeydown",
      "type": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any",
      "doc": "Fires when the user presses a key."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onkeypress",
      "type": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any",
      "doc": "Fires when the user presses an alphanumeric key."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onkeyup",
      "type": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any",
      "doc": "Fires when the user releases a key."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onload",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Fires immediately after the browser loads the object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onloadeddata",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when media data is loaded at the current playback position."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onloadedmetadata",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the duration and dimensions of the media have been determined."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onloadstart",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when Internet Explorer begins looking for media data."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onlostpointercapture",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onmousedown",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user clicks the object with either mouse button."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onmouseenter",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onmouseleave",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onmousemove",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user moves the mouse over the object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onmouseout",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user moves the mouse pointer outside the boundaries of the object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onmouseover",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user moves the mouse pointer into the object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onmouseup",
      "type": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
      "doc": "Fires when the user releases a mouse button while the mouse is over the object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpaste",
      "type": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpause",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when playback is paused."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onplay",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the play method is requested."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onplaying",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the audio or video has started playing."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointercancel",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointerdown",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointerenter",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointerleave",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointermove",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointerout",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointerover",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onpointerup",
      "type": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onprogress",
      "type": "(this: GlobalEventHandlers, ev: ProgressEvent<EventTarget>) => any",
      "doc": "Occurs to indicate progress while downloading media data."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onratechange",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the playback rate is increased or decreased."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onreset",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Fires when the user resets a form."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onresize",
      "type": "(this: GlobalEventHandlers, ev: UIEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onscroll",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Fires when the user repositions the scroll box in the scroll bar on the object."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onscrollend",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onsecuritypolicyviolation",
      "type": "(this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onseeked",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the seek operation ends."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onseeking",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the current playback position is moved."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onselect",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Fires when the current selection changes."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onselectionchange",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onselectstart",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onslotchange",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onstalled",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the download has stopped."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onsubmit",
      "type": "(this: GlobalEventHandlers, ev: SubmitEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onsuspend",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs if the load operation has been intentionally halted."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontimeupdate",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs to indicate the current playback position."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontoggle",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/toggle_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontouchcancel",
      "type": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontouchend",
      "type": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontouchmove",
      "type": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontouchstart",
      "type": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontransitioncancel",
      "type": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontransitionend",
      "type": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontransitionrun",
      "type": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "ontransitionstart",
      "type": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onvolumechange",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when the volume is changed, or playback is muted or unmuted."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onwaiting",
      "type": "(this: GlobalEventHandlers, ev: Event) => any",
      "doc": "Occurs when playback stops because the next frame of a video resource is not available."
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onwebkitanimationend",
      "type": "(this: GlobalEventHandlers, ev: Event) => any"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onwebkitanimationiteration",
      "type": "(this: GlobalEventHandlers, ev: Event) => any"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onwebkitanimationstart",
      "type": "(this: GlobalEventHandlers, ev: Event) => any"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onwebkittransitionend",
      "type": "(this: GlobalEventHandlers, ev: Event) => any"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "event",
      "name": "onwheel",
      "type": "(this: GlobalEventHandlers, ev: WheelEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event)"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "GlobalEventHandlers",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLAllCollection": [
    {
      "interface": "HTMLAllCollection",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of elements in the collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAllCollection/length)"
    },
    {
      "interface": "HTMLAllCollection",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "nameOrIndex",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Element | HTMLCollection",
      "doc": "Returns the item with index index from the collection (determined by tree order).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAllCollection/item)"
    },
    {
      "interface": "HTMLAllCollection",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Element | HTMLCollection",
      "doc": "Returns the item with ID or name name from the collection.\n\nIf there are multiple matching items, then an HTMLCollection object containing all those elements is returned.\n\nOnly button, form, iframe, input, map, meta, object, select, and textarea elements can have a name for the purpose of this method; their name is given by the value of their name attribute.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAllCollection/namedItem)"
    }
  ],
  "HTMLAnchorElement": [
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "charset",
      "type": "string",
      "doc": "Sets or retrieves the character set used to encode the object."
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "coords",
      "type": "string",
      "doc": "Sets or retrieves the coordinates of the object."
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "download",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/download)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "hreflang",
      "type": "string",
      "doc": "Sets or retrieves the language code of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/hreflang)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the shape of the object."
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "ping",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/ping)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/referrerPolicy)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "rel",
      "type": "string",
      "doc": "Sets or retrieves the relationship between the object and the destination of the link.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/rel)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "rev",
      "type": "string",
      "doc": "Sets or retrieves the relationship between the object and the destination of the link."
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "shape",
      "type": "string",
      "doc": "Sets or retrieves the shape of the object."
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "target",
      "type": "string",
      "doc": "Sets or retrieves the window or frame at which to target content.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/target)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "text",
      "type": "string",
      "doc": "Retrieves or sets the text of the object as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/text)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/type)"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAnchorElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLAreaElement": [
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "alt",
      "type": "string",
      "doc": "Sets or retrieves a text alternative to the graphic.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/alt)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "coords",
      "type": "string",
      "doc": "Sets or retrieves the coordinates of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/coords)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "download",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/download)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "noHref",
      "type": "boolean",
      "doc": "Sets or gets whether clicks in this region cause action."
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "ping",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/ping)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/referrerPolicy)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "rel",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/rel)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "shape",
      "type": "string",
      "doc": "Sets or retrieves the shape of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/shape)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "property",
      "name": "target",
      "type": "string",
      "doc": "Sets or retrieves the window or frame at which to target content.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/target)"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAreaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLAudioElement": [
    {
      "interface": "HTMLAudioElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAudioElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAudioElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLAudioElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLBRElement": [
    {
      "interface": "HTMLBRElement",
      "kind": "property",
      "name": "clear",
      "type": "string",
      "doc": "Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document."
    },
    {
      "interface": "HTMLBRElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBRElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBRElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBRElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLBaseElement": [
    {
      "interface": "HTMLBaseElement",
      "kind": "property",
      "name": "href",
      "type": "string",
      "doc": "Gets or sets the baseline URL on which relative links are based.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLBaseElement/href)"
    },
    {
      "interface": "HTMLBaseElement",
      "kind": "property",
      "name": "target",
      "type": "string",
      "doc": "Sets or retrieves the window or frame at which to target content.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLBaseElement/target)"
    },
    {
      "interface": "HTMLBaseElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBaseElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBaseElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBaseElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLBodyElement": [
    {
      "interface": "HTMLBodyElement",
      "kind": "property",
      "name": "aLink",
      "type": "string"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "property",
      "name": "background",
      "type": "string"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "property",
      "name": "bgColor",
      "type": "string"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "property",
      "name": "link",
      "type": "string"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "property",
      "name": "text",
      "type": "string"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "property",
      "name": "vLink",
      "type": "string"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLBodyElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLButtonElement": [
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/disabled)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/form)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "formAction",
      "type": "string",
      "doc": "Overrides the action attribute (where the data on a form is sent) on the parent form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formAction)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "formEnctype",
      "type": "string",
      "doc": "Used to override the encoding (formEnctype attribute) specified on the form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formEnctype)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "formMethod",
      "type": "string",
      "doc": "Overrides the submit method attribute previously specified on a form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formMethod)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "formNoValidate",
      "type": "boolean",
      "doc": "Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \"save draft\"-type submit option.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formNoValidate)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "formTarget",
      "type": "string",
      "doc": "Overrides the target attribute on a form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formTarget)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "labels",
      "type": "NodeListOf<HTMLLabelElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/labels)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/name)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "type",
      "type": "\"submit\" | \"reset\" | \"button\"",
      "doc": "Gets the classification and default behavior of the button.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/type)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/validationMessage)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "Returns a  ValidityState object that represents the validity states of an element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/validity)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Sets or retrieves the default or selected value of the control.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/value)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/willValidate)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether a form will validate when it is submitted, without having to submit it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/checkValidity)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/reportValidity)"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "method",
      "name": "setCustomValidity",
      "parameters": [
        {
          "name": "error",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Sets a custom error message that is displayed when a form is submitted."
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLButtonElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLCanvasElement": [
    {
      "interface": "HTMLCanvasElement",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "Gets or sets the height of a canvas element on a document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/height)"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Gets or sets the width of a canvas element on a document.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/width)"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "captureStream",
      "parameters": [
        {
          "name": "frameRequestRate",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "MediaStream",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/captureStream)"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"2d\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "CanvasRenderingContext2DSettings",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "CanvasRenderingContext2D",
      "doc": "Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas."
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"bitmaprenderer\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ImageBitmapRenderingContextSettings",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "ImageBitmapRenderingContext"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"webgl\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "WebGLContextAttributes",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "WebGLRenderingContext"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"webgl2\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "WebGLContextAttributes",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "WebGL2RenderingContext"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "RenderingContext"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "toBlob",
      "parameters": [
        {
          "name": "callback",
          "type": "BlobCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "quality",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/toBlob)"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "toDataURL",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "quality",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "string",
      "doc": "Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element."
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "transferControlToOffscreen",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "OffscreenCanvas",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen)"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLCanvasElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLCollectionBase": [
    {
      "interface": "HTMLCollectionBase",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Sets or retrieves the number of objects in a collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCollection/length)"
    },
    {
      "interface": "HTMLCollectionBase",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Element",
      "doc": "Retrieves an object from various collections.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCollection/item)"
    }
  ],
  "HTMLCollection": [
    {
      "interface": "HTMLCollection",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Element",
      "doc": "Retrieves a select object or an object from an options collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCollection/namedItem)"
    }
  ],
  "HTMLCollectionOf": [
    {
      "interface": "HTMLCollectionOf",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "T"
    },
    {
      "interface": "HTMLCollectionOf",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "T"
    }
  ],
  "HTMLDListElement": [
    {
      "interface": "HTMLDListElement",
      "kind": "property",
      "name": "compact",
      "type": "boolean"
    },
    {
      "interface": "HTMLDListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLDataElement": [
    {
      "interface": "HTMLDataElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDataElement/value)"
    },
    {
      "interface": "HTMLDataElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDataElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDataElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDataElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLDataListElement": [
    {
      "interface": "HTMLDataListElement",
      "kind": "property",
      "name": "options",
      "type": "HTMLCollectionOf<HTMLOptionElement>",
      "doc": "Returns an HTMLCollection of the option elements of the datalist element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDataListElement/options)"
    },
    {
      "interface": "HTMLDataListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDataListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDataListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDataListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLDetailsElement": [
    {
      "interface": "HTMLDetailsElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/name)"
    },
    {
      "interface": "HTMLDetailsElement",
      "kind": "property",
      "name": "open",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/open)"
    },
    {
      "interface": "HTMLDetailsElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDetailsElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDetailsElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDetailsElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLDialogElement": [
    {
      "interface": "HTMLDialogElement",
      "kind": "property",
      "name": "open",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/open)"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "property",
      "name": "returnValue",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/returnValue)"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "method",
      "name": "close",
      "parameters": [
        {
          "name": "returnValue",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Closes the dialog element.\n\nThe argument, if provided, provides a return value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close)"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "method",
      "name": "show",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Displays the dialog element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/show)"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "method",
      "name": "showModal",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/showModal)"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDialogElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLDirectoryElement": [
    {
      "interface": "HTMLDirectoryElement",
      "kind": "property",
      "name": "compact",
      "type": "boolean"
    },
    {
      "interface": "HTMLDirectoryElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDirectoryElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDirectoryElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDirectoryElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLDivElement": [
    {
      "interface": "HTMLDivElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLDivElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDivElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDivElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDivElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLDocument": [
    {
      "interface": "HTMLDocument",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDocument, ev: DocumentEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDocument",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDocument",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLDocument, ev: DocumentEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLDocument",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLElement": [
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "accessKey",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKey)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "accessKeyLabel",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKeyLabel)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "autocapitalize",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autocapitalize)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "dir",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dir)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "draggable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/draggable)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "hidden",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidden)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "inert",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inert)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "innerText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/innerText)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "lang",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/lang)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "offsetHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetHeight)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "offsetLeft",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetLeft)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "offsetParent",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetParent)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "offsetTop",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetTop)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "offsetWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetWidth)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "outerText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/outerText)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "popover",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/popover)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "spellcheck",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/spellcheck)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "title",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/title)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "translate",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/translate)"
    },
    {
      "interface": "HTMLElement",
      "kind": "property",
      "name": "writingSuggestions",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/writingSuggestions)"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "attachInternals",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ElementInternals",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attachInternals)"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "click",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/click)"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "hidePopover",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidePopover)"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "showPopover",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/showPopover)"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "togglePopover",
      "parameters": [
        {
          "name": "options",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/togglePopover)"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLEmbedElement": [
    {
      "interface": "HTMLEmbedElement",
      "kind": "property",
      "name": "align",
      "type": "string"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "property",
      "name": "height",
      "type": "string",
      "doc": "Sets or retrieves the height of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/height)"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object."
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "Sets or retrieves a URL to be loaded by the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/src)"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/type)"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "Sets or retrieves the width of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/width)"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "method",
      "name": "getSVGDocument",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Document",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/getSVGDocument)"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLEmbedElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLFieldSetElement": [
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/disabled)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "elements",
      "type": "HTMLCollection",
      "doc": "Returns an HTMLCollection of the form controls in the element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/elements)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/form)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/name)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Returns the string \"fieldset\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/type)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/validationMessage)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "Returns a  ValidityState object that represents the validity states of an element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/validity)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/willValidate)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether a form will validate when it is submitted, without having to submit it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/checkValidity)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/reportValidity)"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "method",
      "name": "setCustomValidity",
      "parameters": [
        {
          "name": "error",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Sets a custom error message that is displayed when a form is submitted."
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFieldSetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLFontElement": [
    {
      "interface": "HTMLFontElement",
      "kind": "property",
      "name": "color",
      "type": "string"
    },
    {
      "interface": "HTMLFontElement",
      "kind": "property",
      "name": "face",
      "type": "string",
      "doc": "Sets or retrieves the current typeface family."
    },
    {
      "interface": "HTMLFontElement",
      "kind": "property",
      "name": "size",
      "type": "string"
    },
    {
      "interface": "HTMLFontElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFontElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFontElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFontElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLFormControlsCollection": [
    {
      "interface": "HTMLFormControlsCollection",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Element | RadioNodeList",
      "doc": "Returns the item with ID or name name from the collection.\n\nIf there are multiple matching items, then a RadioNodeList object containing all those elements is returned.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormControlsCollection/namedItem)"
    }
  ],
  "HTMLFormElement": [
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "acceptCharset",
      "type": "string",
      "doc": "Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/acceptCharset)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "action",
      "type": "string",
      "doc": "Sets or retrieves the URL to which the form content is sent for processing.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/action)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "autocomplete",
      "type": "AutoFillBase",
      "doc": "Specifies whether autocomplete is applied to an editable text field.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/autocomplete)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "elements",
      "type": "HTMLFormControlsCollection",
      "doc": "Retrieves a collection, in source order, of all controls in a given form.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/elements)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "encoding",
      "type": "string",
      "doc": "Sets or retrieves the MIME encoding for the form.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/encoding)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "enctype",
      "type": "string",
      "doc": "Sets or retrieves the encoding type for the form.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/enctype)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Sets or retrieves the number of objects in a collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/length)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "method",
      "type": "string",
      "doc": "Sets or retrieves how to send the form data to the server.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/method)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/name)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "noValidate",
      "type": "boolean",
      "doc": "Designates a form that is not validated when submitted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/noValidate)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "rel",
      "type": "string"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "property",
      "name": "target",
      "type": "string",
      "doc": "Sets or retrieves the window or frame at which to target content.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/target)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether a form will validate when it is submitted, without having to submit it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/checkValidity)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reportValidity)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "requestSubmit",
      "parameters": [
        {
          "name": "submitter",
          "type": "HTMLElement",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/requestSubmit)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Fires when the user resets a form.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "submit",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Fires when a FORM is about to be submitted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit)"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFormElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLFrameElement": [
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "contentDocument",
      "type": "Document",
      "doc": "Retrieves the document object of the page or frame."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "contentWindow",
      "type": "Window",
      "doc": "Retrieves the object of the specified."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "frameBorder",
      "type": "string",
      "doc": "Sets or retrieves whether to display a border for the frame."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "longDesc",
      "type": "string",
      "doc": "Sets or retrieves a URI to a long description of the object."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "marginHeight",
      "type": "string",
      "doc": "Sets or retrieves the top and bottom margin heights before displaying the text in a frame."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "marginWidth",
      "type": "string",
      "doc": "Sets or retrieves the left and right margin widths before displaying the text in a frame."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the frame name."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "noResize",
      "type": "boolean",
      "doc": "Sets or retrieves whether the user can resize the frame."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "scrolling",
      "type": "string",
      "doc": "Sets or retrieves whether the frame can be scrolled."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "Sets or retrieves a URL to be loaded by the object."
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFrameElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLFrameSetElement": [
    {
      "interface": "HTMLFrameSetElement",
      "kind": "property",
      "name": "cols",
      "type": "string",
      "doc": "Sets or retrieves the frame widths of the object."
    },
    {
      "interface": "HTMLFrameSetElement",
      "kind": "property",
      "name": "rows",
      "type": "string",
      "doc": "Sets or retrieves the frame heights of the object."
    },
    {
      "interface": "HTMLFrameSetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFrameSetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFrameSetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLFrameSetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLHRElement": [
    {
      "interface": "HTMLHRElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLHRElement",
      "kind": "property",
      "name": "color",
      "type": "string"
    },
    {
      "interface": "HTMLHRElement",
      "kind": "property",
      "name": "noShade",
      "type": "boolean",
      "doc": "Sets or retrieves whether the horizontal rule is drawn with 3-D shading."
    },
    {
      "interface": "HTMLHRElement",
      "kind": "property",
      "name": "size",
      "type": "string"
    },
    {
      "interface": "HTMLHRElement",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "Sets or retrieves the width of the object."
    },
    {
      "interface": "HTMLHRElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHRElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHRElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHRElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLHeadElement": [
    {
      "interface": "HTMLHeadElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHeadElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHeadElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHeadElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLHeadingElement": [
    {
      "interface": "HTMLHeadingElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves a value that indicates the table alignment."
    },
    {
      "interface": "HTMLHeadingElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHeadingElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHeadingElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHeadingElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLHtmlElement": [
    {
      "interface": "HTMLHtmlElement",
      "kind": "property",
      "name": "version",
      "type": "string",
      "doc": "Sets or retrieves the DTD version that governs the current document."
    },
    {
      "interface": "HTMLHtmlElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHtmlElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHtmlElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLHtmlElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLHyperlinkElementUtils": [
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "hash",
      "type": "string",
      "doc": "Returns the hyperlink's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to change the URL's fragment (ignores leading \"#\").\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/hash)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "host",
      "type": "string",
      "doc": "Returns the hyperlink's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to change the URL's host and port.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/host)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "hostname",
      "type": "string",
      "doc": "Returns the hyperlink's URL's host.\n\nCan be set, to change the URL's host.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/hostname)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "href",
      "type": "string",
      "doc": "Returns the hyperlink's URL.\n\nCan be set, to change the URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/href)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "origin",
      "type": "string",
      "doc": "Returns the hyperlink's URL's origin.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/origin)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "password",
      "type": "string",
      "doc": "Returns the hyperlink's URL's password.\n\nCan be set, to change the URL's password.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/password)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "pathname",
      "type": "string",
      "doc": "Returns the hyperlink's URL's path.\n\nCan be set, to change the URL's path.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/pathname)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "port",
      "type": "string",
      "doc": "Returns the hyperlink's URL's port.\n\nCan be set, to change the URL's port.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/port)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "protocol",
      "type": "string",
      "doc": "Returns the hyperlink's URL's scheme.\n\nCan be set, to change the URL's scheme.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/protocol)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "search",
      "type": "string",
      "doc": "Returns the hyperlink's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to change the URL's query (ignores leading \"?\").\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/search)"
    },
    {
      "interface": "HTMLHyperlinkElementUtils",
      "kind": "property",
      "name": "username",
      "type": "string",
      "doc": "Returns the hyperlink's URL's username.\n\nCan be set, to change the URL's username.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/username)"
    }
  ],
  "HTMLIFrameElement": [
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "allow",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/allow)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "allowFullscreen",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/allowFullscreen)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "contentDocument",
      "type": "Document",
      "doc": "Retrieves the document object of the page or frame.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/contentDocument)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "contentWindow",
      "type": "Window",
      "doc": "Retrieves the object of the specified.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/contentWindow)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "frameBorder",
      "type": "string",
      "doc": "Sets or retrieves whether to display a border for the frame."
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "height",
      "type": "string",
      "doc": "Sets or retrieves the height of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/height)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "loading",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/loading)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "longDesc",
      "type": "string",
      "doc": "Sets or retrieves a URI to a long description of the object."
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "marginHeight",
      "type": "string",
      "doc": "Sets or retrieves the top and bottom margin heights before displaying the text in a frame."
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "marginWidth",
      "type": "string",
      "doc": "Sets or retrieves the left and right margin widths before displaying the text in a frame."
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the frame name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/name)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "ReferrerPolicy",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/referrerPolicy)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "scrolling",
      "type": "string",
      "doc": "Sets or retrieves whether the frame can be scrolled."
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "Sets or retrieves a URL to be loaded by the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/src)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "srcdoc",
      "type": "string",
      "doc": "Sets or retrives the content of the page that is to contain.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/srcdoc)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "Sets or retrieves the width of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/width)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "method",
      "name": "getSVGDocument",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Document",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIframeElement/getSVGDocument)"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLIFrameElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLImageElement": [
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "alt",
      "type": "string",
      "doc": "Sets or retrieves a text alternative to the graphic.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/alt)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "border",
      "type": "string",
      "doc": "Specifies the properties of a border drawn around an object."
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "complete",
      "type": "boolean",
      "doc": "Retrieves whether the object is fully loaded.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/complete)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "crossOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/crossOrigin)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "currentSrc",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/currentSrc)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "decoding",
      "type": "\"auto\" | \"async\" | \"sync\"",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/decoding)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "fetchPriority",
      "type": "\"auto\" | \"high\" | \"low\"",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/fetchPriority)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "Sets or retrieves the height of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/height)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "hspace",
      "type": "number",
      "doc": "Sets or retrieves the width of the border to draw around the object."
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "isMap",
      "type": "boolean",
      "doc": "Sets or retrieves whether the image is a server-side image map.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/isMap)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "loading",
      "type": "\"eager\" | \"lazy\"",
      "doc": "Sets or retrieves the policy for loading image elements that are outside the viewport.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/loading)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "longDesc",
      "type": "string",
      "doc": "Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object."
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "lowsrc",
      "type": "string"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object."
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "naturalHeight",
      "type": "number",
      "doc": "The original height of the image resource before sizing.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/naturalHeight)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "naturalWidth",
      "type": "number",
      "doc": "The original width of the image resource before sizing.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/naturalWidth)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/referrerPolicy)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "sizes",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/sizes)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "The address or URL of the a media resource that is to be considered.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/src)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "srcset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/srcset)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "useMap",
      "type": "string",
      "doc": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/useMap)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "vspace",
      "type": "number",
      "doc": "Sets or retrieves the vertical margin for the object."
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Sets or retrieves the width of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/width)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "x",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/x)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "property",
      "name": "y",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/y)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "method",
      "name": "decode",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/decode)"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLImageElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLInputElement": [
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "accept",
      "type": "string",
      "doc": "Sets or retrieves a comma-separated list of content types.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/accept)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "alt",
      "type": "string",
      "doc": "Sets or retrieves a text alternative to the graphic.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/alt)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "autocomplete",
      "type": "AutoFill",
      "doc": "Specifies whether autocomplete is applied to an editable text field.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/autocomplete)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "capture",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/capture)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "checked",
      "type": "boolean",
      "doc": "Sets or retrieves the state of the check box or radio button.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/checked)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "defaultChecked",
      "type": "boolean",
      "doc": "Sets or retrieves the state of the check box or radio button.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/defaultChecked)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "defaultValue",
      "type": "string",
      "doc": "Sets or retrieves the initial contents of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/defaultValue)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "dirName",
      "type": "string"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/disabled)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "files",
      "type": "FileList",
      "doc": "Returns a FileList object on a file type input object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/files)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/form)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "formAction",
      "type": "string",
      "doc": "Overrides the action attribute (where the data on a form is sent) on the parent form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formAction)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "formEnctype",
      "type": "string",
      "doc": "Used to override the encoding (formEnctype attribute) specified on the form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formEnctype)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "formMethod",
      "type": "string",
      "doc": "Overrides the submit method attribute previously specified on a form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formMethod)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "formNoValidate",
      "type": "boolean",
      "doc": "Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \"save draft\"-type submit option.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formNoValidate)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "formTarget",
      "type": "string",
      "doc": "Overrides the target attribute on a form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formTarget)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "Sets or retrieves the height of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/height)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "indeterminate",
      "type": "boolean",
      "doc": "When set, overrides the rendering of checkbox controls so that the current value is not visible.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/indeterminate)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "labels",
      "type": "NodeListOf<HTMLLabelElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/labels)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "list",
      "type": "HTMLDataListElement",
      "doc": "Specifies the ID of a pre-defined datalist of options for an input element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/list)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "max",
      "type": "string",
      "doc": "Defines the maximum acceptable value for an input element with type=\"number\".When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/max)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "maxLength",
      "type": "number",
      "doc": "Sets or retrieves the maximum number of characters that the user can enter in a text control.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/maxLength)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "min",
      "type": "string",
      "doc": "Defines the minimum acceptable value for an input element with type=\"number\". When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/min)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "minLength",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/minLength)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "multiple",
      "type": "boolean",
      "doc": "Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/multiple)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/name)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "pattern",
      "type": "string",
      "doc": "Gets or sets a string containing a regular expression that the user's input must match.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/pattern)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "placeholder",
      "type": "string",
      "doc": "Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/placeholder)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "readOnly",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/readOnly)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "required",
      "type": "boolean",
      "doc": "When present, marks an element that can't be submitted without a value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/required)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "selectionDirection",
      "type": "\"none\" | \"forward\" | \"backward\"",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/selectionDirection)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "selectionEnd",
      "type": "number",
      "doc": "Gets or sets the end position or offset of a text selection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/selectionEnd)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "selectionStart",
      "type": "number",
      "doc": "Gets or sets the starting position or offset of a text selection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/selectionStart)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/size)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "The address or URL of the a media resource that is to be considered.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/src)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "step",
      "type": "string",
      "doc": "Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/step)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Returns the content type of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/type)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "useMap",
      "type": "string",
      "doc": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map."
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/validationMessage)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "Returns a  ValidityState object that represents the validity states of an element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/validity)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Returns the value of the data at the cursor's current position.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/value)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "valueAsDate",
      "type": "Date",
      "doc": "Returns a Date object representing the form control's value, if applicable; otherwise, returns null. Can be set, to change the value. Throws an \"InvalidStateError\" DOMException if the control isn't date- or time-based.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/valueAsDate)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "valueAsNumber",
      "type": "number",
      "doc": "Returns the input field value as a number.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/valueAsNumber)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "webkitEntries",
      "type": "readonly FileSystemEntry[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/webkitEntries)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "webkitdirectory",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/webkitdirectory)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Sets or retrieves the width of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/width)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/willValidate)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether a form will validate when it is submitted, without having to submit it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/checkValidity)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/reportValidity)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "select",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Makes the selection equal to the current object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "setCustomValidity",
      "parameters": [
        {
          "name": "error",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Sets a custom error message that is displayed when a form is submitted."
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "setRangeText",
      "parameters": [
        {
          "name": "replacement",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/setRangeText)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "setRangeText",
      "parameters": [
        {
          "name": "replacement",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "selectionMode",
          "type": "SelectionMode",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "void"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "setSelectionRange",
      "parameters": [
        {
          "name": "start",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "direction",
          "type": "\"none\" | \"forward\" | \"backward\"",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "Sets the start and end positions of a selection in a text field."
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "showPicker",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/showPicker)"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "stepDown",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Decrements a range input control's value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control's step value multiplied by the parameter's value."
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "stepUp",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Increments a range input control's value by the value given by the Step attribute. If the optional parameter is used, will increment the input control's value by that value."
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLInputElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLLIElement": [
    {
      "interface": "HTMLLIElement",
      "kind": "property",
      "name": "type",
      "type": "string"
    },
    {
      "interface": "HTMLLIElement",
      "kind": "property",
      "name": "value",
      "type": "number",
      "doc": "Sets or retrieves the value of a list item.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLIElement/value)"
    },
    {
      "interface": "HTMLLIElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLIElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLIElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLIElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLLabelElement": [
    {
      "interface": "HTMLLabelElement",
      "kind": "property",
      "name": "control",
      "type": "HTMLElement",
      "doc": "Returns the form control that is associated with this element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLabelElement/control)"
    },
    {
      "interface": "HTMLLabelElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLabelElement/form)"
    },
    {
      "interface": "HTMLLabelElement",
      "kind": "property",
      "name": "htmlFor",
      "type": "string",
      "doc": "Sets or retrieves the object to which the given label object is assigned.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLabelElement/htmlFor)"
    },
    {
      "interface": "HTMLLabelElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLabelElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLabelElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLabelElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLLegendElement": [
    {
      "interface": "HTMLLegendElement",
      "kind": "property",
      "name": "align",
      "type": "string"
    },
    {
      "interface": "HTMLLegendElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLegendElement/form)"
    },
    {
      "interface": "HTMLLegendElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLegendElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLegendElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLegendElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLLinkElement": [
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "as",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/as)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "charset",
      "type": "string",
      "doc": "Sets or retrieves the character set used to encode the object."
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "crossOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/crossOrigin)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/disabled)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "fetchPriority",
      "type": "\"auto\" | \"high\" | \"low\"",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/fetchPriority)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "href",
      "type": "string",
      "doc": "Sets or retrieves a destination URL or an anchor point.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/href)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "hreflang",
      "type": "string",
      "doc": "Sets or retrieves the language code of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/hreflang)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "imageSizes",
      "type": "string"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "imageSrcset",
      "type": "string"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "integrity",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/integrity)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "media",
      "type": "string",
      "doc": "Sets or retrieves the media type.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/media)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/referrerPolicy)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "rel",
      "type": "string",
      "doc": "Sets or retrieves the relationship between the object and the destination of the link.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/rel)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "rev",
      "type": "string",
      "doc": "Sets or retrieves the relationship between the object and the destination of the link."
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "target",
      "type": "string",
      "doc": "Sets or retrieves the window or frame at which to target content."
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Sets or retrieves the MIME type of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/type)"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLLinkElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLMapElement": [
    {
      "interface": "HTMLMapElement",
      "kind": "property",
      "name": "areas",
      "type": "HTMLCollection",
      "doc": "Retrieves a collection of the area objects defined for the given map object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMapElement/areas)"
    },
    {
      "interface": "HTMLMapElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMapElement/name)"
    },
    {
      "interface": "HTMLMapElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMapElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMapElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMapElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLMarqueeElement": [
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "behavior",
      "type": "string"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "bgColor",
      "type": "string"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "direction",
      "type": "string"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "height",
      "type": "string"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "hspace",
      "type": "number"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "loop",
      "type": "number"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "scrollAmount",
      "type": "number"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "scrollDelay",
      "type": "number"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "trueSpeed",
      "type": "boolean"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "vspace",
      "type": "number"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "property",
      "name": "width",
      "type": "string"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "method",
      "name": "start",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "method",
      "name": "stop",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMarqueeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLMediaElementEventMap": [
    {
      "interface": "HTMLMediaElementEventMap",
      "kind": "property",
      "name": "\"encrypted\"",
      "type": "MediaEncryptedEvent"
    },
    {
      "interface": "HTMLMediaElementEventMap",
      "kind": "property",
      "name": "\"waitingforkey\"",
      "type": "Event"
    }
  ],
  "HTMLMediaElement": [
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "autoplay",
      "type": "boolean",
      "doc": "Gets or sets a value that indicates whether to start playing the media automatically.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/autoplay)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "buffered",
      "type": "TimeRanges",
      "doc": "Gets a collection of buffered time ranges.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/buffered)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "controls",
      "type": "boolean",
      "doc": "Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/controls)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "crossOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/crossOrigin)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "currentSrc",
      "type": "string",
      "doc": "Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/currentSrc)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "currentTime",
      "type": "number",
      "doc": "Gets or sets the current playback position, in seconds.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/currentTime)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "defaultMuted",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/defaultMuted)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "defaultPlaybackRate",
      "type": "number",
      "doc": "Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/defaultPlaybackRate)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "disableRemotePlayback",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/disableRemotePlayback)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/duration)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "ended",
      "type": "boolean",
      "doc": "Gets information about whether the playback has ended or not.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "error",
      "type": "MediaError",
      "doc": "Returns an object representing the current error state of the audio or video element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/error)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "loop",
      "type": "boolean",
      "doc": "Gets or sets a flag to specify whether playback should restart after it completes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loop)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "mediaKeys",
      "type": "MediaKeys",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/mediaKeys)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "muted",
      "type": "boolean",
      "doc": "Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/muted)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "networkState",
      "type": "number",
      "doc": "Gets the current network activity for the element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/networkState)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "event",
      "name": "onencrypted",
      "type": "(this: HTMLMediaElement, ev: MediaEncryptedEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/encrypted_event)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "event",
      "name": "onwaitingforkey",
      "type": "(this: HTMLMediaElement, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waitingforkey_event)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "paused",
      "type": "boolean",
      "doc": "Gets a flag that specifies whether playback is paused.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/paused)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "playbackRate",
      "type": "number",
      "doc": "Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playbackRate)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "played",
      "type": "TimeRanges",
      "doc": "Gets TimeRanges for the current media resource that has been played.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/played)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "preload",
      "type": "\"\" | \"auto\" | \"none\" | \"metadata\"",
      "doc": "Gets or sets a value indicating what data should be preloaded, if any.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/preload)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "preservesPitch",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/preservesPitch)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "readyState",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/readyState)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "remote",
      "type": "RemotePlayback",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/remote)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "seekable",
      "type": "TimeRanges",
      "doc": "Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seekable)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "seeking",
      "type": "boolean",
      "doc": "Gets a flag that indicates whether the client is currently moving to a new playback position in the media resource.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "sinkId",
      "type": "string",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/sinkId)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "The address or URL of the a media resource that is to be considered.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/src)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "srcObject",
      "type": "MediaProvider",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/srcObject)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "textTracks",
      "type": "TextTrackList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/textTracks)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "volume",
      "type": "number",
      "doc": "Gets or sets the volume level for audio portions of the media element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volume)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "addTextTrack",
      "parameters": [
        {
          "name": "kind",
          "type": "TextTrackKind",
          "optional": false,
          "rest": false
        },
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "language",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "TextTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/addTextTrack)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "canPlayType",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CanPlayTypeResult",
      "doc": "Returns a string that specifies whether the client can play a given media resource type.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canPlayType)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "fastSeek",
      "parameters": [
        {
          "name": "time",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/fastSeek)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "load",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Resets the audio or video object and loads a new media resource.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/load)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "pause",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Pauses the current playback and sets paused to TRUE.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "play",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "Loads and starts playback of a media resource.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "setMediaKeys",
      "parameters": [
        {
          "name": "mediaKeys",
          "type": "MediaKeys",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/setMediaKeys)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "setSinkId",
      "parameters": [
        {
          "name": "sinkId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/setSinkId)"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "NETWORK_EMPTY",
      "type": "0"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "NETWORK_IDLE",
      "type": "1"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "NETWORK_LOADING",
      "type": "2"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "NETWORK_NO_SOURCE",
      "type": "3"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "HAVE_NOTHING",
      "type": "0"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "HAVE_METADATA",
      "type": "1"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "HAVE_CURRENT_DATA",
      "type": "2"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "HAVE_FUTURE_DATA",
      "type": "3"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "property",
      "name": "HAVE_ENOUGH_DATA",
      "type": "4"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMediaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLMenuElement": [
    {
      "interface": "HTMLMenuElement",
      "kind": "property",
      "name": "compact",
      "type": "boolean"
    },
    {
      "interface": "HTMLMenuElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMenuElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMenuElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMenuElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLMetaElement": [
    {
      "interface": "HTMLMetaElement",
      "kind": "property",
      "name": "content",
      "type": "string",
      "doc": "Gets or sets meta-information to associate with httpEquiv or name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/content)"
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "property",
      "name": "httpEquiv",
      "type": "string",
      "doc": "Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/httpEquiv)"
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "property",
      "name": "media",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/media)"
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the value specified in the content attribute of the meta object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/name)"
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "property",
      "name": "scheme",
      "type": "string",
      "doc": "Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object."
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMetaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLMeterElement": [
    {
      "interface": "HTMLMeterElement",
      "kind": "property",
      "name": "high",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/high)"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "property",
      "name": "labels",
      "type": "NodeListOf<HTMLLabelElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/labels)"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "property",
      "name": "low",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/low)"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "property",
      "name": "max",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/max)"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "property",
      "name": "min",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/min)"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "property",
      "name": "optimum",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/optimum)"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "property",
      "name": "value",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/value)"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLMeterElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLModElement": [
    {
      "interface": "HTMLModElement",
      "kind": "property",
      "name": "cite",
      "type": "string",
      "doc": "Sets or retrieves reference information about the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLModElement/cite)"
    },
    {
      "interface": "HTMLModElement",
      "kind": "property",
      "name": "dateTime",
      "type": "string",
      "doc": "Sets or retrieves the date and time of a modification to the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLModElement/dateTime)"
    },
    {
      "interface": "HTMLModElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLModElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLModElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLModElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLModElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLModElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLOListElement": [
    {
      "interface": "HTMLOListElement",
      "kind": "property",
      "name": "compact",
      "type": "boolean"
    },
    {
      "interface": "HTMLOListElement",
      "kind": "property",
      "name": "reversed",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOListElement/reversed)"
    },
    {
      "interface": "HTMLOListElement",
      "kind": "property",
      "name": "start",
      "type": "number",
      "doc": "The starting number.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOListElement/start)"
    },
    {
      "interface": "HTMLOListElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOListElement/type)"
    },
    {
      "interface": "HTMLOListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLObjectElement": [
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "align",
      "type": "string"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "archive",
      "type": "string",
      "doc": "Sets or retrieves a character string that can be used to implement your own archive functionality for the object."
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "border",
      "type": "string"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "code",
      "type": "string",
      "doc": "Sets or retrieves the URL of the file containing the compiled Java class."
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "codeBase",
      "type": "string",
      "doc": "Sets or retrieves the URL of the component."
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "codeType",
      "type": "string",
      "doc": "Sets or retrieves the Internet media type for the code associated with the object."
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "contentDocument",
      "type": "Document",
      "doc": "Retrieves the document object of the page or frame.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/contentDocument)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "contentWindow",
      "type": "Window",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/contentWindow)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "data",
      "type": "string",
      "doc": "Sets or retrieves the URL that references the data of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/data)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "declare",
      "type": "boolean"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/form)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "height",
      "type": "string",
      "doc": "Sets or retrieves the height of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/height)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "hspace",
      "type": "number"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/name)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "standby",
      "type": "string",
      "doc": "Sets or retrieves a message to be displayed while an object is loading."
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Sets or retrieves the MIME type of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/type)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "useMap",
      "type": "string",
      "doc": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map."
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/validationMessage)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "Returns a  ValidityState object that represents the validity states of an element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/validity)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "vspace",
      "type": "number"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "Sets or retrieves the width of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/width)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/willValidate)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether a form will validate when it is submitted, without having to submit it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/checkValidity)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "getSVGDocument",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Document",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/getSVGDocument)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/reportValidity)"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "setCustomValidity",
      "parameters": [
        {
          "name": "error",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Sets a custom error message that is displayed when a form is submitted."
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLObjectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLOptGroupElement": [
    {
      "interface": "HTMLOptGroupElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement/disabled)"
    },
    {
      "interface": "HTMLOptGroupElement",
      "kind": "property",
      "name": "label",
      "type": "string",
      "doc": "Sets or retrieves a value that you can use to implement your own label functionality for the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement/label)"
    },
    {
      "interface": "HTMLOptGroupElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOptGroupElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOptGroupElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOptGroupElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLOptionElement": [
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "defaultSelected",
      "type": "boolean",
      "doc": "Sets or retrieves the status of an option.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/defaultSelected)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/disabled)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/form)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "index",
      "type": "number",
      "doc": "Sets or retrieves the ordinal position of an option in a list box.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/index)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "label",
      "type": "string",
      "doc": "Sets or retrieves a value that you can use to implement your own label functionality for the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/label)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "selected",
      "type": "boolean",
      "doc": "Sets or retrieves whether the option in the list box is the default item.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/selected)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "text",
      "type": "string",
      "doc": "Sets or retrieves the text string specified by the option tag.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/text)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Sets or retrieves the value which is returned to the server when the form control is submitted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/value)"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOptionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLOptionsCollection": [
    {
      "interface": "HTMLOptionsCollection",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of elements in the collection.\n\nWhen set to a smaller number, truncates the number of option elements in the corresponding container.\n\nWhen set to a greater number, adds new blank option elements to that container.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/length)"
    },
    {
      "interface": "HTMLOptionsCollection",
      "kind": "property",
      "name": "selectedIndex",
      "type": "number",
      "doc": "Returns the index of the first selected item, if any, or −1 if there is no selected item.\n\nCan be set, to change the selection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/selectedIndex)"
    },
    {
      "interface": "HTMLOptionsCollection",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "element",
          "type": "HTMLOptionElement | HTMLOptGroupElement",
          "optional": false,
          "rest": false
        },
        {
          "name": "before",
          "type": "number | HTMLElement",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Inserts element before the node given by before.\n\nThe before argument can be a number, in which case element is inserted before the item with that number, or an element from the collection, in which case element is inserted before that element.\n\nIf before is omitted, null, or a number out of range, then element will be added at the end of the list.\n\nThis method will throw a \"HierarchyRequestError\" DOMException if element is an ancestor of the element into which it is to be inserted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/add)"
    },
    {
      "interface": "HTMLOptionsCollection",
      "kind": "method",
      "name": "remove",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the item with index index from the collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/remove)"
    }
  ],
  "HTMLOrSVGElement": [
    {
      "interface": "HTMLOrSVGElement",
      "kind": "property",
      "name": "autofocus",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autofocus)"
    },
    {
      "interface": "HTMLOrSVGElement",
      "kind": "property",
      "name": "dataset",
      "type": "DOMStringMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dataset)"
    },
    {
      "interface": "HTMLOrSVGElement",
      "kind": "property",
      "name": "nonce",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/nonce)"
    },
    {
      "interface": "HTMLOrSVGElement",
      "kind": "property",
      "name": "tabIndex",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/tabIndex)"
    },
    {
      "interface": "HTMLOrSVGElement",
      "kind": "method",
      "name": "blur",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/blur)"
    },
    {
      "interface": "HTMLOrSVGElement",
      "kind": "method",
      "name": "focus",
      "parameters": [
        {
          "name": "options",
          "type": "FocusOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/focus)"
    }
  ],
  "HTMLOutputElement": [
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "defaultValue",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/defaultValue)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/form)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "labels",
      "type": "NodeListOf<HTMLLabelElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/labels)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/name)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Returns the string \"output\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/type)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/validationMessage)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/validity)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Returns the element's current value.\n\nCan be set, to change the value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/value)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/willValidate)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/checkValidity)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/reportValidity)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "method",
      "name": "setCustomValidity",
      "parameters": [
        {
          "name": "error",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/setCustomValidity)"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLOutputElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLParagraphElement": [
    {
      "interface": "HTMLParagraphElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLParagraphElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLParagraphElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLParagraphElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLParagraphElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLParamElement": [
    {
      "interface": "HTMLParamElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of an input parameter for an element."
    },
    {
      "interface": "HTMLParamElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Sets or retrieves the content type of the resource designated by the value attribute."
    },
    {
      "interface": "HTMLParamElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Sets or retrieves the value of an input parameter for an element."
    },
    {
      "interface": "HTMLParamElement",
      "kind": "property",
      "name": "valueType",
      "type": "string",
      "doc": "Sets or retrieves the data type of the value attribute."
    },
    {
      "interface": "HTMLParamElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLParamElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLParamElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLParamElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLPictureElement": [
    {
      "interface": "HTMLPictureElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLPictureElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLPictureElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLPictureElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLPreElement": [
    {
      "interface": "HTMLPreElement",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Sets or gets a value that you can use to implement your own width functionality for the object."
    },
    {
      "interface": "HTMLPreElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLPreElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLPreElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLPreElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLProgressElement": [
    {
      "interface": "HTMLProgressElement",
      "kind": "property",
      "name": "labels",
      "type": "NodeListOf<HTMLLabelElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/labels)"
    },
    {
      "interface": "HTMLProgressElement",
      "kind": "property",
      "name": "max",
      "type": "number",
      "doc": "Defines the maximum, or \"done\" value for a progress element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/max)"
    },
    {
      "interface": "HTMLProgressElement",
      "kind": "property",
      "name": "position",
      "type": "number",
      "doc": "Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/position)"
    },
    {
      "interface": "HTMLProgressElement",
      "kind": "property",
      "name": "value",
      "type": "number",
      "doc": "Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/value)"
    },
    {
      "interface": "HTMLProgressElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLProgressElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLProgressElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLProgressElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLQuoteElement": [
    {
      "interface": "HTMLQuoteElement",
      "kind": "property",
      "name": "cite",
      "type": "string",
      "doc": "Sets or retrieves reference information about the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLQuoteElement/cite)"
    },
    {
      "interface": "HTMLQuoteElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLQuoteElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLQuoteElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLQuoteElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLScriptElement": [
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "async",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/async)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "charset",
      "type": "string",
      "doc": "Sets or retrieves the character set used to encode the object."
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "crossOrigin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/crossOrigin)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "defer",
      "type": "boolean",
      "doc": "Sets or retrieves the status of the script.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/defer)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "event",
      "type": "string",
      "doc": "Sets or retrieves the event for which the script is written."
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "fetchPriority",
      "type": "\"auto\" | \"high\" | \"low\"",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/fetchPriority)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "htmlFor",
      "type": "string",
      "doc": "Sets or retrieves the object that is bound to the event script."
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "integrity",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/integrity)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "noModule",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/noModule)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/referrerPolicy)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "Retrieves the URL to an external file that contains the source code or data.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/src)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "text",
      "type": "string",
      "doc": "Retrieves or sets the text of the object as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/text)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Sets or retrieves the MIME type for the associated scripting engine.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/type)"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLScriptElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLSelectElement": [
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "autocomplete",
      "type": "AutoFill",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/autocomplete)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/disabled)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/form)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "labels",
      "type": "NodeListOf<HTMLLabelElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/labels)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Sets or retrieves the number of objects in a collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/length)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "multiple",
      "type": "boolean",
      "doc": "Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/multiple)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/name)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "options",
      "type": "HTMLOptionsCollection",
      "doc": "Returns an HTMLOptionsCollection of the list of options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/options)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "required",
      "type": "boolean",
      "doc": "When present, marks an element that can't be submitted without a value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/required)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "selectedIndex",
      "type": "number",
      "doc": "Sets or retrieves the index of the selected option in a select object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/selectedIndex)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "selectedOptions",
      "type": "HTMLCollectionOf<HTMLOptionElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/selectedOptions)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "Sets or retrieves the number of rows in the list box.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/size)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "type",
      "type": "\"select-one\" | \"select-multiple\"",
      "doc": "Retrieves the type of select control based on the value of the MULTIPLE attribute.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/type)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/validationMessage)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "Returns a  ValidityState object that represents the validity states of an element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/validity)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Sets or retrieves the value which is returned to the server when the form control is submitted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/value)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/willValidate)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "element",
          "type": "HTMLOptionElement | HTMLOptGroupElement",
          "optional": false,
          "rest": false
        },
        {
          "name": "before",
          "type": "number | HTMLElement",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Adds an element to the areas, controlRange, or options collection."
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether a form will validate when it is submitted, without having to submit it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/checkValidity)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLOptionElement",
      "doc": "Retrieves a select object or an object from an options collection."
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLOptionElement",
      "doc": "Retrieves a select object or an object from an options collection."
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "remove",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Removes an element from the collection."
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "remove",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/reportValidity)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "setCustomValidity",
      "parameters": [
        {
          "name": "error",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Sets a custom error message that is displayed when a form is submitted."
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "showPicker",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/showPicker)"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSelectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLSlotElement": [
    {
      "interface": "HTMLSlotElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/name)"
    },
    {
      "interface": "HTMLSlotElement",
      "kind": "method",
      "name": "assign",
      "parameters": [
        {
          "name": "nodes",
          "type": "(Element | Text)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/assign)"
    },
    {
      "interface": "HTMLSlotElement",
      "kind": "method",
      "name": "assignedElements",
      "parameters": [
        {
          "name": "options",
          "type": "AssignedNodesOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Element[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/assignedElements)"
    },
    {
      "interface": "HTMLSlotElement",
      "kind": "method",
      "name": "assignedNodes",
      "parameters": [
        {
          "name": "options",
          "type": "AssignedNodesOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Node[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/assignedNodes)"
    },
    {
      "interface": "HTMLSlotElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSlotElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSlotElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSlotElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLSourceElement": [
    {
      "interface": "HTMLSourceElement",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/height)"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "property",
      "name": "media",
      "type": "string",
      "doc": "Gets or sets the intended media type of the media source.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/media)"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "property",
      "name": "sizes",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/sizes)"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "The address or URL of the a media resource that is to be considered.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/src)"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "property",
      "name": "srcset",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/srcset)"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Gets or sets the MIME type of a media resource.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/type)"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/width)"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSourceElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLSpanElement": [
    {
      "interface": "HTMLSpanElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSpanElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSpanElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLSpanElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLStyleElement": [
    {
      "interface": "HTMLStyleElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "Enables or disables the style sheet.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLStyleElement/disabled)"
    },
    {
      "interface": "HTMLStyleElement",
      "kind": "property",
      "name": "media",
      "type": "string",
      "doc": "Sets or retrieves the media type.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLStyleElement/media)"
    },
    {
      "interface": "HTMLStyleElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Retrieves the CSS language in which the style sheet is written."
    },
    {
      "interface": "HTMLStyleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLStyleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLStyleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLStyleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableCaptionElement": [
    {
      "interface": "HTMLTableCaptionElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves the alignment of the caption or legend."
    },
    {
      "interface": "HTMLTableCaptionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableCaptionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableCaptionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableCaptionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableCellElement": [
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "abbr",
      "type": "string",
      "doc": "Sets or retrieves abbreviated text for the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/abbr)"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "axis",
      "type": "string",
      "doc": "Sets or retrieves a comma-delimited list of conceptual categories associated with the object."
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "bgColor",
      "type": "string"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "cellIndex",
      "type": "number",
      "doc": "Retrieves the position of the object in the cells collection of a row.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/cellIndex)"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "ch",
      "type": "string"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "chOff",
      "type": "string"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "colSpan",
      "type": "number",
      "doc": "Sets or retrieves the number columns in the table that the object should span.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/colSpan)"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "headers",
      "type": "string",
      "doc": "Sets or retrieves a list of header cells that provide information for the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/headers)"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "height",
      "type": "string",
      "doc": "Sets or retrieves the height of the object."
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "noWrap",
      "type": "boolean",
      "doc": "Sets or retrieves whether the browser automatically performs wordwrap."
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "rowSpan",
      "type": "number",
      "doc": "Sets or retrieves how many rows in a table the cell should span.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/rowSpan)"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "scope",
      "type": "string",
      "doc": "Sets or retrieves the group of cells in a table to which the object's information applies.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/scope)"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "vAlign",
      "type": "string"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "Sets or retrieves the width of the object."
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableCellElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableColElement": [
    {
      "interface": "HTMLTableColElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves the alignment of the object relative to the display or table."
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "property",
      "name": "ch",
      "type": "string"
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "property",
      "name": "chOff",
      "type": "string"
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "property",
      "name": "span",
      "type": "number",
      "doc": "Sets or retrieves the number of columns in the group.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableColElement/span)"
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "property",
      "name": "vAlign",
      "type": "string"
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "Sets or retrieves the width of the object."
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableColElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableDataCellElement": [
    {
      "interface": "HTMLTableDataCellElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableDataCellElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableDataCellElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableDataCellElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableElement": [
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves a value that indicates the table alignment."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "bgColor",
      "type": "string"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "border",
      "type": "string",
      "doc": "Sets or retrieves the width of the border to draw around the object."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "caption",
      "type": "HTMLTableCaptionElement",
      "doc": "Retrieves the caption object of a table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/caption)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "cellPadding",
      "type": "string",
      "doc": "Sets or retrieves the amount of space between the border of the cell and the content of the cell."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "cellSpacing",
      "type": "string",
      "doc": "Sets or retrieves the amount of space between cells in a table."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "frame",
      "type": "string",
      "doc": "Sets or retrieves the way the border frame around the table is displayed."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "rows",
      "type": "HTMLCollectionOf<HTMLTableRowElement>",
      "doc": "Sets or retrieves the number of horizontal rows contained in the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/rows)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "rules",
      "type": "string",
      "doc": "Sets or retrieves which dividing lines (inner borders) are displayed."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "summary",
      "type": "string",
      "doc": "Sets or retrieves a description and/or structure of the object."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "tBodies",
      "type": "HTMLCollectionOf<HTMLTableSectionElement>",
      "doc": "Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/tBodies)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "tFoot",
      "type": "HTMLTableSectionElement",
      "doc": "Retrieves the tFoot object of the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/tFoot)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "tHead",
      "type": "HTMLTableSectionElement",
      "doc": "Retrieves the tHead object of the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/tHead)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "property",
      "name": "width",
      "type": "string",
      "doc": "Sets or retrieves the width of the object."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "createCaption",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "HTMLTableCaptionElement",
      "doc": "Creates an empty caption element in the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createCaption)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "createTBody",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "HTMLTableSectionElement",
      "doc": "Creates an empty tBody element in the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createTBody)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "createTFoot",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "HTMLTableSectionElement",
      "doc": "Creates an empty tFoot element in the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createTFoot)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "createTHead",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "HTMLTableSectionElement",
      "doc": "Returns the tHead element object if successful, or null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createTHead)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "deleteCaption",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Deletes the caption element and its contents from the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/deleteCaption)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "deleteRow",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the specified row (tr) from the element and from the rows collection."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "deleteTFoot",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Deletes the tFoot element and its contents from the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/deleteTFoot)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "deleteTHead",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Deletes the tHead element and its contents from the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/deleteTHead)"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "insertRow",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "HTMLTableRowElement",
      "doc": "Creates a new row (tr) in the table, and adds the row to the rows collection."
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableHeaderCellElement": [
    {
      "interface": "HTMLTableHeaderCellElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableHeaderCellElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableHeaderCellElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableHeaderCellElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableRowElement": [
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves how the object is aligned with adjacent text."
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "bgColor",
      "type": "string"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "cells",
      "type": "HTMLCollectionOf<HTMLTableCellElement>",
      "doc": "Retrieves a collection of all cells in the table row.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/cells)"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "ch",
      "type": "string"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "chOff",
      "type": "string"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "rowIndex",
      "type": "number",
      "doc": "Retrieves the position of the object in the rows collection for the table.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/rowIndex)"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "sectionRowIndex",
      "type": "number",
      "doc": "Retrieves the position of the object in the collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/sectionRowIndex)"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "property",
      "name": "vAlign",
      "type": "string"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "method",
      "name": "deleteCell",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the specified cell from the table row, as well as from the cells collection."
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "method",
      "name": "insertCell",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "HTMLTableCellElement",
      "doc": "Creates a new cell in the table row, and adds the cell to the cells collection."
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableRowElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTableSectionElement": [
    {
      "interface": "HTMLTableSectionElement",
      "kind": "property",
      "name": "align",
      "type": "string",
      "doc": "Sets or retrieves a value that indicates the table alignment."
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "property",
      "name": "ch",
      "type": "string"
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "property",
      "name": "chOff",
      "type": "string"
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "property",
      "name": "rows",
      "type": "HTMLCollectionOf<HTMLTableRowElement>",
      "doc": "Sets or retrieves the number of horizontal rows contained in the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/rows)"
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "property",
      "name": "vAlign",
      "type": "string"
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "method",
      "name": "deleteRow",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the specified row (tr) from the element and from the rows collection."
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "method",
      "name": "insertRow",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "HTMLTableRowElement",
      "doc": "Creates a new row (tr) in the table, and adds the row to the rows collection."
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTableSectionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTemplateElement": [
    {
      "interface": "HTMLTemplateElement",
      "kind": "property",
      "name": "content",
      "type": "DocumentFragment",
      "doc": "Returns the template contents (a DocumentFragment).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/content)"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "property",
      "name": "shadowRootClonable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootClonable)"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "property",
      "name": "shadowRootDelegatesFocus",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootDelegatesFocus)"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "property",
      "name": "shadowRootMode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootMode)"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "property",
      "name": "shadowRootSerializable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootSerializable)"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTemplateElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTextAreaElement": [
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "autocomplete",
      "type": "AutoFill",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/autocomplete)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "cols",
      "type": "number",
      "doc": "Sets or retrieves the width of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/cols)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "defaultValue",
      "type": "string",
      "doc": "Sets or retrieves the initial contents of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/defaultValue)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "dirName",
      "type": "string"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/disabled)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "form",
      "type": "HTMLFormElement",
      "doc": "Retrieves a reference to the form that the object is embedded in.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/form)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "labels",
      "type": "NodeListOf<HTMLLabelElement>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/labels)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "maxLength",
      "type": "number",
      "doc": "Sets or retrieves the maximum number of characters that the user can enter in a text control.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/maxLength)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "minLength",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/minLength)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Sets or retrieves the name of the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/name)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "placeholder",
      "type": "string",
      "doc": "Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/placeholder)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "readOnly",
      "type": "boolean",
      "doc": "Sets or retrieves the value indicated whether the content of the object is read-only.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/readOnly)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "required",
      "type": "boolean",
      "doc": "When present, marks an element that can't be submitted without a value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/required)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "rows",
      "type": "number",
      "doc": "Sets or retrieves the number of horizontal rows contained in the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/rows)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "selectionDirection",
      "type": "\"none\" | \"forward\" | \"backward\"",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/selectionDirection)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "selectionEnd",
      "type": "number",
      "doc": "Gets or sets the end position or offset of a text selection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/selectionEnd)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "selectionStart",
      "type": "number",
      "doc": "Gets or sets the starting position or offset of a text selection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/selectionStart)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "textLength",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/textLength)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Retrieves the type of control.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/type)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "validationMessage",
      "type": "string",
      "doc": "Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \"this is a required field\". The result is that the user sees validation messages without actually submitting.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/validationMessage)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "validity",
      "type": "ValidityState",
      "doc": "Returns a  ValidityState object that represents the validity states of an element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/validity)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "Retrieves or sets the text in the entry field of the textArea element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/value)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "willValidate",
      "type": "boolean",
      "doc": "Returns whether an element will successfully validate based on forms validation rules and constraints.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/willValidate)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "property",
      "name": "wrap",
      "type": "string",
      "doc": "Sets or retrieves how to handle wordwrapping in the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/wrap)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "checkValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether a form will validate when it is submitted, without having to submit it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/checkValidity)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "reportValidity",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/reportValidity)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "select",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Highlights the input area of a form element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/select)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "setCustomValidity",
      "parameters": [
        {
          "name": "error",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Sets a custom error message that is displayed when a form is submitted."
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "setRangeText",
      "parameters": [
        {
          "name": "replacement",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/setRangeText)"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "setRangeText",
      "parameters": [
        {
          "name": "replacement",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "selectionMode",
          "type": "SelectionMode",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "void"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "setSelectionRange",
      "parameters": [
        {
          "name": "start",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "direction",
          "type": "\"none\" | \"forward\" | \"backward\"",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "Sets the start and end positions of a selection in a text field."
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTextAreaElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTimeElement": [
    {
      "interface": "HTMLTimeElement",
      "kind": "property",
      "name": "dateTime",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTimeElement/dateTime)"
    },
    {
      "interface": "HTMLTimeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTimeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTimeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTimeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTitleElement": [
    {
      "interface": "HTMLTitleElement",
      "kind": "property",
      "name": "text",
      "type": "string",
      "doc": "Retrieves or sets the text of the object as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTitleElement/text)"
    },
    {
      "interface": "HTMLTitleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTitleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTitleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTitleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLTrackElement": [
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "default",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/default)"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "kind",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/kind)"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "label",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/label)"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "readyState",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/readyState)"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "src",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/src)"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "srclang",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/srclang)"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "track",
      "type": "TextTrack",
      "doc": "Returns the TextTrack object corresponding to the text track of the track element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/track)"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "NONE",
      "type": "0"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "LOADING",
      "type": "1"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "LOADED",
      "type": "2"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "property",
      "name": "ERROR",
      "type": "3"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLTrackElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLUListElement": [
    {
      "interface": "HTMLUListElement",
      "kind": "property",
      "name": "compact",
      "type": "boolean"
    },
    {
      "interface": "HTMLUListElement",
      "kind": "property",
      "name": "type",
      "type": "string"
    },
    {
      "interface": "HTMLUListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLUListElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLUListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLUListElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLUnknownElement": [
    {
      "interface": "HTMLUnknownElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLUnknownElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLUnknownElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLUnknownElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HTMLVideoElementEventMap": [
    {
      "interface": "HTMLVideoElementEventMap",
      "kind": "property",
      "name": "\"enterpictureinpicture\"",
      "type": "PictureInPictureEvent"
    },
    {
      "interface": "HTMLVideoElementEventMap",
      "kind": "property",
      "name": "\"leavepictureinpicture\"",
      "type": "PictureInPictureEvent"
    }
  ],
  "HTMLVideoElement": [
    {
      "interface": "HTMLVideoElement",
      "kind": "property",
      "name": "disablePictureInPicture",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/disablePictureInPicture)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "Gets or sets the height of the video element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/height)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "event",
      "name": "onenterpictureinpicture",
      "type": "(this: HTMLVideoElement, ev: PictureInPictureEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "event",
      "name": "onleavepictureinpicture",
      "type": "(this: HTMLVideoElement, ev: PictureInPictureEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "property",
      "name": "playsInline",
      "type": "boolean",
      "doc": "Gets or sets the playsinline of the video element. for example, On iPhone, video elements will now be allowed to play inline, and will not automatically enter fullscreen mode when playback begins."
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "property",
      "name": "poster",
      "type": "string",
      "doc": "Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/poster)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "property",
      "name": "videoHeight",
      "type": "number",
      "doc": "Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/videoHeight)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "property",
      "name": "videoWidth",
      "type": "number",
      "doc": "Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/videoWidth)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Gets or sets the width of the video element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/width)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "cancelVideoFrameCallback",
      "parameters": [
        {
          "name": "handle",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/cancelVideoFrameCallback)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "getVideoPlaybackQuality",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "VideoPlaybackQuality",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "requestPictureInPicture",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<PictureInPictureWindow>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/requestPictureInPicture)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "requestVideoFrameCallback",
      "parameters": [
        {
          "name": "callback",
          "type": "VideoFrameRequestCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/requestVideoFrameCallback)"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "HTMLVideoElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "HashChangeEvent": [
    {
      "interface": "HashChangeEvent",
      "kind": "property",
      "name": "newURL",
      "type": "string",
      "doc": "Returns the URL of the session history entry that is now current.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HashChangeEvent/newURL)"
    },
    {
      "interface": "HashChangeEvent",
      "kind": "property",
      "name": "oldURL",
      "type": "string",
      "doc": "Returns the URL of the session history entry that was previously current.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HashChangeEvent/oldURL)"
    }
  ],
  "Headers": [
    {
      "interface": "Headers",
      "kind": "method",
      "name": "append",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/append)"
    },
    {
      "interface": "Headers",
      "kind": "method",
      "name": "delete",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/delete)"
    },
    {
      "interface": "Headers",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/get)"
    },
    {
      "interface": "Headers",
      "kind": "method",
      "name": "getSetCookie",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/getSetCookie)"
    },
    {
      "interface": "Headers",
      "kind": "method",
      "name": "has",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/has)"
    },
    {
      "interface": "Headers",
      "kind": "method",
      "name": "set",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/set)"
    },
    {
      "interface": "Headers",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: string, key: string, parent: Headers) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "Highlight": [
    {
      "interface": "Highlight",
      "kind": "property",
      "name": "priority",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Highlight/priority)"
    },
    {
      "interface": "Highlight",
      "kind": "property",
      "name": "type",
      "type": "HighlightType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Highlight/type)"
    },
    {
      "interface": "Highlight",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: AbstractRange, key: AbstractRange, parent: Highlight) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "HighlightRegistry": [
    {
      "interface": "HighlightRegistry",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: Highlight, key: string, parent: HighlightRegistry) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "History": [
    {
      "interface": "History",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/length)"
    },
    {
      "interface": "History",
      "kind": "property",
      "name": "scrollRestoration",
      "type": "ScrollRestoration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/scrollRestoration)"
    },
    {
      "interface": "History",
      "kind": "property",
      "name": "state",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/state)"
    },
    {
      "interface": "History",
      "kind": "method",
      "name": "back",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/back)"
    },
    {
      "interface": "History",
      "kind": "method",
      "name": "forward",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/forward)"
    },
    {
      "interface": "History",
      "kind": "method",
      "name": "go",
      "parameters": [
        {
          "name": "delta",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/go)"
    },
    {
      "interface": "History",
      "kind": "method",
      "name": "pushState",
      "parameters": [
        {
          "name": "data",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "unused",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "url",
          "type": "string | URL",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/pushState)"
    },
    {
      "interface": "History",
      "kind": "method",
      "name": "replaceState",
      "parameters": [
        {
          "name": "data",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "unused",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "url",
          "type": "string | URL",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/History/replaceState)"
    }
  ],
  "IDBCursor": [
    {
      "interface": "IDBCursor",
      "kind": "property",
      "name": "direction",
      "type": "IDBCursorDirection",
      "doc": "Returns the direction (\"next\", \"nextunique\", \"prev\" or \"prevunique\") of the cursor.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/direction)"
    },
    {
      "interface": "IDBCursor",
      "kind": "property",
      "name": "key",
      "type": "IDBValidKey",
      "doc": "Returns the key of the cursor. Throws a \"InvalidStateError\" DOMException if the cursor is advancing or is finished.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/key)"
    },
    {
      "interface": "IDBCursor",
      "kind": "property",
      "name": "primaryKey",
      "type": "IDBValidKey",
      "doc": "Returns the effective key of the cursor. Throws a \"InvalidStateError\" DOMException if the cursor is advancing or is finished.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/primaryKey)"
    },
    {
      "interface": "IDBCursor",
      "kind": "property",
      "name": "request",
      "type": "IDBRequest<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/request)"
    },
    {
      "interface": "IDBCursor",
      "kind": "property",
      "name": "source",
      "type": "IDBObjectStore | IDBIndex",
      "doc": "Returns the IDBObjectStore or IDBIndex the cursor was opened from.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/source)"
    },
    {
      "interface": "IDBCursor",
      "kind": "method",
      "name": "advance",
      "parameters": [
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Advances the cursor through the next count records in range.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/advance)"
    },
    {
      "interface": "IDBCursor",
      "kind": "method",
      "name": "continue",
      "parameters": [
        {
          "name": "key",
          "type": "IDBValidKey",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Advances the cursor to the next record in range.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/continue)"
    },
    {
      "interface": "IDBCursor",
      "kind": "method",
      "name": "continuePrimaryKey",
      "parameters": [
        {
          "name": "key",
          "type": "IDBValidKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "primaryKey",
          "type": "IDBValidKey",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Advances the cursor to the next record in range matching or after key and primaryKey. Throws an \"InvalidAccessError\" DOMException if the source is not an index.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/continuePrimaryKey)"
    },
    {
      "interface": "IDBCursor",
      "kind": "method",
      "name": "delete",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "IDBRequest<undefined>",
      "doc": "Delete the record pointed at by the cursor with a new value.\n\nIf successful, request's result will be undefined.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/delete)"
    },
    {
      "interface": "IDBCursor",
      "kind": "method",
      "name": "update",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBRequest<IDBValidKey>",
      "doc": "Updated the record pointed at by the cursor with a new value.\n\nThrows a \"DataError\" DOMException if the effective object store uses in-line keys and the key would have changed.\n\nIf successful, request's result will be the record's key.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/update)"
    }
  ],
  "IDBCursorWithValue": [
    {
      "interface": "IDBCursorWithValue",
      "kind": "property",
      "name": "value",
      "type": "any",
      "doc": "Returns the cursor's current value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue/value)"
    }
  ],
  "IDBDatabaseEventMap": [
    {
      "interface": "IDBDatabaseEventMap",
      "kind": "property",
      "name": "\"abort\"",
      "type": "Event"
    },
    {
      "interface": "IDBDatabaseEventMap",
      "kind": "property",
      "name": "\"close\"",
      "type": "Event"
    },
    {
      "interface": "IDBDatabaseEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "Event"
    },
    {
      "interface": "IDBDatabaseEventMap",
      "kind": "property",
      "name": "\"versionchange\"",
      "type": "IDBVersionChangeEvent"
    }
  ],
  "IDBDatabase": [
    {
      "interface": "IDBDatabase",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Returns the name of the database.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/name)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "property",
      "name": "objectStoreNames",
      "type": "DOMStringList",
      "doc": "Returns a list of the names of object stores in the database.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/objectStoreNames)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "event",
      "name": "onabort",
      "type": "(this: IDBDatabase, ev: Event) => any"
    },
    {
      "interface": "IDBDatabase",
      "kind": "event",
      "name": "onclose",
      "type": "(this: IDBDatabase, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close_event)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "event",
      "name": "onerror",
      "type": "(this: IDBDatabase, ev: Event) => any"
    },
    {
      "interface": "IDBDatabase",
      "kind": "event",
      "name": "onversionchange",
      "type": "(this: IDBDatabase, ev: IDBVersionChangeEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/versionchange_event)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "property",
      "name": "version",
      "type": "number",
      "doc": "Returns the version of the database.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/version)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Closes the connection once all running transactions have finished.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "createObjectStore",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "IDBObjectStoreParameters",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "IDBObjectStore",
      "doc": "Creates a new object store with the given name and options and returns a new IDBObjectStore.\n\nThrows a \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/createObjectStore)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "deleteObjectStore",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Deletes the object store with the given name.\n\nThrows a \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/deleteObjectStore)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "transaction",
      "parameters": [
        {
          "name": "storeNames",
          "type": "string | string[]",
          "optional": false,
          "rest": false
        },
        {
          "name": "mode",
          "type": "IDBTransactionMode",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "IDBTransactionOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "IDBTransaction",
      "doc": "Returns a new transaction with the given mode (\"readonly\" or \"readwrite\") and scope which can be a single object store name or an array of names.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBDatabase",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "IDBFactory": [
    {
      "interface": "IDBFactory",
      "kind": "method",
      "name": "cmp",
      "parameters": [
        {
          "name": "first",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "second",
          "type": "any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.\n\nThrows a \"DataError\" DOMException if either input is not a valid key.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/cmp)"
    },
    {
      "interface": "IDBFactory",
      "kind": "method",
      "name": "databases",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<IDBDatabaseInfo[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/databases)"
    },
    {
      "interface": "IDBFactory",
      "kind": "method",
      "name": "deleteDatabase",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBOpenDBRequest",
      "doc": "Attempts to delete the named database. If the database already exists and there are open connections that don't close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request's result will be null.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/deleteDatabase)"
    },
    {
      "interface": "IDBFactory",
      "kind": "method",
      "name": "open",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "version",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "IDBOpenDBRequest",
      "doc": "Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request's result will be the connection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/open)"
    }
  ],
  "IDBIndex": [
    {
      "interface": "IDBIndex",
      "kind": "property",
      "name": "keyPath",
      "type": "string | string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/keyPath)"
    },
    {
      "interface": "IDBIndex",
      "kind": "property",
      "name": "multiEntry",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/multiEntry)"
    },
    {
      "interface": "IDBIndex",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Returns the name of the index.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/name)"
    },
    {
      "interface": "IDBIndex",
      "kind": "property",
      "name": "objectStore",
      "type": "IDBObjectStore",
      "doc": "Returns the IDBObjectStore the index belongs to.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/objectStore)"
    },
    {
      "interface": "IDBIndex",
      "kind": "property",
      "name": "unique",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/unique)"
    },
    {
      "interface": "IDBIndex",
      "kind": "method",
      "name": "count",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "IDBRequest<number>",
      "doc": "Retrieves the number of records matching the given key or key range in query.\n\nIf successful, request's result will be the count.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/count)"
    },
    {
      "interface": "IDBIndex",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBRequest<any>",
      "doc": "Retrieves the value of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the value, or undefined if there was no matching record.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/get)"
    },
    {
      "interface": "IDBIndex",
      "kind": "method",
      "name": "getAll",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<any[]>",
      "doc": "Retrieves the values of the records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the values.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getAll)"
    },
    {
      "interface": "IDBIndex",
      "kind": "method",
      "name": "getAllKeys",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<IDBValidKey[]>",
      "doc": "Retrieves the keys of records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the keys.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getAllKeys)"
    },
    {
      "interface": "IDBIndex",
      "kind": "method",
      "name": "getKey",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBRequest<IDBValidKey>",
      "doc": "Retrieves the key of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the key, or undefined if there was no matching record.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getKey)"
    },
    {
      "interface": "IDBIndex",
      "kind": "method",
      "name": "openCursor",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "direction",
          "type": "IDBCursorDirection",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<IDBCursorWithValue>",
      "doc": "Opens a cursor over the records matching query, ordered by direction. If query is null, all records in index are matched.\n\nIf successful, request's result will be an IDBCursorWithValue, or null if there were no matching records.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/openCursor)"
    },
    {
      "interface": "IDBIndex",
      "kind": "method",
      "name": "openKeyCursor",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "direction",
          "type": "IDBCursorDirection",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<IDBCursor>",
      "doc": "Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in index are matched.\n\nIf successful, request's result will be an IDBCursor, or null if there were no matching records.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/openKeyCursor)"
    }
  ],
  "IDBKeyRange": [
    {
      "interface": "IDBKeyRange",
      "kind": "property",
      "name": "lower",
      "type": "any",
      "doc": "Returns lower bound, or undefined if none.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lower)"
    },
    {
      "interface": "IDBKeyRange",
      "kind": "property",
      "name": "lowerOpen",
      "type": "boolean",
      "doc": "Returns true if the lower open flag is set, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerOpen)"
    },
    {
      "interface": "IDBKeyRange",
      "kind": "property",
      "name": "upper",
      "type": "any",
      "doc": "Returns upper bound, or undefined if none.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upper)"
    },
    {
      "interface": "IDBKeyRange",
      "kind": "property",
      "name": "upperOpen",
      "type": "boolean",
      "doc": "Returns true if the upper open flag is set, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperOpen)"
    },
    {
      "interface": "IDBKeyRange",
      "kind": "method",
      "name": "includes",
      "parameters": [
        {
          "name": "key",
          "type": "any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns true if key is included in the range, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/includes)"
    }
  ],
  "IDBObjectStore": [
    {
      "interface": "IDBObjectStore",
      "kind": "property",
      "name": "autoIncrement",
      "type": "boolean",
      "doc": "Returns true if the store has a key generator, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/autoIncrement)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "property",
      "name": "indexNames",
      "type": "DOMStringList",
      "doc": "Returns a list of the names of indexes in the store.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/indexNames)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "property",
      "name": "keyPath",
      "type": "string | string[]",
      "doc": "Returns the key path of the store, or null if none.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/keyPath)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Returns the name of the store.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/name)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "property",
      "name": "transaction",
      "type": "IDBTransaction",
      "doc": "Returns the associated transaction.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/transaction)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "add",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "IDBValidKey",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "IDBRequest<IDBValidKey>",
      "doc": "Adds or updates a record in store with the given value and key.\n\nIf the store uses in-line keys and key is specified a \"DataError\" DOMException will be thrown.\n\nIf put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request's error set to a \"ConstraintError\" DOMException.\n\nIf successful, request's result will be the record's key.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/add)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "IDBRequest<undefined>",
      "doc": "Deletes all records in store.\n\nIf successful, request's result will be undefined.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/clear)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "count",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "IDBRequest<number>",
      "doc": "Retrieves the number of records matching the given key or key range in query.\n\nIf successful, request's result will be the count.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/count)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "createIndex",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyPath",
          "type": "string | string[]",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "IDBIndexParameters",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "IDBIndex",
      "doc": "Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a \"ConstraintError\" DOMException.\n\nThrows an \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/createIndex)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "delete",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBRequest<undefined>",
      "doc": "Deletes records in store with the given key or in the given key range in query.\n\nIf successful, request's result will be undefined.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/delete)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "deleteIndex",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Deletes the index in store with the given name.\n\nThrows an \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/deleteIndex)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBRequest<any>",
      "doc": "Retrieves the value of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the value, or undefined if there was no matching record.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/get)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "getAll",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<any[]>",
      "doc": "Retrieves the values of the records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the values.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getAll)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "getAllKeys",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<IDBValidKey[]>",
      "doc": "Retrieves the keys of records matching the given key or key range in query (up to count if given).\n\nIf successful, request's result will be an Array of the keys.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getAllKeys)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "getKey",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBRequest<IDBValidKey>",
      "doc": "Retrieves the key of the first record matching the given key or key range in query.\n\nIf successful, request's result will be the key, or undefined if there was no matching record.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getKey)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "index",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBIndex",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/index)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "openCursor",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "direction",
          "type": "IDBCursorDirection",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<IDBCursorWithValue>",
      "doc": "Opens a cursor over the records matching query, ordered by direction. If query is null, all records in store are matched.\n\nIf successful, request's result will be an IDBCursorWithValue pointing at the first matching record, or null if there were no matching records.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/openCursor)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "openKeyCursor",
      "parameters": [
        {
          "name": "query",
          "type": "IDBValidKey | IDBKeyRange",
          "optional": true,
          "rest": false
        },
        {
          "name": "direction",
          "type": "IDBCursorDirection",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "IDBRequest<IDBCursor>",
      "doc": "Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in store are matched.\n\nIf successful, request's result will be an IDBCursor pointing at the first matching record, or null if there were no matching records.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/openKeyCursor)"
    },
    {
      "interface": "IDBObjectStore",
      "kind": "method",
      "name": "put",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "IDBValidKey",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "IDBRequest<IDBValidKey>",
      "doc": "Adds or updates a record in store with the given value and key.\n\nIf the store uses in-line keys and key is specified a \"DataError\" DOMException will be thrown.\n\nIf put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request's error set to a \"ConstraintError\" DOMException.\n\nIf successful, request's result will be the record's key.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/put)"
    }
  ],
  "IDBOpenDBRequestEventMap": [
    {
      "interface": "IDBOpenDBRequestEventMap",
      "kind": "property",
      "name": "\"blocked\"",
      "type": "IDBVersionChangeEvent"
    },
    {
      "interface": "IDBOpenDBRequestEventMap",
      "kind": "property",
      "name": "\"upgradeneeded\"",
      "type": "IDBVersionChangeEvent"
    }
  ],
  "IDBOpenDBRequest": [
    {
      "interface": "IDBOpenDBRequest",
      "kind": "event",
      "name": "onblocked",
      "type": "(this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/blocked_event)"
    },
    {
      "interface": "IDBOpenDBRequest",
      "kind": "event",
      "name": "onupgradeneeded",
      "type": "(this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event)"
    },
    {
      "interface": "IDBOpenDBRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBOpenDBRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBOpenDBRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBOpenDBRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "IDBRequestEventMap": [
    {
      "interface": "IDBRequestEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "Event"
    },
    {
      "interface": "IDBRequestEventMap",
      "kind": "property",
      "name": "\"success\"",
      "type": "Event"
    }
  ],
  "IDBRequest": [
    {
      "interface": "IDBRequest",
      "kind": "property",
      "name": "error",
      "type": "DOMException",
      "doc": "When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a \"InvalidStateError\" DOMException if the request is still pending.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error)"
    },
    {
      "interface": "IDBRequest",
      "kind": "event",
      "name": "onerror",
      "type": "(this: IDBRequest<T>, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error_event)"
    },
    {
      "interface": "IDBRequest",
      "kind": "event",
      "name": "onsuccess",
      "type": "(this: IDBRequest<T>, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/success_event)"
    },
    {
      "interface": "IDBRequest",
      "kind": "property",
      "name": "readyState",
      "type": "IDBRequestReadyState",
      "doc": "Returns \"pending\" until a request is complete, then returns \"done\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/readyState)"
    },
    {
      "interface": "IDBRequest",
      "kind": "property",
      "name": "result",
      "type": "T",
      "doc": "When a request is completed, returns the result, or undefined if the request failed. Throws a \"InvalidStateError\" DOMException if the request is still pending.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/result)"
    },
    {
      "interface": "IDBRequest",
      "kind": "property",
      "name": "source",
      "type": "IDBObjectStore | IDBIndex | IDBCursor",
      "doc": "Returns the IDBObjectStore, IDBIndex, or IDBCursor the request was made against, or null if is was an open request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/source)"
    },
    {
      "interface": "IDBRequest",
      "kind": "property",
      "name": "transaction",
      "type": "IDBTransaction",
      "doc": "Returns the IDBTransaction the request was made within. If this as an open request, then it returns an upgrade transaction while it is running, or null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/transaction)"
    },
    {
      "interface": "IDBRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "IDBTransactionEventMap": [
    {
      "interface": "IDBTransactionEventMap",
      "kind": "property",
      "name": "\"abort\"",
      "type": "Event"
    },
    {
      "interface": "IDBTransactionEventMap",
      "kind": "property",
      "name": "\"complete\"",
      "type": "Event"
    },
    {
      "interface": "IDBTransactionEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "Event"
    }
  ],
  "IDBTransaction": [
    {
      "interface": "IDBTransaction",
      "kind": "property",
      "name": "db",
      "type": "IDBDatabase",
      "doc": "Returns the transaction's connection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/db)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "property",
      "name": "durability",
      "type": "IDBTransactionDurability",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/durability)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "property",
      "name": "error",
      "type": "DOMException",
      "doc": "If the transaction was aborted, returns the error (a DOMException) providing the reason.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "property",
      "name": "mode",
      "type": "IDBTransactionMode",
      "doc": "Returns the mode the transaction was created with (\"readonly\" or \"readwrite\"), or \"versionchange\" for an upgrade transaction.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/mode)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "property",
      "name": "objectStoreNames",
      "type": "DOMStringList",
      "doc": "Returns a list of the names of object stores in the transaction's scope. For an upgrade transaction this is all object stores in the database.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/objectStoreNames)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "event",
      "name": "onabort",
      "type": "(this: IDBTransaction, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort_event)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "event",
      "name": "oncomplete",
      "type": "(this: IDBTransaction, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/complete_event)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "event",
      "name": "onerror",
      "type": "(this: IDBTransaction, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error_event)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "method",
      "name": "abort",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Aborts the transaction. All pending requests will fail with a \"AbortError\" DOMException and all changes made to the database will be reverted.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "method",
      "name": "commit",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/commit)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "method",
      "name": "objectStore",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "IDBObjectStore",
      "doc": "Returns an IDBObjectStore in the transaction's scope.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/objectStore)"
    },
    {
      "interface": "IDBTransaction",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBTransaction",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBTransaction",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "IDBTransaction",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "IDBVersionChangeEvent": [
    {
      "interface": "IDBVersionChangeEvent",
      "kind": "property",
      "name": "newVersion",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent/newVersion)"
    },
    {
      "interface": "IDBVersionChangeEvent",
      "kind": "property",
      "name": "oldVersion",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent/oldVersion)"
    }
  ],
  "IIRFilterNode": [
    {
      "interface": "IIRFilterNode",
      "kind": "method",
      "name": "getFrequencyResponse",
      "parameters": [
        {
          "name": "frequencyHz",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "magResponse",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "phaseResponse",
          "type": "Float32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IIRFilterNode/getFrequencyResponse)"
    }
  ],
  "IdleDeadline": [
    {
      "interface": "IdleDeadline",
      "kind": "property",
      "name": "didTimeout",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IdleDeadline/didTimeout)"
    },
    {
      "interface": "IdleDeadline",
      "kind": "method",
      "name": "timeRemaining",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IdleDeadline/timeRemaining)"
    }
  ],
  "ImageBitmap": [
    {
      "interface": "ImageBitmap",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "Returns the intrinsic height of the image, in CSS pixels.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/height)"
    },
    {
      "interface": "ImageBitmap",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Returns the intrinsic width of the image, in CSS pixels.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/width)"
    },
    {
      "interface": "ImageBitmap",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Releases imageBitmap's underlying bitmap data.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/close)"
    }
  ],
  "ImageBitmapRenderingContext": [
    {
      "interface": "ImageBitmapRenderingContext",
      "kind": "property",
      "name": "canvas",
      "type": "OffscreenCanvas | HTMLCanvasElement",
      "doc": "Returns the canvas element that the context is bound to.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmapRenderingContext/canvas)"
    },
    {
      "interface": "ImageBitmapRenderingContext",
      "kind": "method",
      "name": "transferFromImageBitmap",
      "parameters": [
        {
          "name": "bitmap",
          "type": "ImageBitmap",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmapRenderingContext/transferFromImageBitmap)"
    }
  ],
  "ImageData": [
    {
      "interface": "ImageData",
      "kind": "property",
      "name": "colorSpace",
      "type": "PredefinedColorSpace",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/colorSpace)"
    },
    {
      "interface": "ImageData",
      "kind": "property",
      "name": "data",
      "type": "Uint8ClampedArray<ArrayBufferLike>",
      "doc": "Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/data)"
    },
    {
      "interface": "ImageData",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "Returns the actual dimensions of the data in the ImageData object, in pixels.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/height)"
    },
    {
      "interface": "ImageData",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Returns the actual dimensions of the data in the ImageData object, in pixels.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/width)"
    }
  ],
  "ImageDecoder": [
    {
      "interface": "ImageDecoder",
      "kind": "property",
      "name": "complete",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/complete)"
    },
    {
      "interface": "ImageDecoder",
      "kind": "property",
      "name": "completed",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/completed)"
    },
    {
      "interface": "ImageDecoder",
      "kind": "property",
      "name": "tracks",
      "type": "ImageTrackList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/tracks)"
    },
    {
      "interface": "ImageDecoder",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/type)"
    },
    {
      "interface": "ImageDecoder",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/close)"
    },
    {
      "interface": "ImageDecoder",
      "kind": "method",
      "name": "decode",
      "parameters": [
        {
          "name": "options",
          "type": "ImageDecodeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<ImageDecodeResult>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/decode)"
    },
    {
      "interface": "ImageDecoder",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/reset)"
    }
  ],
  "ImageTrack": [
    {
      "interface": "ImageTrack",
      "kind": "property",
      "name": "animated",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/animated)"
    },
    {
      "interface": "ImageTrack",
      "kind": "property",
      "name": "frameCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/frameCount)"
    },
    {
      "interface": "ImageTrack",
      "kind": "property",
      "name": "repetitionCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/repetitionCount)"
    },
    {
      "interface": "ImageTrack",
      "kind": "property",
      "name": "selected",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/selected)"
    }
  ],
  "ImageTrackList": [
    {
      "interface": "ImageTrackList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/length)"
    },
    {
      "interface": "ImageTrackList",
      "kind": "property",
      "name": "ready",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/ready)"
    },
    {
      "interface": "ImageTrackList",
      "kind": "property",
      "name": "selectedIndex",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/selectedIndex)"
    },
    {
      "interface": "ImageTrackList",
      "kind": "property",
      "name": "selectedTrack",
      "type": "ImageTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/selectedTrack)"
    }
  ],
  "ImportMeta": [
    {
      "interface": "ImportMeta",
      "kind": "property",
      "name": "url",
      "type": "string"
    },
    {
      "interface": "ImportMeta",
      "kind": "method",
      "name": "resolve",
      "parameters": [
        {
          "name": "specifier",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string"
    }
  ],
  "InputDeviceInfo": [
    {
      "interface": "InputDeviceInfo",
      "kind": "method",
      "name": "getCapabilities",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaTrackCapabilities",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/InputDeviceInfo/getCapabilities)"
    }
  ],
  "InputEvent": [
    {
      "interface": "InputEvent",
      "kind": "property",
      "name": "data",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/data)"
    },
    {
      "interface": "InputEvent",
      "kind": "property",
      "name": "dataTransfer",
      "type": "DataTransfer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/dataTransfer)"
    },
    {
      "interface": "InputEvent",
      "kind": "property",
      "name": "inputType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/inputType)"
    },
    {
      "interface": "InputEvent",
      "kind": "property",
      "name": "isComposing",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/isComposing)"
    },
    {
      "interface": "InputEvent",
      "kind": "method",
      "name": "getTargetRanges",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "StaticRange[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/getTargetRanges)"
    }
  ],
  "IntersectionObserver": [
    {
      "interface": "IntersectionObserver",
      "kind": "property",
      "name": "root",
      "type": "Element | Document",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/root)"
    },
    {
      "interface": "IntersectionObserver",
      "kind": "property",
      "name": "rootMargin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/rootMargin)"
    },
    {
      "interface": "IntersectionObserver",
      "kind": "property",
      "name": "thresholds",
      "type": "readonly number[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/thresholds)"
    },
    {
      "interface": "IntersectionObserver",
      "kind": "method",
      "name": "disconnect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/disconnect)"
    },
    {
      "interface": "IntersectionObserver",
      "kind": "method",
      "name": "observe",
      "parameters": [
        {
          "name": "target",
          "type": "Element",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/observe)"
    },
    {
      "interface": "IntersectionObserver",
      "kind": "method",
      "name": "takeRecords",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "IntersectionObserverEntry[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/takeRecords)"
    },
    {
      "interface": "IntersectionObserver",
      "kind": "method",
      "name": "unobserve",
      "parameters": [
        {
          "name": "target",
          "type": "Element",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/unobserve)"
    }
  ],
  "IntersectionObserverEntry": [
    {
      "interface": "IntersectionObserverEntry",
      "kind": "property",
      "name": "boundingClientRect",
      "type": "DOMRectReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/boundingClientRect)"
    },
    {
      "interface": "IntersectionObserverEntry",
      "kind": "property",
      "name": "intersectionRatio",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/intersectionRatio)"
    },
    {
      "interface": "IntersectionObserverEntry",
      "kind": "property",
      "name": "intersectionRect",
      "type": "DOMRectReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/intersectionRect)"
    },
    {
      "interface": "IntersectionObserverEntry",
      "kind": "property",
      "name": "isIntersecting",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/isIntersecting)"
    },
    {
      "interface": "IntersectionObserverEntry",
      "kind": "property",
      "name": "rootBounds",
      "type": "DOMRectReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/rootBounds)"
    },
    {
      "interface": "IntersectionObserverEntry",
      "kind": "property",
      "name": "target",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/target)"
    },
    {
      "interface": "IntersectionObserverEntry",
      "kind": "property",
      "name": "time",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/time)"
    }
  ],
  "KHR_parallel_shader_compile": [
    {
      "interface": "KHR_parallel_shader_compile",
      "kind": "property",
      "name": "COMPLETION_STATUS_KHR",
      "type": "37297"
    }
  ],
  "KeyboardEvent": [
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "altKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/altKey)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "charCode",
      "type": "number"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "code",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/code)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "ctrlKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/ctrlKey)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "isComposing",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/isComposing)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "key",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/key)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "keyCode",
      "type": "number"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "location",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/location)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "metaKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/metaKey)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "repeat",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/repeat)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "shiftKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/shiftKey)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "method",
      "name": "getModifierState",
      "parameters": [
        {
          "name": "keyArg",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/getModifierState)"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "method",
      "name": "initKeyboardEvent",
      "parameters": [
        {
          "name": "typeArg",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubblesArg",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelableArg",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "viewArg",
          "type": "Window",
          "optional": true,
          "rest": false
        },
        {
          "name": "keyArg",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "locationArg",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "ctrlKey",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "altKey",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "shiftKey",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "metaKey",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "DOM_KEY_LOCATION_STANDARD",
      "type": "0"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "DOM_KEY_LOCATION_LEFT",
      "type": "1"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "DOM_KEY_LOCATION_RIGHT",
      "type": "2"
    },
    {
      "interface": "KeyboardEvent",
      "kind": "property",
      "name": "DOM_KEY_LOCATION_NUMPAD",
      "type": "3"
    }
  ],
  "KeyframeEffect": [
    {
      "interface": "KeyframeEffect",
      "kind": "property",
      "name": "composite",
      "type": "CompositeOperation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/composite)"
    },
    {
      "interface": "KeyframeEffect",
      "kind": "property",
      "name": "iterationComposite",
      "type": "IterationCompositeOperation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/iterationComposite)"
    },
    {
      "interface": "KeyframeEffect",
      "kind": "property",
      "name": "pseudoElement",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/pseudoElement)"
    },
    {
      "interface": "KeyframeEffect",
      "kind": "property",
      "name": "target",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/target)"
    },
    {
      "interface": "KeyframeEffect",
      "kind": "method",
      "name": "getKeyframes",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ComputedKeyframe[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/getKeyframes)"
    },
    {
      "interface": "KeyframeEffect",
      "kind": "method",
      "name": "setKeyframes",
      "parameters": [
        {
          "name": "keyframes",
          "type": "Keyframe[] | PropertyIndexedKeyframes",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/setKeyframes)"
    }
  ],
  "LargestContentfulPaint": [
    {
      "interface": "LargestContentfulPaint",
      "kind": "property",
      "name": "element",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/element)"
    },
    {
      "interface": "LargestContentfulPaint",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/id)"
    },
    {
      "interface": "LargestContentfulPaint",
      "kind": "property",
      "name": "loadTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/loadTime)"
    },
    {
      "interface": "LargestContentfulPaint",
      "kind": "property",
      "name": "renderTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/renderTime)"
    },
    {
      "interface": "LargestContentfulPaint",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/size)"
    },
    {
      "interface": "LargestContentfulPaint",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/url)"
    },
    {
      "interface": "LargestContentfulPaint",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/toJSON)"
    }
  ],
  "LinkStyle": [
    {
      "interface": "LinkStyle",
      "kind": "property",
      "name": "sheet",
      "type": "CSSStyleSheet",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/sheet)"
    }
  ],
  "Location": [
    {
      "interface": "Location",
      "kind": "property",
      "name": "ancestorOrigins",
      "type": "DOMStringList",
      "doc": "Returns a DOMStringList object listing the origins of the ancestor browsing contexts, from the parent browsing context to the top-level browsing context.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/ancestorOrigins)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "hash",
      "type": "string",
      "doc": "Returns the Location object's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed fragment (ignores leading \"#\").\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/hash)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "host",
      "type": "string",
      "doc": "Returns the Location object's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to navigate to the same URL with a changed host and port.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/host)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "hostname",
      "type": "string",
      "doc": "Returns the Location object's URL's host.\n\nCan be set, to navigate to the same URL with a changed host.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/hostname)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "href",
      "type": "string",
      "doc": "Returns the Location object's URL.\n\nCan be set, to navigate to the given URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/href)"
    },
    {
      "interface": "Location",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "origin",
      "type": "string",
      "doc": "Returns the Location object's URL's origin.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/origin)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "pathname",
      "type": "string",
      "doc": "Returns the Location object's URL's path.\n\nCan be set, to navigate to the same URL with a changed path.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/pathname)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "port",
      "type": "string",
      "doc": "Returns the Location object's URL's port.\n\nCan be set, to navigate to the same URL with a changed port.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/port)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "protocol",
      "type": "string",
      "doc": "Returns the Location object's URL's scheme.\n\nCan be set, to navigate to the same URL with a changed scheme.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/protocol)"
    },
    {
      "interface": "Location",
      "kind": "property",
      "name": "search",
      "type": "string",
      "doc": "Returns the Location object's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed query (ignores leading \"?\").\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/search)"
    },
    {
      "interface": "Location",
      "kind": "method",
      "name": "assign",
      "parameters": [
        {
          "name": "url",
          "type": "string | URL",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Navigates to the given URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/assign)"
    },
    {
      "interface": "Location",
      "kind": "method",
      "name": "reload",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Reloads the current page.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/reload)"
    },
    {
      "interface": "Location",
      "kind": "method",
      "name": "replace",
      "parameters": [
        {
          "name": "url",
          "type": "string | URL",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the current page from the session history and navigates to the given URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/replace)"
    }
  ],
  "Lock": [
    {
      "interface": "Lock",
      "kind": "property",
      "name": "mode",
      "type": "LockMode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock/mode)"
    },
    {
      "interface": "Lock",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock/name)"
    }
  ],
  "LockManager": [
    {
      "interface": "LockManager",
      "kind": "method",
      "name": "query",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<LockManagerSnapshot>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/query)"
    },
    {
      "interface": "LockManager",
      "kind": "method",
      "name": "request",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "callback",
          "type": "LockGrantedCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/request)"
    },
    {
      "interface": "LockManager",
      "kind": "method",
      "name": "request",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "LockOptions",
          "optional": false,
          "rest": false
        },
        {
          "name": "callback",
          "type": "LockGrantedCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<any>"
    }
  ],
  "MIDIAccessEventMap": [
    {
      "interface": "MIDIAccessEventMap",
      "kind": "property",
      "name": "\"statechange\"",
      "type": "MIDIConnectionEvent"
    }
  ],
  "MIDIAccess": [
    {
      "interface": "MIDIAccess",
      "kind": "property",
      "name": "inputs",
      "type": "MIDIInputMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/inputs)"
    },
    {
      "interface": "MIDIAccess",
      "kind": "event",
      "name": "onstatechange",
      "type": "(this: MIDIAccess, ev: MIDIConnectionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/statechange_event)"
    },
    {
      "interface": "MIDIAccess",
      "kind": "property",
      "name": "outputs",
      "type": "MIDIOutputMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/outputs)"
    },
    {
      "interface": "MIDIAccess",
      "kind": "property",
      "name": "sysexEnabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/sysexEnabled)"
    },
    {
      "interface": "MIDIAccess",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIAccess",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIAccess",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIAccess",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MIDIConnectionEvent": [
    {
      "interface": "MIDIConnectionEvent",
      "kind": "property",
      "name": "port",
      "type": "MIDIPort",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIConnectionEvent/port)"
    }
  ],
  "MIDIInputEventMap": [
    {
      "interface": "MIDIInputEventMap",
      "kind": "property",
      "name": "\"midimessage\"",
      "type": "MIDIMessageEvent"
    }
  ],
  "MIDIInput": [
    {
      "interface": "MIDIInput",
      "kind": "event",
      "name": "onmidimessage",
      "type": "(this: MIDIInput, ev: MIDIMessageEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIInput/midimessage_event)"
    },
    {
      "interface": "MIDIInput",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIInput, ev: MIDIInputEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIInput",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIInput",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIInput, ev: MIDIInputEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIInput",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MIDIInputMap": [
    {
      "interface": "MIDIInputMap",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: MIDIInput, key: string, parent: MIDIInputMap) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "MIDIMessageEvent": [
    {
      "interface": "MIDIMessageEvent",
      "kind": "property",
      "name": "data",
      "type": "Uint8Array<ArrayBufferLike>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIMessageEvent/data)"
    }
  ],
  "MIDIOutput": [
    {
      "interface": "MIDIOutput",
      "kind": "method",
      "name": "send",
      "parameters": [
        {
          "name": "data",
          "type": "number[]",
          "optional": false,
          "rest": false
        },
        {
          "name": "timestamp",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIOutput/send)"
    },
    {
      "interface": "MIDIOutput",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIOutput, ev: MIDIPortEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIOutput",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIOutput",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIOutput, ev: MIDIPortEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIOutput",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MIDIOutputMap": [
    {
      "interface": "MIDIOutputMap",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: MIDIOutput, key: string, parent: MIDIOutputMap) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "MIDIPortEventMap": [
    {
      "interface": "MIDIPortEventMap",
      "kind": "property",
      "name": "\"statechange\"",
      "type": "MIDIConnectionEvent"
    }
  ],
  "MIDIPort": [
    {
      "interface": "MIDIPort",
      "kind": "property",
      "name": "connection",
      "type": "MIDIPortConnectionState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/connection)"
    },
    {
      "interface": "MIDIPort",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/id)"
    },
    {
      "interface": "MIDIPort",
      "kind": "property",
      "name": "manufacturer",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/manufacturer)"
    },
    {
      "interface": "MIDIPort",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/name)"
    },
    {
      "interface": "MIDIPort",
      "kind": "event",
      "name": "onstatechange",
      "type": "(this: MIDIPort, ev: MIDIConnectionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/statechange_event)"
    },
    {
      "interface": "MIDIPort",
      "kind": "property",
      "name": "state",
      "type": "MIDIPortDeviceState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/state)"
    },
    {
      "interface": "MIDIPort",
      "kind": "property",
      "name": "type",
      "type": "MIDIPortType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/type)"
    },
    {
      "interface": "MIDIPort",
      "kind": "property",
      "name": "version",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/version)"
    },
    {
      "interface": "MIDIPort",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<MIDIPort>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/close)"
    },
    {
      "interface": "MIDIPort",
      "kind": "method",
      "name": "open",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<MIDIPort>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/open)"
    },
    {
      "interface": "MIDIPort",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIPort, ev: MIDIPortEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIPort",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIPort",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MIDIPort, ev: MIDIPortEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MIDIPort",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MathMLElement": [
    {
      "interface": "MathMLElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MathMLElement, ev: MathMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MathMLElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MathMLElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MathMLElement, ev: MathMLElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MathMLElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaCapabilities": [
    {
      "interface": "MediaCapabilities",
      "kind": "method",
      "name": "decodingInfo",
      "parameters": [
        {
          "name": "configuration",
          "type": "MediaDecodingConfiguration",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<MediaCapabilitiesDecodingInfo>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities/decodingInfo)"
    },
    {
      "interface": "MediaCapabilities",
      "kind": "method",
      "name": "encodingInfo",
      "parameters": [
        {
          "name": "configuration",
          "type": "MediaEncodingConfiguration",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<MediaCapabilitiesEncodingInfo>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities/encodingInfo)"
    }
  ],
  "MediaDeviceInfo": [
    {
      "interface": "MediaDeviceInfo",
      "kind": "property",
      "name": "deviceId",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/deviceId)"
    },
    {
      "interface": "MediaDeviceInfo",
      "kind": "property",
      "name": "groupId",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/groupId)"
    },
    {
      "interface": "MediaDeviceInfo",
      "kind": "property",
      "name": "kind",
      "type": "MediaDeviceKind",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/kind)"
    },
    {
      "interface": "MediaDeviceInfo",
      "kind": "property",
      "name": "label",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/label)"
    },
    {
      "interface": "MediaDeviceInfo",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/toJSON)"
    }
  ],
  "MediaDevicesEventMap": [
    {
      "interface": "MediaDevicesEventMap",
      "kind": "property",
      "name": "\"devicechange\"",
      "type": "Event"
    }
  ],
  "MediaDevices": [
    {
      "interface": "MediaDevices",
      "kind": "event",
      "name": "ondevicechange",
      "type": "(this: MediaDevices, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/devicechange_event)"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "enumerateDevices",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<MediaDeviceInfo[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/enumerateDevices)"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "getDisplayMedia",
      "parameters": [
        {
          "name": "options",
          "type": "DisplayMediaStreamOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<MediaStream>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/getDisplayMedia)"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "getSupportedConstraints",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaTrackSupportedConstraints",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/getSupportedConstraints)"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "getUserMedia",
      "parameters": [
        {
          "name": "constraints",
          "type": "MediaStreamConstraints",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<MediaStream>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/getUserMedia)"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaDevices, ev: MediaDevicesEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaDevices, ev: MediaDevicesEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaDevices",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaElementAudioSourceNode": [
    {
      "interface": "MediaElementAudioSourceNode",
      "kind": "property",
      "name": "mediaElement",
      "type": "HTMLMediaElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaElementAudioSourceNode/mediaElement)"
    }
  ],
  "MediaEncryptedEvent": [
    {
      "interface": "MediaEncryptedEvent",
      "kind": "property",
      "name": "initData",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaEncryptedEvent/initData)"
    },
    {
      "interface": "MediaEncryptedEvent",
      "kind": "property",
      "name": "initDataType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaEncryptedEvent/initDataType)"
    }
  ],
  "MediaError": [
    {
      "interface": "MediaError",
      "kind": "property",
      "name": "code",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaError/code)"
    },
    {
      "interface": "MediaError",
      "kind": "property",
      "name": "message",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaError/message)"
    },
    {
      "interface": "MediaError",
      "kind": "property",
      "name": "MEDIA_ERR_ABORTED",
      "type": "1"
    },
    {
      "interface": "MediaError",
      "kind": "property",
      "name": "MEDIA_ERR_NETWORK",
      "type": "2"
    },
    {
      "interface": "MediaError",
      "kind": "property",
      "name": "MEDIA_ERR_DECODE",
      "type": "3"
    },
    {
      "interface": "MediaError",
      "kind": "property",
      "name": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "type": "4"
    }
  ],
  "MediaKeyMessageEvent": [
    {
      "interface": "MediaKeyMessageEvent",
      "kind": "property",
      "name": "message",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyMessageEvent/message)"
    },
    {
      "interface": "MediaKeyMessageEvent",
      "kind": "property",
      "name": "messageType",
      "type": "MediaKeyMessageType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyMessageEvent/messageType)"
    }
  ],
  "MediaKeySessionEventMap": [
    {
      "interface": "MediaKeySessionEventMap",
      "kind": "property",
      "name": "\"keystatuseschange\"",
      "type": "Event"
    },
    {
      "interface": "MediaKeySessionEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MediaKeyMessageEvent"
    }
  ],
  "MediaKeySession": [
    {
      "interface": "MediaKeySession",
      "kind": "property",
      "name": "closed",
      "type": "Promise<MediaKeySessionClosedReason>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/closed)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "property",
      "name": "expiration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/expiration)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "property",
      "name": "keyStatuses",
      "type": "MediaKeyStatusMap",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/keyStatuses)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "event",
      "name": "onkeystatuseschange",
      "type": "(this: MediaKeySession, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/keystatuseschange_event)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: MediaKeySession, ev: MediaKeyMessageEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/message_event)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "property",
      "name": "sessionId",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/sessionId)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/close)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "generateRequest",
      "parameters": [
        {
          "name": "initDataType",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "initData",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/generateRequest)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "load",
      "parameters": [
        {
          "name": "sessionId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/load)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "remove",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/remove)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "update",
      "parameters": [
        {
          "name": "response",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/update)"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaKeySession",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaKeyStatusMap": [
    {
      "interface": "MediaKeyStatusMap",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyStatusMap/size)"
    },
    {
      "interface": "MediaKeyStatusMap",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "keyId",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaKeyStatus",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyStatusMap/get)"
    },
    {
      "interface": "MediaKeyStatusMap",
      "kind": "method",
      "name": "has",
      "parameters": [
        {
          "name": "keyId",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyStatusMap/has)"
    },
    {
      "interface": "MediaKeyStatusMap",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: MediaKeyStatus, key: BufferSource, parent: MediaKeyStatusMap) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "MediaKeySystemAccess": [
    {
      "interface": "MediaKeySystemAccess",
      "kind": "property",
      "name": "keySystem",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySystemAccess/keySystem)"
    },
    {
      "interface": "MediaKeySystemAccess",
      "kind": "method",
      "name": "createMediaKeys",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<MediaKeys>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySystemAccess/createMediaKeys)"
    },
    {
      "interface": "MediaKeySystemAccess",
      "kind": "method",
      "name": "getConfiguration",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaKeySystemConfiguration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySystemAccess/getConfiguration)"
    }
  ],
  "MediaKeys": [
    {
      "interface": "MediaKeys",
      "kind": "method",
      "name": "createSession",
      "parameters": [
        {
          "name": "sessionType",
          "type": "MediaKeySessionType",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "MediaKeySession",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeys/createSession)"
    },
    {
      "interface": "MediaKeys",
      "kind": "method",
      "name": "getStatusForPolicy",
      "parameters": [
        {
          "name": "policy",
          "type": "MediaKeysPolicy",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<MediaKeyStatus>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeys/getStatusForPolicy)"
    },
    {
      "interface": "MediaKeys",
      "kind": "method",
      "name": "setServerCertificate",
      "parameters": [
        {
          "name": "serverCertificate",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeys/setServerCertificate)"
    }
  ],
  "MediaList": [
    {
      "interface": "MediaList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/length)"
    },
    {
      "interface": "MediaList",
      "kind": "property",
      "name": "mediaText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/mediaText)"
    },
    {
      "interface": "MediaList",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    },
    {
      "interface": "MediaList",
      "kind": "method",
      "name": "appendMedium",
      "parameters": [
        {
          "name": "medium",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/appendMedium)"
    },
    {
      "interface": "MediaList",
      "kind": "method",
      "name": "deleteMedium",
      "parameters": [
        {
          "name": "medium",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/deleteMedium)"
    },
    {
      "interface": "MediaList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/item)"
    }
  ],
  "MediaMetadata": [
    {
      "interface": "MediaMetadata",
      "kind": "property",
      "name": "album",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/album)"
    },
    {
      "interface": "MediaMetadata",
      "kind": "property",
      "name": "artist",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/artist)"
    },
    {
      "interface": "MediaMetadata",
      "kind": "property",
      "name": "artwork",
      "type": "readonly MediaImage[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/artwork)"
    },
    {
      "interface": "MediaMetadata",
      "kind": "property",
      "name": "title",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/title)"
    }
  ],
  "MediaQueryListEventMap": [
    {
      "interface": "MediaQueryListEventMap",
      "kind": "property",
      "name": "\"change\"",
      "type": "MediaQueryListEvent"
    }
  ],
  "MediaQueryList": [
    {
      "interface": "MediaQueryList",
      "kind": "property",
      "name": "matches",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/matches)"
    },
    {
      "interface": "MediaQueryList",
      "kind": "property",
      "name": "media",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/media)"
    },
    {
      "interface": "MediaQueryList",
      "kind": "event",
      "name": "onchange",
      "type": "(this: MediaQueryList, ev: MediaQueryListEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/change_event)"
    },
    {
      "interface": "MediaQueryList",
      "kind": "method",
      "name": "addListener",
      "parameters": [
        {
          "name": "callback",
          "type": "(this: MediaQueryList, ev: MediaQueryListEvent) => any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "MediaQueryList",
      "kind": "method",
      "name": "removeListener",
      "parameters": [
        {
          "name": "callback",
          "type": "(this: MediaQueryList, ev: MediaQueryListEvent) => any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "MediaQueryList",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaQueryList",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaQueryList",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaQueryList",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaQueryListEvent": [
    {
      "interface": "MediaQueryListEvent",
      "kind": "property",
      "name": "matches",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryListEvent/matches)"
    },
    {
      "interface": "MediaQueryListEvent",
      "kind": "property",
      "name": "media",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryListEvent/media)"
    }
  ],
  "MediaRecorderEventMap": [
    {
      "interface": "MediaRecorderEventMap",
      "kind": "property",
      "name": "\"dataavailable\"",
      "type": "BlobEvent"
    },
    {
      "interface": "MediaRecorderEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "ErrorEvent"
    },
    {
      "interface": "MediaRecorderEventMap",
      "kind": "property",
      "name": "\"pause\"",
      "type": "Event"
    },
    {
      "interface": "MediaRecorderEventMap",
      "kind": "property",
      "name": "\"resume\"",
      "type": "Event"
    },
    {
      "interface": "MediaRecorderEventMap",
      "kind": "property",
      "name": "\"start\"",
      "type": "Event"
    },
    {
      "interface": "MediaRecorderEventMap",
      "kind": "property",
      "name": "\"stop\"",
      "type": "Event"
    }
  ],
  "MediaRecorder": [
    {
      "interface": "MediaRecorder",
      "kind": "property",
      "name": "audioBitsPerSecond",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/audioBitsPerSecond)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "property",
      "name": "mimeType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/mimeType)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "event",
      "name": "ondataavailable",
      "type": "(this: MediaRecorder, ev: BlobEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/dataavailable_event)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "event",
      "name": "onerror",
      "type": "(this: MediaRecorder, ev: ErrorEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/error_event)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "event",
      "name": "onpause",
      "type": "(this: MediaRecorder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/pause_event)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "event",
      "name": "onresume",
      "type": "(this: MediaRecorder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/resume_event)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "event",
      "name": "onstart",
      "type": "(this: MediaRecorder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/start_event)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "event",
      "name": "onstop",
      "type": "(this: MediaRecorder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stop_event)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "property",
      "name": "state",
      "type": "RecordingState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/state)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "property",
      "name": "stream",
      "type": "MediaStream",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stream)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "property",
      "name": "videoBitsPerSecond",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/videoBitsPerSecond)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "pause",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/pause)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "requestData",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/requestData)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "resume",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/resume)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "start",
      "parameters": [
        {
          "name": "timeslice",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/start)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "stop",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stop)"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaRecorder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaSession": [
    {
      "interface": "MediaSession",
      "kind": "property",
      "name": "metadata",
      "type": "MediaMetadata",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/metadata)"
    },
    {
      "interface": "MediaSession",
      "kind": "property",
      "name": "playbackState",
      "type": "MediaSessionPlaybackState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/playbackState)"
    },
    {
      "interface": "MediaSession",
      "kind": "method",
      "name": "setActionHandler",
      "parameters": [
        {
          "name": "action",
          "type": "MediaSessionAction",
          "optional": false,
          "rest": false
        },
        {
          "name": "handler",
          "type": "MediaSessionActionHandler",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/setActionHandler)"
    },
    {
      "interface": "MediaSession",
      "kind": "method",
      "name": "setPositionState",
      "parameters": [
        {
          "name": "state",
          "type": "MediaPositionState",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/setPositionState)"
    }
  ],
  "MediaSourceEventMap": [
    {
      "interface": "MediaSourceEventMap",
      "kind": "property",
      "name": "\"sourceclose\"",
      "type": "Event"
    },
    {
      "interface": "MediaSourceEventMap",
      "kind": "property",
      "name": "\"sourceended\"",
      "type": "Event"
    },
    {
      "interface": "MediaSourceEventMap",
      "kind": "property",
      "name": "\"sourceopen\"",
      "type": "Event"
    }
  ],
  "MediaSource": [
    {
      "interface": "MediaSource",
      "kind": "property",
      "name": "activeSourceBuffers",
      "type": "SourceBufferList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/activeSourceBuffers)"
    },
    {
      "interface": "MediaSource",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/duration)"
    },
    {
      "interface": "MediaSource",
      "kind": "event",
      "name": "onsourceclose",
      "type": "(this: MediaSource, ev: Event) => any"
    },
    {
      "interface": "MediaSource",
      "kind": "event",
      "name": "onsourceended",
      "type": "(this: MediaSource, ev: Event) => any"
    },
    {
      "interface": "MediaSource",
      "kind": "event",
      "name": "onsourceopen",
      "type": "(this: MediaSource, ev: Event) => any"
    },
    {
      "interface": "MediaSource",
      "kind": "property",
      "name": "readyState",
      "type": "ReadyState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/readyState)"
    },
    {
      "interface": "MediaSource",
      "kind": "property",
      "name": "sourceBuffers",
      "type": "SourceBufferList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/sourceBuffers)"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "addSourceBuffer",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SourceBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/addSourceBuffer)"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "clearLiveSeekableRange",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/clearLiveSeekableRange)"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "endOfStream",
      "parameters": [
        {
          "name": "error",
          "type": "EndOfStreamError",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/endOfStream)"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "removeSourceBuffer",
      "parameters": [
        {
          "name": "sourceBuffer",
          "type": "SourceBuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/removeSourceBuffer)"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "setLiveSeekableRange",
      "parameters": [
        {
          "name": "start",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/setLiveSeekableRange)"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaSource, ev: MediaSourceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaSource, ev: MediaSourceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaSource",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaStreamEventMap": [
    {
      "interface": "MediaStreamEventMap",
      "kind": "property",
      "name": "\"addtrack\"",
      "type": "MediaStreamTrackEvent"
    },
    {
      "interface": "MediaStreamEventMap",
      "kind": "property",
      "name": "\"removetrack\"",
      "type": "MediaStreamTrackEvent"
    }
  ],
  "MediaStream": [
    {
      "interface": "MediaStream",
      "kind": "property",
      "name": "active",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/active)"
    },
    {
      "interface": "MediaStream",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/id)"
    },
    {
      "interface": "MediaStream",
      "kind": "event",
      "name": "onaddtrack",
      "type": "(this: MediaStream, ev: MediaStreamTrackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addtrack_event)"
    },
    {
      "interface": "MediaStream",
      "kind": "event",
      "name": "onremovetrack",
      "type": "(this: MediaStream, ev: MediaStreamTrackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/removetrack_event)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "addTrack",
      "parameters": [
        {
          "name": "track",
          "type": "MediaStreamTrack",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addTrack)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "clone",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaStream",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/clone)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "getAudioTracks",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaStreamTrack[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getAudioTracks)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "getTrackById",
      "parameters": [
        {
          "name": "trackId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaStreamTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getTrackById)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "getTracks",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaStreamTrack[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getTracks)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "getVideoTracks",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaStreamTrack[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getVideoTracks)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "removeTrack",
      "parameters": [
        {
          "name": "track",
          "type": "MediaStreamTrack",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/removeTrack)"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaStream, ev: MediaStreamEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaStream, ev: MediaStreamEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaStream",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaStreamAudioDestinationNode": [
    {
      "interface": "MediaStreamAudioDestinationNode",
      "kind": "property",
      "name": "stream",
      "type": "MediaStream",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamAudioDestinationNode/stream)"
    }
  ],
  "MediaStreamAudioSourceNode": [
    {
      "interface": "MediaStreamAudioSourceNode",
      "kind": "property",
      "name": "mediaStream",
      "type": "MediaStream",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamAudioSourceNode/mediaStream)"
    }
  ],
  "MediaStreamTrackEventMap": [
    {
      "interface": "MediaStreamTrackEventMap",
      "kind": "property",
      "name": "\"ended\"",
      "type": "Event"
    },
    {
      "interface": "MediaStreamTrackEventMap",
      "kind": "property",
      "name": "\"mute\"",
      "type": "Event"
    },
    {
      "interface": "MediaStreamTrackEventMap",
      "kind": "property",
      "name": "\"unmute\"",
      "type": "Event"
    }
  ],
  "MediaStreamTrack": [
    {
      "interface": "MediaStreamTrack",
      "kind": "property",
      "name": "contentHint",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/contentHint)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "property",
      "name": "enabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/enabled)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/id)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "property",
      "name": "kind",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/kind)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "property",
      "name": "label",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/label)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "property",
      "name": "muted",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/muted)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "event",
      "name": "onended",
      "type": "(this: MediaStreamTrack, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/ended_event)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "event",
      "name": "onmute",
      "type": "(this: MediaStreamTrack, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/mute_event)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "event",
      "name": "onunmute",
      "type": "(this: MediaStreamTrack, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/unmute_event)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "property",
      "name": "readyState",
      "type": "MediaStreamTrackState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/readyState)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "applyConstraints",
      "parameters": [
        {
          "name": "constraints",
          "type": "MediaTrackConstraints",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/applyConstraints)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "clone",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaStreamTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/clone)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "getCapabilities",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaTrackCapabilities",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/getCapabilities)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "getConstraints",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaTrackConstraints",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/getConstraints)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "getSettings",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MediaTrackSettings",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/getSettings)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "stop",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/stop)"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MediaStreamTrack",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MediaStreamTrackEvent": [
    {
      "interface": "MediaStreamTrackEvent",
      "kind": "property",
      "name": "track",
      "type": "MediaStreamTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrackEvent/track)"
    }
  ],
  "MessageChannel": [
    {
      "interface": "MessageChannel",
      "kind": "property",
      "name": "port1",
      "type": "MessagePort",
      "doc": "Returns the first MessagePort object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel/port1)"
    },
    {
      "interface": "MessageChannel",
      "kind": "property",
      "name": "port2",
      "type": "MessagePort",
      "doc": "Returns the second MessagePort object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel/port2)"
    }
  ],
  "MessageEvent": [
    {
      "interface": "MessageEvent",
      "kind": "property",
      "name": "data",
      "type": "T",
      "doc": "Returns the data of the message.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/data)"
    },
    {
      "interface": "MessageEvent",
      "kind": "property",
      "name": "lastEventId",
      "type": "string",
      "doc": "Returns the last event ID string, for server-sent events.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/lastEventId)"
    },
    {
      "interface": "MessageEvent",
      "kind": "property",
      "name": "origin",
      "type": "string",
      "doc": "Returns the origin of the message, for server-sent events and cross-document messaging.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/origin)"
    },
    {
      "interface": "MessageEvent",
      "kind": "property",
      "name": "ports",
      "type": "readonly MessagePort[]",
      "doc": "Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/ports)"
    },
    {
      "interface": "MessageEvent",
      "kind": "property",
      "name": "source",
      "type": "MessageEventSource",
      "doc": "Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/source)"
    },
    {
      "interface": "MessageEvent",
      "kind": "method",
      "name": "initMessageEvent",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubbles",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelable",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "data",
          "type": "any",
          "optional": true,
          "rest": false
        },
        {
          "name": "origin",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "lastEventId",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "source",
          "type": "MessageEventSource",
          "optional": true,
          "rest": false
        },
        {
          "name": "ports",
          "type": "MessagePort[]",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 1,
      "returnType": "void"
    }
  ],
  "MessageEventTargetEventMap": [
    {
      "interface": "MessageEventTargetEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "MessageEventTargetEventMap",
      "kind": "property",
      "name": "\"messageerror\"",
      "type": "MessageEvent<any>"
    }
  ],
  "MessageEventTarget": [
    {
      "interface": "MessageEventTarget",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: T, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event)"
    },
    {
      "interface": "MessageEventTarget",
      "kind": "event",
      "name": "onmessageerror",
      "type": "(this: T, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event)"
    },
    {
      "interface": "MessageEventTarget",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: T, ev: MessageEventTargetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MessageEventTarget",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MessageEventTarget",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: T, ev: MessageEventTargetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MessageEventTarget",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MessagePortEventMap": [
    {
      "interface": "MessagePortEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "MessagePortEventMap",
      "kind": "property",
      "name": "\"messageerror\"",
      "type": "MessageEvent<any>"
    }
  ],
  "MessagePort": [
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Disconnects the port, so that it is no longer active.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/close)"
    },
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "transfer",
          "type": "Transferable[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n\nThrows a \"DataCloneError\" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage)"
    },
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "StructuredSerializeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "start",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Begins dispatching messages received on the port.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/start)"
    },
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MessagePort, ev: MessagePortEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: MessagePort, ev: MessagePortEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "MessagePort",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "MimeType": [
    {
      "interface": "MimeType",
      "kind": "property",
      "name": "description",
      "type": "string",
      "doc": "Returns the MIME type's description."
    },
    {
      "interface": "MimeType",
      "kind": "property",
      "name": "enabledPlugin",
      "type": "Plugin",
      "doc": "Returns the Plugin object that implements this MIME type."
    },
    {
      "interface": "MimeType",
      "kind": "property",
      "name": "suffixes",
      "type": "string",
      "doc": "Returns the MIME type's typical file extensions, in a comma-separated list."
    },
    {
      "interface": "MimeType",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "Returns the MIME type."
    }
  ],
  "MimeTypeArray": [
    {
      "interface": "MimeTypeArray",
      "kind": "property",
      "name": "length",
      "type": "number"
    },
    {
      "interface": "MimeTypeArray",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MimeType"
    },
    {
      "interface": "MimeTypeArray",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MimeType"
    }
  ],
  "MouseEvent": [
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "altKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/altKey)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "button",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/button)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "buttons",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/buttons)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "clientX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/clientX)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "clientY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/clientY)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "ctrlKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/ctrlKey)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "layerX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/layerX)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "layerY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/layerY)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "metaKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/metaKey)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "movementX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/movementX)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "movementY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/movementY)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "offsetX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/offsetX)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "offsetY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/offsetY)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "pageX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/pageX)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "pageY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/pageY)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "relatedTarget",
      "type": "EventTarget",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/relatedTarget)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "screenX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/screenX)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "screenY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/screenY)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "shiftKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/shiftKey)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "x",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/x)"
    },
    {
      "interface": "MouseEvent",
      "kind": "property",
      "name": "y",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/y)"
    },
    {
      "interface": "MouseEvent",
      "kind": "method",
      "name": "getModifierState",
      "parameters": [
        {
          "name": "keyArg",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/getModifierState)"
    },
    {
      "interface": "MouseEvent",
      "kind": "method",
      "name": "initMouseEvent",
      "parameters": [
        {
          "name": "typeArg",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "canBubbleArg",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "cancelableArg",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "viewArg",
          "type": "Window",
          "optional": false,
          "rest": false
        },
        {
          "name": "detailArg",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "screenXArg",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "screenYArg",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "clientXArg",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "clientYArg",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "ctrlKeyArg",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "altKeyArg",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "shiftKeyArg",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "metaKeyArg",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "buttonArg",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "relatedTargetArg",
          "type": "EventTarget",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 15,
      "required": 15,
      "returnType": "void"
    }
  ],
  "MutationObserver": [
    {
      "interface": "MutationObserver",
      "kind": "method",
      "name": "disconnect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Stops observer from observing any mutations. Until the observe() method is used again, observer's callback will not be invoked.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationObserver/disconnect)"
    },
    {
      "interface": "MutationObserver",
      "kind": "method",
      "name": "observe",
      "parameters": [
        {
          "name": "target",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "MutationObserverInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).\n\nThe options argument allows for setting mutation observation options via object members.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationObserver/observe)"
    },
    {
      "interface": "MutationObserver",
      "kind": "method",
      "name": "takeRecords",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "MutationRecord[]",
      "doc": "Empties the record queue and returns what was in there.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationObserver/takeRecords)"
    }
  ],
  "MutationRecord": [
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "addedNodes",
      "type": "NodeList",
      "doc": "Return the nodes added and removed respectively.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/addedNodes)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "attributeName",
      "type": "string",
      "doc": "Returns the local name of the changed attribute, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/attributeName)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "attributeNamespace",
      "type": "string",
      "doc": "Returns the namespace of the changed attribute, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/attributeNamespace)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "nextSibling",
      "type": "Node",
      "doc": "Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/nextSibling)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "oldValue",
      "type": "string",
      "doc": "The return value depends on type. For \"attributes\", it is the value of the changed attribute before the change. For \"characterData\", it is the data of the changed node before the change. For \"childList\", it is null.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/oldValue)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "previousSibling",
      "type": "Node",
      "doc": "Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/previousSibling)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "removedNodes",
      "type": "NodeList",
      "doc": "Return the nodes added and removed respectively.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/removedNodes)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "target",
      "type": "Node",
      "doc": "Returns the node the mutation affected, depending on the type. For \"attributes\", it is the element whose attribute changed. For \"characterData\", it is the CharacterData node. For \"childList\", it is the node whose children changed.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/target)"
    },
    {
      "interface": "MutationRecord",
      "kind": "property",
      "name": "type",
      "type": "MutationRecordType",
      "doc": "Returns \"attributes\" if it was an attribute mutation. \"characterData\" if it was a mutation to a CharacterData node. And \"childList\" if it was a mutation to the tree of nodes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/type)"
    }
  ],
  "NamedNodeMap": [
    {
      "interface": "NamedNodeMap",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/length)"
    },
    {
      "interface": "NamedNodeMap",
      "kind": "method",
      "name": "getNamedItem",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/getNamedItem)"
    },
    {
      "interface": "NamedNodeMap",
      "kind": "method",
      "name": "getNamedItemNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/getNamedItemNS)"
    },
    {
      "interface": "NamedNodeMap",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/item)"
    },
    {
      "interface": "NamedNodeMap",
      "kind": "method",
      "name": "removeNamedItem",
      "parameters": [
        {
          "name": "qualifiedName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/removeNamedItem)"
    },
    {
      "interface": "NamedNodeMap",
      "kind": "method",
      "name": "removeNamedItemNS",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/removeNamedItemNS)"
    },
    {
      "interface": "NamedNodeMap",
      "kind": "method",
      "name": "setNamedItem",
      "parameters": [
        {
          "name": "attr",
          "type": "Attr",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/setNamedItem)"
    },
    {
      "interface": "NamedNodeMap",
      "kind": "method",
      "name": "setNamedItemNS",
      "parameters": [
        {
          "name": "attr",
          "type": "Attr",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Attr",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/setNamedItemNS)"
    }
  ],
  "NavigationActivation": [
    {
      "interface": "NavigationActivation",
      "kind": "property",
      "name": "entry",
      "type": "NavigationHistoryEntry",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationActivation/entry)"
    },
    {
      "interface": "NavigationActivation",
      "kind": "property",
      "name": "from",
      "type": "NavigationHistoryEntry",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationActivation/from)"
    },
    {
      "interface": "NavigationActivation",
      "kind": "property",
      "name": "navigationType",
      "type": "NavigationType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationActivation/navigationType)"
    }
  ],
  "NavigationHistoryEntryEventMap": [
    {
      "interface": "NavigationHistoryEntryEventMap",
      "kind": "property",
      "name": "\"dispose\"",
      "type": "Event"
    }
  ],
  "NavigationHistoryEntry": [
    {
      "interface": "NavigationHistoryEntry",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/id)"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "property",
      "name": "index",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/index)"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "property",
      "name": "key",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/key)"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "event",
      "name": "ondispose",
      "type": "(this: NavigationHistoryEntry, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/dispose_event)"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "property",
      "name": "sameDocument",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/sameDocument)"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/url)"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "method",
      "name": "getState",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/getState)"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: NavigationHistoryEntry, ev: NavigationHistoryEntryEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: NavigationHistoryEntry, ev: NavigationHistoryEntryEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "NavigationHistoryEntry",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "NavigationPreloadManager": [
    {
      "interface": "NavigationPreloadManager",
      "kind": "method",
      "name": "disable",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/disable)"
    },
    {
      "interface": "NavigationPreloadManager",
      "kind": "method",
      "name": "enable",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/enable)"
    },
    {
      "interface": "NavigationPreloadManager",
      "kind": "method",
      "name": "getState",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<NavigationPreloadState>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/getState)"
    },
    {
      "interface": "NavigationPreloadManager",
      "kind": "method",
      "name": "setHeaderValue",
      "parameters": [
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/setHeaderValue)"
    }
  ],
  "Navigator": [
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "clipboard",
      "type": "Clipboard",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/clipboard)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "credentials",
      "type": "CredentialsContainer",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/credentials)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "doNotTrack",
      "type": "string"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "geolocation",
      "type": "Geolocation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/geolocation)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "maxTouchPoints",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/maxTouchPoints)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "mediaCapabilities",
      "type": "MediaCapabilities",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/mediaCapabilities)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "mediaDevices",
      "type": "MediaDevices",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/mediaDevices)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "mediaSession",
      "type": "MediaSession",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/mediaSession)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "permissions",
      "type": "Permissions",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/permissions)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "serviceWorker",
      "type": "ServiceWorkerContainer",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/serviceWorker)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "userActivation",
      "type": "UserActivation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/userActivation)"
    },
    {
      "interface": "Navigator",
      "kind": "property",
      "name": "wakeLock",
      "type": "WakeLock",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/wakeLock)"
    },
    {
      "interface": "Navigator",
      "kind": "method",
      "name": "canShare",
      "parameters": [
        {
          "name": "data",
          "type": "ShareData",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "boolean",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/canShare)"
    },
    {
      "interface": "Navigator",
      "kind": "method",
      "name": "getGamepads",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Gamepad[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/getGamepads)"
    },
    {
      "interface": "Navigator",
      "kind": "method",
      "name": "requestMIDIAccess",
      "parameters": [
        {
          "name": "options",
          "type": "MIDIOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<MIDIAccess>",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/requestMIDIAccess)"
    },
    {
      "interface": "Navigator",
      "kind": "method",
      "name": "requestMediaKeySystemAccess",
      "parameters": [
        {
          "name": "keySystem",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "supportedConfigurations",
          "type": "MediaKeySystemConfiguration[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<MediaKeySystemAccess>",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/requestMediaKeySystemAccess)"
    },
    {
      "interface": "Navigator",
      "kind": "method",
      "name": "sendBeacon",
      "parameters": [
        {
          "name": "url",
          "type": "string | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "BodyInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/sendBeacon)"
    },
    {
      "interface": "Navigator",
      "kind": "method",
      "name": "share",
      "parameters": [
        {
          "name": "data",
          "type": "ShareData",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/share)"
    },
    {
      "interface": "Navigator",
      "kind": "method",
      "name": "vibrate",
      "parameters": [
        {
          "name": "pattern",
          "type": "VibratePattern",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/vibrate)"
    }
  ],
  "NavigatorAutomationInformation": [
    {
      "interface": "NavigatorAutomationInformation",
      "kind": "property",
      "name": "webdriver",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/webdriver)"
    }
  ],
  "NavigatorBadge": [
    {
      "interface": "NavigatorBadge",
      "kind": "method",
      "name": "clearAppBadge",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/clearAppBadge)"
    },
    {
      "interface": "NavigatorBadge",
      "kind": "method",
      "name": "setAppBadge",
      "parameters": [
        {
          "name": "contents",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/setAppBadge)"
    }
  ],
  "NavigatorConcurrentHardware": [
    {
      "interface": "NavigatorConcurrentHardware",
      "kind": "property",
      "name": "hardwareConcurrency",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/hardwareConcurrency)"
    }
  ],
  "NavigatorContentUtils": [
    {
      "interface": "NavigatorContentUtils",
      "kind": "method",
      "name": "registerProtocolHandler",
      "parameters": [
        {
          "name": "scheme",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "url",
          "type": "string | URL",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/registerProtocolHandler)"
    }
  ],
  "NavigatorCookies": [
    {
      "interface": "NavigatorCookies",
      "kind": "property",
      "name": "cookieEnabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/cookieEnabled)"
    }
  ],
  "NavigatorID": [
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "appCodeName",
      "type": "string"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "appName",
      "type": "string"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "appVersion",
      "type": "string"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "platform",
      "type": "string"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "product",
      "type": "string"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "productSub",
      "type": "string"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "userAgent",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/userAgent)"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "vendor",
      "type": "string"
    },
    {
      "interface": "NavigatorID",
      "kind": "property",
      "name": "vendorSub",
      "type": "string"
    }
  ],
  "NavigatorLanguage": [
    {
      "interface": "NavigatorLanguage",
      "kind": "property",
      "name": "language",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/language)"
    },
    {
      "interface": "NavigatorLanguage",
      "kind": "property",
      "name": "languages",
      "type": "readonly string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/languages)"
    }
  ],
  "NavigatorLocks": [
    {
      "interface": "NavigatorLocks",
      "kind": "property",
      "name": "locks",
      "type": "LockManager",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/locks)"
    }
  ],
  "NavigatorOnLine": [
    {
      "interface": "NavigatorOnLine",
      "kind": "event",
      "name": "onLine",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/onLine)"
    }
  ],
  "NavigatorPlugins": [
    {
      "interface": "NavigatorPlugins",
      "kind": "property",
      "name": "mimeTypes",
      "type": "MimeTypeArray"
    },
    {
      "interface": "NavigatorPlugins",
      "kind": "property",
      "name": "pdfViewerEnabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/pdfViewerEnabled)"
    },
    {
      "interface": "NavigatorPlugins",
      "kind": "property",
      "name": "plugins",
      "type": "PluginArray"
    },
    {
      "interface": "NavigatorPlugins",
      "kind": "method",
      "name": "javaEnabled",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean"
    }
  ],
  "NavigatorStorage": [
    {
      "interface": "NavigatorStorage",
      "kind": "property",
      "name": "storage",
      "type": "StorageManager",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/storage)"
    }
  ],
  "Node": [
    {
      "interface": "Node",
      "kind": "property",
      "name": "baseURI",
      "type": "string",
      "doc": "Returns node's node document's document base URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/baseURI)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "childNodes",
      "type": "NodeListOf<ChildNode>",
      "doc": "Returns the children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/childNodes)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "firstChild",
      "type": "ChildNode",
      "doc": "Returns the first child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/firstChild)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "isConnected",
      "type": "boolean",
      "doc": "Returns true if node is connected and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isConnected)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "lastChild",
      "type": "ChildNode",
      "doc": "Returns the last child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lastChild)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "nextSibling",
      "type": "ChildNode",
      "doc": "Returns the next sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nextSibling)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "nodeName",
      "type": "string",
      "doc": "Returns a string appropriate for the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeName)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "nodeType",
      "type": "number",
      "doc": "Returns the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeType)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "nodeValue",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeValue)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "ownerDocument",
      "type": "Document",
      "doc": "Returns the node document. Returns null for documents.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/ownerDocument)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "parentElement",
      "type": "HTMLElement",
      "doc": "Returns the parent element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentElement)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "parentNode",
      "type": "ParentNode",
      "doc": "Returns the parent.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentNode)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "previousSibling",
      "type": "ChildNode",
      "doc": "Returns the previous sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/previousSibling)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "textContent",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/textContent)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "appendChild",
      "parameters": [
        {
          "name": "node",
          "type": "T",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "T",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/appendChild)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "cloneNode",
      "parameters": [
        {
          "name": "subtree",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Node",
      "doc": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/cloneNode)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "compareDocumentPosition",
      "parameters": [
        {
          "name": "other",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "Returns a bitmask indicating the position of other relative to node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/compareDocumentPosition)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "contains",
      "parameters": [
        {
          "name": "other",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns true if other is an inclusive descendant of node, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/contains)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "getRootNode",
      "parameters": [
        {
          "name": "options",
          "type": "GetRootNodeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Node",
      "doc": "Returns node's root.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/getRootNode)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "hasChildNodes",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "Returns whether node has children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/hasChildNodes)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "insertBefore",
      "parameters": [
        {
          "name": "node",
          "type": "T",
          "optional": false,
          "rest": false
        },
        {
          "name": "child",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "T",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/insertBefore)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "isDefaultNamespace",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isDefaultNamespace)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "isEqualNode",
      "parameters": [
        {
          "name": "otherNode",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns whether node and otherNode have the same properties.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isEqualNode)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "isSameNode",
      "parameters": [
        {
          "name": "otherNode",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isSameNode)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "lookupNamespaceURI",
      "parameters": [
        {
          "name": "prefix",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupNamespaceURI)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "lookupPrefix",
      "parameters": [
        {
          "name": "namespace",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupPrefix)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "normalize",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/normalize)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "removeChild",
      "parameters": [
        {
          "name": "child",
          "type": "T",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "T",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/removeChild)"
    },
    {
      "interface": "Node",
      "kind": "method",
      "name": "replaceChild",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "child",
          "type": "T",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "T",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/replaceChild)"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "ELEMENT_NODE",
      "type": "1",
      "doc": "node is an element."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "ATTRIBUTE_NODE",
      "type": "2"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "TEXT_NODE",
      "type": "3",
      "doc": "node is a Text node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "CDATA_SECTION_NODE",
      "type": "4",
      "doc": "node is a CDATASection node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "ENTITY_REFERENCE_NODE",
      "type": "5"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "ENTITY_NODE",
      "type": "6"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "PROCESSING_INSTRUCTION_NODE",
      "type": "7",
      "doc": "node is a ProcessingInstruction node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "COMMENT_NODE",
      "type": "8",
      "doc": "node is a Comment node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_NODE",
      "type": "9",
      "doc": "node is a document."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_TYPE_NODE",
      "type": "10",
      "doc": "node is a doctype."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_FRAGMENT_NODE",
      "type": "11",
      "doc": "node is a DocumentFragment node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "NOTATION_NODE",
      "type": "12"
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_POSITION_DISCONNECTED",
      "type": "1",
      "doc": "Set when node and other are not in the same tree."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_POSITION_PRECEDING",
      "type": "2",
      "doc": "Set when other is preceding node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_POSITION_FOLLOWING",
      "type": "4",
      "doc": "Set when other is following node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_POSITION_CONTAINS",
      "type": "8",
      "doc": "Set when other is an ancestor of node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_POSITION_CONTAINED_BY",
      "type": "16",
      "doc": "Set when other is a descendant of node."
    },
    {
      "interface": "Node",
      "kind": "property",
      "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "type": "32"
    }
  ],
  "NodeIterator": [
    {
      "interface": "NodeIterator",
      "kind": "property",
      "name": "filter",
      "type": "NodeFilter",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/filter)"
    },
    {
      "interface": "NodeIterator",
      "kind": "property",
      "name": "pointerBeforeReferenceNode",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/pointerBeforeReferenceNode)"
    },
    {
      "interface": "NodeIterator",
      "kind": "property",
      "name": "referenceNode",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/referenceNode)"
    },
    {
      "interface": "NodeIterator",
      "kind": "property",
      "name": "root",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/root)"
    },
    {
      "interface": "NodeIterator",
      "kind": "property",
      "name": "whatToShow",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/whatToShow)"
    },
    {
      "interface": "NodeIterator",
      "kind": "method",
      "name": "detach",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "NodeIterator",
      "kind": "method",
      "name": "nextNode",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/nextNode)"
    },
    {
      "interface": "NodeIterator",
      "kind": "method",
      "name": "previousNode",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/previousNode)"
    }
  ],
  "NodeList": [
    {
      "interface": "NodeList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of nodes in the collection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeList/length)"
    },
    {
      "interface": "NodeList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Node",
      "doc": "Returns the node with index index from the collection. The nodes are sorted in tree order.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeList/item)"
    },
    {
      "interface": "NodeList",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: Node, key: number, parent: NodeList) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Performs the specified action for each node in an list."
    }
  ],
  "NodeListOf": [
    {
      "interface": "NodeListOf",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TNode"
    },
    {
      "interface": "NodeListOf",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: TNode, key: number, parent: NodeListOf<TNode>) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Performs the specified action for each node in an list."
    }
  ],
  "NonDocumentTypeChildNode": [
    {
      "interface": "NonDocumentTypeChildNode",
      "kind": "property",
      "name": "nextElementSibling",
      "type": "Element",
      "doc": "Returns the first following sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/nextElementSibling)"
    },
    {
      "interface": "NonDocumentTypeChildNode",
      "kind": "property",
      "name": "previousElementSibling",
      "type": "Element",
      "doc": "Returns the first preceding sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/previousElementSibling)"
    }
  ],
  "NonElementParentNode": [
    {
      "interface": "NonElementParentNode",
      "kind": "method",
      "name": "getElementById",
      "parameters": [
        {
          "name": "elementId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Element",
      "doc": "Returns the first element within node's descendants whose ID is elementId.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementById)"
    }
  ],
  "NotificationEventMap": [
    {
      "interface": "NotificationEventMap",
      "kind": "property",
      "name": "\"click\"",
      "type": "Event"
    },
    {
      "interface": "NotificationEventMap",
      "kind": "property",
      "name": "\"close\"",
      "type": "Event"
    },
    {
      "interface": "NotificationEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "Event"
    },
    {
      "interface": "NotificationEventMap",
      "kind": "property",
      "name": "\"show\"",
      "type": "Event"
    }
  ],
  "Notification": [
    {
      "interface": "Notification",
      "kind": "property",
      "name": "badge",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/badge)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "body",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/body)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "data",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/data)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "dir",
      "type": "NotificationDirection",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/dir)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "icon",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/icon)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "lang",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/lang)"
    },
    {
      "interface": "Notification",
      "kind": "event",
      "name": "onclick",
      "type": "(this: Notification, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/click_event)"
    },
    {
      "interface": "Notification",
      "kind": "event",
      "name": "onclose",
      "type": "(this: Notification, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close_event)"
    },
    {
      "interface": "Notification",
      "kind": "event",
      "name": "onerror",
      "type": "(this: Notification, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/error_event)"
    },
    {
      "interface": "Notification",
      "kind": "event",
      "name": "onshow",
      "type": "(this: Notification, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/show_event)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "requireInteraction",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/requireInteraction)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "silent",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/silent)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "tag",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/tag)"
    },
    {
      "interface": "Notification",
      "kind": "property",
      "name": "title",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/title)"
    },
    {
      "interface": "Notification",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close)"
    },
    {
      "interface": "Notification",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Notification, ev: NotificationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Notification",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Notification",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Notification, ev: NotificationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Notification",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "OES_draw_buffers_indexed": [
    {
      "interface": "OES_draw_buffers_indexed",
      "kind": "method",
      "name": "blendEquationSeparateiOES",
      "parameters": [
        {
          "name": "buf",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "modeRGB",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "modeAlpha",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendEquationSeparateiOES)"
    },
    {
      "interface": "OES_draw_buffers_indexed",
      "kind": "method",
      "name": "blendEquationiOES",
      "parameters": [
        {
          "name": "buf",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendEquationiOES)"
    },
    {
      "interface": "OES_draw_buffers_indexed",
      "kind": "method",
      "name": "blendFuncSeparateiOES",
      "parameters": [
        {
          "name": "buf",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcRGB",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstRGB",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcAlpha",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstAlpha",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendFuncSeparateiOES)"
    },
    {
      "interface": "OES_draw_buffers_indexed",
      "kind": "method",
      "name": "blendFunciOES",
      "parameters": [
        {
          "name": "buf",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "src",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dst",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendFunciOES)"
    },
    {
      "interface": "OES_draw_buffers_indexed",
      "kind": "method",
      "name": "colorMaskiOES",
      "parameters": [
        {
          "name": "buf",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "r",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "g",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "b",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "a",
          "type": "boolean",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/colorMaskiOES)"
    },
    {
      "interface": "OES_draw_buffers_indexed",
      "kind": "method",
      "name": "disableiOES",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/disableiOES)"
    },
    {
      "interface": "OES_draw_buffers_indexed",
      "kind": "method",
      "name": "enableiOES",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/enableiOES)"
    }
  ],
  "OES_standard_derivatives": [
    {
      "interface": "OES_standard_derivatives",
      "kind": "property",
      "name": "FRAGMENT_SHADER_DERIVATIVE_HINT_OES",
      "type": "35723"
    }
  ],
  "OES_texture_half_float": [
    {
      "interface": "OES_texture_half_float",
      "kind": "property",
      "name": "HALF_FLOAT_OES",
      "type": "36193"
    }
  ],
  "OES_vertex_array_object": [
    {
      "interface": "OES_vertex_array_object",
      "kind": "method",
      "name": "bindVertexArrayOES",
      "parameters": [
        {
          "name": "arrayObject",
          "type": "WebGLVertexArrayObjectOES",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/bindVertexArrayOES)"
    },
    {
      "interface": "OES_vertex_array_object",
      "kind": "method",
      "name": "createVertexArrayOES",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLVertexArrayObjectOES",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/createVertexArrayOES)"
    },
    {
      "interface": "OES_vertex_array_object",
      "kind": "method",
      "name": "deleteVertexArrayOES",
      "parameters": [
        {
          "name": "arrayObject",
          "type": "WebGLVertexArrayObjectOES",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/deleteVertexArrayOES)"
    },
    {
      "interface": "OES_vertex_array_object",
      "kind": "method",
      "name": "isVertexArrayOES",
      "parameters": [
        {
          "name": "arrayObject",
          "type": "WebGLVertexArrayObjectOES",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/isVertexArrayOES)"
    },
    {
      "interface": "OES_vertex_array_object",
      "kind": "property",
      "name": "VERTEX_ARRAY_BINDING_OES",
      "type": "34229"
    }
  ],
  "OVR_multiview2": [
    {
      "interface": "OVR_multiview2",
      "kind": "method",
      "name": "framebufferTextureMultiviewOVR",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "attachment",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "texture",
          "type": "WebGLTexture",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "baseViewIndex",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "numViews",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OVR_multiview2/framebufferTextureMultiviewOVR)"
    },
    {
      "interface": "OVR_multiview2",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR",
      "type": "38448"
    },
    {
      "interface": "OVR_multiview2",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR",
      "type": "38450"
    },
    {
      "interface": "OVR_multiview2",
      "kind": "property",
      "name": "MAX_VIEWS_OVR",
      "type": "38449"
    },
    {
      "interface": "OVR_multiview2",
      "kind": "property",
      "name": "FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR",
      "type": "38451"
    }
  ],
  "OfflineAudioCompletionEvent": [
    {
      "interface": "OfflineAudioCompletionEvent",
      "kind": "property",
      "name": "renderedBuffer",
      "type": "AudioBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioCompletionEvent/renderedBuffer)"
    }
  ],
  "OfflineAudioContextEventMap": [
    {
      "interface": "OfflineAudioContextEventMap",
      "kind": "property",
      "name": "\"complete\"",
      "type": "OfflineAudioCompletionEvent"
    }
  ],
  "OfflineAudioContext": [
    {
      "interface": "OfflineAudioContext",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/length)"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "event",
      "name": "oncomplete",
      "type": "(this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/complete_event)"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "method",
      "name": "resume",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/resume)"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "method",
      "name": "startRendering",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<AudioBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/startRendering)"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "method",
      "name": "suspend",
      "parameters": [
        {
          "name": "suspendTime",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/suspend)"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OfflineAudioContext",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "OffscreenCanvasEventMap": [
    {
      "interface": "OffscreenCanvasEventMap",
      "kind": "property",
      "name": "\"contextlost\"",
      "type": "Event"
    },
    {
      "interface": "OffscreenCanvasEventMap",
      "kind": "property",
      "name": "\"contextrestored\"",
      "type": "Event"
    }
  ],
  "OffscreenCanvas": [
    {
      "interface": "OffscreenCanvas",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/height)"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "event",
      "name": "oncontextlost",
      "type": "(this: OffscreenCanvas, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextlost_event)"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "event",
      "name": "oncontextrestored",
      "type": "(this: OffscreenCanvas, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextrestored_event)"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/width)"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "convertToBlob",
      "parameters": [
        {
          "name": "options",
          "type": "ImageEncodeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<Blob>",
      "doc": "Returns a promise that will fulfill with a new Blob object representing a file containing the image in the OffscreenCanvas object.\n\nThe argument, if provided, is a dictionary that controls the encoding options of the image file to be created. The type field specifies the file format and has a default value of \"image/png\"; that type is also used if the requested type isn't supported. If the image format supports variable quality (such as \"image/jpeg\"), then the quality field is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/convertToBlob)"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"2d\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "OffscreenCanvasRenderingContext2D",
      "doc": "Returns an object that exposes an API for drawing on the OffscreenCanvas object. contextId specifies the desired API: \"2d\", \"bitmaprenderer\", \"webgl\", or \"webgl2\". options is handled by that API.\n\nThis specification defines the \"2d\" context below, which is similar but distinct from the \"2d\" context that is created from a canvas element. The WebGL specifications define the \"webgl\" and \"webgl2\" contexts. [WEBGL]\n\nReturns null if the canvas has already been initialized with another context type (e.g., trying to get a \"2d\" context after getting a \"webgl\" context).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/getContext)"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"bitmaprenderer\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "ImageBitmapRenderingContext"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"webgl\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "WebGLRenderingContext"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "\"webgl2\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "WebGL2RenderingContext"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "getContext",
      "parameters": [
        {
          "name": "contextId",
          "type": "OffscreenRenderingContextId",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "OffscreenRenderingContext"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "transferToImageBitmap",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ImageBitmap",
      "doc": "Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/transferToImageBitmap)"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OffscreenCanvas",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "OffscreenCanvasRenderingContext2D": [
    {
      "interface": "OffscreenCanvasRenderingContext2D",
      "kind": "property",
      "name": "canvas",
      "type": "OffscreenCanvas",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/canvas)"
    }
  ],
  "OscillatorNode": [
    {
      "interface": "OscillatorNode",
      "kind": "property",
      "name": "detune",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/detune)"
    },
    {
      "interface": "OscillatorNode",
      "kind": "property",
      "name": "frequency",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/frequency)"
    },
    {
      "interface": "OscillatorNode",
      "kind": "property",
      "name": "type",
      "type": "OscillatorType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/type)"
    },
    {
      "interface": "OscillatorNode",
      "kind": "method",
      "name": "setPeriodicWave",
      "parameters": [
        {
          "name": "periodicWave",
          "type": "PeriodicWave",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/setPeriodicWave)"
    },
    {
      "interface": "OscillatorNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: OscillatorNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OscillatorNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OscillatorNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: OscillatorNode, ev: AudioScheduledSourceNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "OscillatorNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "OverconstrainedError": [
    {
      "interface": "OverconstrainedError",
      "kind": "property",
      "name": "constraint",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/OverconstrainedError/constraint)"
    }
  ],
  "PageRevealEvent": [
    {
      "interface": "PageRevealEvent",
      "kind": "property",
      "name": "viewTransition",
      "type": "ViewTransition",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PageRevealEvent/viewTransition)"
    }
  ],
  "PageSwapEvent": [
    {
      "interface": "PageSwapEvent",
      "kind": "property",
      "name": "activation",
      "type": "NavigationActivation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PageSwapEvent/activation)"
    },
    {
      "interface": "PageSwapEvent",
      "kind": "property",
      "name": "viewTransition",
      "type": "ViewTransition",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PageSwapEvent/viewTransition)"
    }
  ],
  "PageTransitionEvent": [
    {
      "interface": "PageTransitionEvent",
      "kind": "property",
      "name": "persisted",
      "type": "boolean",
      "doc": "For the pageshow event, returns false if the page is newly being loaded (and the load event will fire). Otherwise, returns true.\n\nFor the pagehide event, returns false if the page is going away for the last time. Otherwise, returns true, meaning that (if nothing conspires to make the page unsalvageable) the page might be reused if the user navigates back to this page.\n\nThings that can cause the page to be unsalvageable include:\n\nThe user agent decided to not keep the Document alive in a session history entry after unload\nHaving iframes that are not salvageable\nActive WebSocket objects\nAborting a Document\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/PageTransitionEvent/persisted)"
    }
  ],
  "PannerNode": [
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "coneInnerAngle",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/coneInnerAngle)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "coneOuterAngle",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/coneOuterAngle)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "coneOuterGain",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/coneOuterGain)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "distanceModel",
      "type": "DistanceModelType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/distanceModel)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "maxDistance",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/maxDistance)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "orientationX",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/orientationX)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "orientationY",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/orientationY)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "orientationZ",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/orientationZ)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "panningModel",
      "type": "PanningModelType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/panningModel)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "positionX",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/positionX)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "positionY",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/positionY)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "positionZ",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/positionZ)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "refDistance",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/refDistance)"
    },
    {
      "interface": "PannerNode",
      "kind": "property",
      "name": "rolloffFactor",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/rolloffFactor)"
    },
    {
      "interface": "PannerNode",
      "kind": "method",
      "name": "setOrientation",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void"
    },
    {
      "interface": "PannerNode",
      "kind": "method",
      "name": "setPosition",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void"
    }
  ],
  "ParentNode": [
    {
      "interface": "ParentNode",
      "kind": "property",
      "name": "childElementCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/childElementCount)"
    },
    {
      "interface": "ParentNode",
      "kind": "property",
      "name": "children",
      "type": "HTMLCollection",
      "doc": "Returns the child elements.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/children)"
    },
    {
      "interface": "ParentNode",
      "kind": "property",
      "name": "firstElementChild",
      "type": "Element",
      "doc": "Returns the first child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/firstElementChild)"
    },
    {
      "interface": "ParentNode",
      "kind": "property",
      "name": "lastElementChild",
      "type": "Element",
      "doc": "Returns the last child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastElementChild)"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "append",
      "parameters": [
        {
          "name": "nodes",
          "type": "(string | Node)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/append)"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "prepend",
      "parameters": [
        {
          "name": "nodes",
          "type": "(string | Node)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/prepend)"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelector",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLElementTagNameMap[K]",
      "doc": "Returns the first element that is a descendant of node that matches selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelector)"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelector",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGElementTagNameMap[K]"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelector",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MathMLElementTagNameMap[K]"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelector",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "HTMLElementDeprecatedTagNameMap[K]"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelector",
      "parameters": [
        {
          "name": "selectors",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "E"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelectorAll",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "NodeListOf<HTMLElementTagNameMap[K]>",
      "doc": "Returns all element descendants of node that match selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelectorAll)"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelectorAll",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "NodeListOf<SVGElementTagNameMap[K]>"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelectorAll",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "NodeListOf<MathMLElementTagNameMap[K]>"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelectorAll",
      "parameters": [
        {
          "name": "selectors",
          "type": "K",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "NodeListOf<HTMLElementDeprecatedTagNameMap[K]>"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "querySelectorAll",
      "parameters": [
        {
          "name": "selectors",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "NodeListOf<E>"
    },
    {
      "interface": "ParentNode",
      "kind": "method",
      "name": "replaceChildren",
      "parameters": [
        {
          "name": "nodes",
          "type": "(string | Node)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/replaceChildren)"
    }
  ],
  "Path2D": [
    {
      "interface": "Path2D",
      "kind": "method",
      "name": "addPath",
      "parameters": [
        {
          "name": "path",
          "type": "Path2D",
          "optional": false,
          "rest": false
        },
        {
          "name": "transform",
          "type": "DOMMatrix2DInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Adds to the path the path given by the argument.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Path2D/addPath)"
    }
  ],
  "PaymentAddress": [
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "addressLine",
      "type": "readonly string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/addressLine)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "city",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/city)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "country",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/country)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "dependentLocality",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/dependentLocality)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "organization",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/organization)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "phone",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/phone)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "postalCode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/postalCode)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "recipient",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/recipient)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "region",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/region)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "property",
      "name": "sortingCode",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/sortingCode)"
    },
    {
      "interface": "PaymentAddress",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/toJSON)"
    }
  ],
  "PaymentMethodChangeEvent": [
    {
      "interface": "PaymentMethodChangeEvent",
      "kind": "property",
      "name": "methodDetails",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodDetails)"
    },
    {
      "interface": "PaymentMethodChangeEvent",
      "kind": "property",
      "name": "methodName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodName)"
    }
  ],
  "PaymentRequestEventMap": [
    {
      "interface": "PaymentRequestEventMap",
      "kind": "property",
      "name": "\"paymentmethodchange\"",
      "type": "PaymentMethodChangeEvent"
    },
    {
      "interface": "PaymentRequestEventMap",
      "kind": "property",
      "name": "\"shippingaddresschange\"",
      "type": "PaymentRequestUpdateEvent"
    },
    {
      "interface": "PaymentRequestEventMap",
      "kind": "property",
      "name": "\"shippingoptionchange\"",
      "type": "PaymentRequestUpdateEvent"
    }
  ],
  "PaymentRequest": [
    {
      "interface": "PaymentRequest",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/id)"
    },
    {
      "interface": "PaymentRequest",
      "kind": "event",
      "name": "onpaymentmethodchange",
      "type": "(this: PaymentRequest, ev: PaymentMethodChangeEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/paymentmethodchange_event)"
    },
    {
      "interface": "PaymentRequest",
      "kind": "event",
      "name": "onshippingaddresschange",
      "type": "(this: PaymentRequest, ev: PaymentRequestUpdateEvent) => any"
    },
    {
      "interface": "PaymentRequest",
      "kind": "event",
      "name": "onshippingoptionchange",
      "type": "(this: PaymentRequest, ev: PaymentRequestUpdateEvent) => any"
    },
    {
      "interface": "PaymentRequest",
      "kind": "property",
      "name": "shippingAddress",
      "type": "PaymentAddress"
    },
    {
      "interface": "PaymentRequest",
      "kind": "property",
      "name": "shippingOption",
      "type": "string"
    },
    {
      "interface": "PaymentRequest",
      "kind": "property",
      "name": "shippingType",
      "type": "PaymentShippingType"
    },
    {
      "interface": "PaymentRequest",
      "kind": "method",
      "name": "abort",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/abort)"
    },
    {
      "interface": "PaymentRequest",
      "kind": "method",
      "name": "canMakePayment",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/canMakePayment)"
    },
    {
      "interface": "PaymentRequest",
      "kind": "method",
      "name": "show",
      "parameters": [
        {
          "name": "detailsPromise",
          "type": "PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<PaymentResponse>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/show)"
    },
    {
      "interface": "PaymentRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PaymentRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PaymentRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PaymentRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "PaymentRequestUpdateEvent": [
    {
      "interface": "PaymentRequestUpdateEvent",
      "kind": "method",
      "name": "updateWith",
      "parameters": [
        {
          "name": "detailsPromise",
          "type": "PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequestUpdateEvent/updateWith)"
    }
  ],
  "PaymentResponseEventMap": [
    {
      "interface": "PaymentResponseEventMap",
      "kind": "property",
      "name": "\"payerdetailchange\"",
      "type": "PaymentRequestUpdateEvent"
    }
  ],
  "PaymentResponse": [
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "details",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/details)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "methodName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/methodName)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "event",
      "name": "onpayerdetailchange",
      "type": "(this: PaymentResponse, ev: PaymentRequestUpdateEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerdetailchange_event)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "payerEmail",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerEmail)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "payerName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerName)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "payerPhone",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerPhone)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "requestId",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/requestId)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "shippingAddress",
      "type": "PaymentAddress",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/shippingAddress)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "property",
      "name": "shippingOption",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/shippingOption)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "method",
      "name": "complete",
      "parameters": [
        {
          "name": "result",
          "type": "PaymentComplete",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/complete)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "method",
      "name": "retry",
      "parameters": [
        {
          "name": "errorFields",
          "type": "PaymentValidationErrors",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/retry)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/toJSON)"
    },
    {
      "interface": "PaymentResponse",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PaymentResponse, ev: PaymentResponseEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PaymentResponse",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PaymentResponse",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PaymentResponse, ev: PaymentResponseEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PaymentResponse",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "PerformanceEventMap": [
    {
      "interface": "PerformanceEventMap",
      "kind": "property",
      "name": "\"resourcetimingbufferfull\"",
      "type": "Event"
    }
  ],
  "Performance": [
    {
      "interface": "Performance",
      "kind": "property",
      "name": "eventCounts",
      "type": "EventCounts",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/eventCounts)"
    },
    {
      "interface": "Performance",
      "kind": "property",
      "name": "navigation",
      "type": "PerformanceNavigation"
    },
    {
      "interface": "Performance",
      "kind": "event",
      "name": "onresourcetimingbufferfull",
      "type": "(this: Performance, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/resourcetimingbufferfull_event)"
    },
    {
      "interface": "Performance",
      "kind": "property",
      "name": "timeOrigin",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin)"
    },
    {
      "interface": "Performance",
      "kind": "property",
      "name": "timing",
      "type": "PerformanceTiming"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "clearMarks",
      "parameters": [
        {
          "name": "markName",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearMarks)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "clearMeasures",
      "parameters": [
        {
          "name": "measureName",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearMeasures)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "clearResourceTimings",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearResourceTimings)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "getEntries",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "PerformanceEntryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntries)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "getEntriesByName",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "PerformanceEntryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByName)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "getEntriesByType",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PerformanceEntryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "mark",
      "parameters": [
        {
          "name": "markName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "markOptions",
          "type": "PerformanceMarkOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "PerformanceMark",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/mark)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "measure",
      "parameters": [
        {
          "name": "measureName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "startOrMeasureOptions",
          "type": "string | PerformanceMeasureOptions",
          "optional": true,
          "rest": false
        },
        {
          "name": "endMark",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "PerformanceMeasure",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/measure)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "now",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/now)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "setResourceTimingBufferSize",
      "parameters": [
        {
          "name": "maxSize",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/setResourceTimingBufferSize)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/toJSON)"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Performance, ev: PerformanceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Performance, ev: PerformanceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Performance",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "PerformanceEntry": [
    {
      "interface": "PerformanceEntry",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/duration)"
    },
    {
      "interface": "PerformanceEntry",
      "kind": "property",
      "name": "entryType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/entryType)"
    },
    {
      "interface": "PerformanceEntry",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/name)"
    },
    {
      "interface": "PerformanceEntry",
      "kind": "property",
      "name": "startTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime)"
    },
    {
      "interface": "PerformanceEntry",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/toJSON)"
    }
  ],
  "PerformanceEventTiming": [
    {
      "interface": "PerformanceEventTiming",
      "kind": "property",
      "name": "cancelable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/cancelable)"
    },
    {
      "interface": "PerformanceEventTiming",
      "kind": "property",
      "name": "processingEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/processingEnd)"
    },
    {
      "interface": "PerformanceEventTiming",
      "kind": "property",
      "name": "processingStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/processingStart)"
    },
    {
      "interface": "PerformanceEventTiming",
      "kind": "property",
      "name": "target",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/target)"
    },
    {
      "interface": "PerformanceEventTiming",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/toJSON)"
    }
  ],
  "PerformanceMark": [
    {
      "interface": "PerformanceMark",
      "kind": "property",
      "name": "detail",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark/detail)"
    }
  ],
  "PerformanceMeasure": [
    {
      "interface": "PerformanceMeasure",
      "kind": "property",
      "name": "detail",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure/detail)"
    }
  ],
  "PerformanceNavigation": [
    {
      "interface": "PerformanceNavigation",
      "kind": "property",
      "name": "redirectCount",
      "type": "number"
    },
    {
      "interface": "PerformanceNavigation",
      "kind": "property",
      "name": "type",
      "type": "number"
    },
    {
      "interface": "PerformanceNavigation",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any"
    },
    {
      "interface": "PerformanceNavigation",
      "kind": "property",
      "name": "TYPE_NAVIGATE",
      "type": "0"
    },
    {
      "interface": "PerformanceNavigation",
      "kind": "property",
      "name": "TYPE_RELOAD",
      "type": "1"
    },
    {
      "interface": "PerformanceNavigation",
      "kind": "property",
      "name": "TYPE_BACK_FORWARD",
      "type": "2"
    },
    {
      "interface": "PerformanceNavigation",
      "kind": "property",
      "name": "TYPE_RESERVED",
      "type": "255"
    }
  ],
  "PerformanceNavigationTiming": [
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "domComplete",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domComplete)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "domContentLoadedEventEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domContentLoadedEventEnd)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "domContentLoadedEventStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domContentLoadedEventStart)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "domInteractive",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domInteractive)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "loadEventEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/loadEventEnd)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "loadEventStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/loadEventStart)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "redirectCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/redirectCount)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "type",
      "type": "NavigationTimingType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/type)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "unloadEventEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/unloadEventEnd)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "property",
      "name": "unloadEventStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/unloadEventStart)"
    },
    {
      "interface": "PerformanceNavigationTiming",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/toJSON)"
    }
  ],
  "PerformanceObserver": [
    {
      "interface": "PerformanceObserver",
      "kind": "method",
      "name": "disconnect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/disconnect)"
    },
    {
      "interface": "PerformanceObserver",
      "kind": "method",
      "name": "observe",
      "parameters": [
        {
          "name": "options",
          "type": "PerformanceObserverInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/observe)"
    },
    {
      "interface": "PerformanceObserver",
      "kind": "method",
      "name": "takeRecords",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "PerformanceEntryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/takeRecords)"
    }
  ],
  "PerformanceObserverEntryList": [
    {
      "interface": "PerformanceObserverEntryList",
      "kind": "method",
      "name": "getEntries",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "PerformanceEntryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntries)"
    },
    {
      "interface": "PerformanceObserverEntryList",
      "kind": "method",
      "name": "getEntriesByName",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "PerformanceEntryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntriesByName)"
    },
    {
      "interface": "PerformanceObserverEntryList",
      "kind": "method",
      "name": "getEntriesByType",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "PerformanceEntryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntriesByType)"
    }
  ],
  "PerformanceResourceTiming": [
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "connectEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/connectEnd)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "connectStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/connectStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "decodedBodySize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/decodedBodySize)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "domainLookupEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/domainLookupEnd)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "domainLookupStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/domainLookupStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "encodedBodySize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/encodedBodySize)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "fetchStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/fetchStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "initiatorType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/initiatorType)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "nextHopProtocol",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/nextHopProtocol)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "redirectEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/redirectEnd)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "redirectStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/redirectStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "requestStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/requestStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "responseEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseEnd)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "responseStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "responseStatus",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseStatus)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "secureConnectionStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/secureConnectionStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "serverTiming",
      "type": "readonly PerformanceServerTiming[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/serverTiming)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "transferSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/transferSize)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "property",
      "name": "workerStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/workerStart)"
    },
    {
      "interface": "PerformanceResourceTiming",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/toJSON)"
    }
  ],
  "PerformanceServerTiming": [
    {
      "interface": "PerformanceServerTiming",
      "kind": "property",
      "name": "description",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/description)"
    },
    {
      "interface": "PerformanceServerTiming",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/duration)"
    },
    {
      "interface": "PerformanceServerTiming",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/name)"
    },
    {
      "interface": "PerformanceServerTiming",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/toJSON)"
    }
  ],
  "PerformanceTiming": [
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "connectEnd",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "connectStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "domComplete",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "domContentLoadedEventEnd",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "domContentLoadedEventStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "domInteractive",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "domLoading",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "domainLookupEnd",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "domainLookupStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "fetchStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "loadEventEnd",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "loadEventStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "navigationStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "redirectEnd",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "redirectStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "requestStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "responseEnd",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "responseStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "secureConnectionStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "unloadEventEnd",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "property",
      "name": "unloadEventStart",
      "type": "number"
    },
    {
      "interface": "PerformanceTiming",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any"
    }
  ],
  "PermissionStatusEventMap": [
    {
      "interface": "PermissionStatusEventMap",
      "kind": "property",
      "name": "\"change\"",
      "type": "Event"
    }
  ],
  "PermissionStatus": [
    {
      "interface": "PermissionStatus",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/name)"
    },
    {
      "interface": "PermissionStatus",
      "kind": "event",
      "name": "onchange",
      "type": "(this: PermissionStatus, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/change_event)"
    },
    {
      "interface": "PermissionStatus",
      "kind": "property",
      "name": "state",
      "type": "PermissionState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/state)"
    },
    {
      "interface": "PermissionStatus",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PermissionStatus",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PermissionStatus",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PermissionStatus",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "Permissions": [
    {
      "interface": "Permissions",
      "kind": "method",
      "name": "query",
      "parameters": [
        {
          "name": "permissionDesc",
          "type": "PermissionDescriptor",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<PermissionStatus>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Permissions/query)"
    }
  ],
  "PictureInPictureEvent": [
    {
      "interface": "PictureInPictureEvent",
      "kind": "property",
      "name": "pictureInPictureWindow",
      "type": "PictureInPictureWindow",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureEvent/pictureInPictureWindow)"
    }
  ],
  "PictureInPictureWindowEventMap": [
    {
      "interface": "PictureInPictureWindowEventMap",
      "kind": "property",
      "name": "\"resize\"",
      "type": "Event"
    }
  ],
  "PictureInPictureWindow": [
    {
      "interface": "PictureInPictureWindow",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/height)"
    },
    {
      "interface": "PictureInPictureWindow",
      "kind": "event",
      "name": "onresize",
      "type": "(this: PictureInPictureWindow, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/resize_event)"
    },
    {
      "interface": "PictureInPictureWindow",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/width)"
    },
    {
      "interface": "PictureInPictureWindow",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PictureInPictureWindow, ev: PictureInPictureWindowEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PictureInPictureWindow",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PictureInPictureWindow",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: PictureInPictureWindow, ev: PictureInPictureWindowEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "PictureInPictureWindow",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "Plugin": [
    {
      "interface": "Plugin",
      "kind": "property",
      "name": "description",
      "type": "string",
      "doc": "Returns the plugin's description."
    },
    {
      "interface": "Plugin",
      "kind": "property",
      "name": "filename",
      "type": "string",
      "doc": "Returns the plugin library's filename, if applicable on the current platform."
    },
    {
      "interface": "Plugin",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of MIME types, represented by MimeType objects, supported by the plugin."
    },
    {
      "interface": "Plugin",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "Returns the plugin's name."
    },
    {
      "interface": "Plugin",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MimeType",
      "doc": "Returns the specified MimeType object."
    },
    {
      "interface": "Plugin",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MimeType"
    }
  ],
  "PluginArray": [
    {
      "interface": "PluginArray",
      "kind": "property",
      "name": "length",
      "type": "number"
    },
    {
      "interface": "PluginArray",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Plugin"
    },
    {
      "interface": "PluginArray",
      "kind": "method",
      "name": "namedItem",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Plugin"
    },
    {
      "interface": "PluginArray",
      "kind": "method",
      "name": "refresh",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    }
  ],
  "PointerEvent": [
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "altitudeAngle",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/altitudeAngle)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "azimuthAngle",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/azimuthAngle)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/height)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "isPrimary",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/isPrimary)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "pointerId",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/pointerId)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "pointerType",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/pointerType)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "pressure",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/pressure)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "tangentialPressure",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/tangentialPressure)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "tiltX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/tiltX)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "tiltY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/tiltY)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "twist",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/twist)"
    },
    {
      "interface": "PointerEvent",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/width)"
    },
    {
      "interface": "PointerEvent",
      "kind": "method",
      "name": "getCoalescedEvents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "PointerEvent[]",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/getCoalescedEvents)"
    },
    {
      "interface": "PointerEvent",
      "kind": "method",
      "name": "getPredictedEvents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "PointerEvent[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/getPredictedEvents)"
    }
  ],
  "PopStateEvent": [
    {
      "interface": "PopStateEvent",
      "kind": "property",
      "name": "hasUAVisualTransition",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PopStateEvent/hasUAVisualTransition)"
    },
    {
      "interface": "PopStateEvent",
      "kind": "property",
      "name": "state",
      "type": "any",
      "doc": "Returns a copy of the information that was provided to pushState() or replaceState().\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/PopStateEvent/state)"
    }
  ],
  "PopoverInvokerElement": [
    {
      "interface": "PopoverInvokerElement",
      "kind": "property",
      "name": "popoverTargetAction",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/popoverTargetAction)"
    },
    {
      "interface": "PopoverInvokerElement",
      "kind": "property",
      "name": "popoverTargetElement",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/popoverTargetElement)"
    }
  ],
  "ProcessingInstruction": [
    {
      "interface": "ProcessingInstruction",
      "kind": "property",
      "name": "ownerDocument",
      "type": "Document"
    },
    {
      "interface": "ProcessingInstruction",
      "kind": "property",
      "name": "target",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ProcessingInstruction/target)"
    }
  ],
  "ProgressEvent": [
    {
      "interface": "ProgressEvent",
      "kind": "property",
      "name": "lengthComputable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/lengthComputable)"
    },
    {
      "interface": "ProgressEvent",
      "kind": "property",
      "name": "loaded",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/loaded)"
    },
    {
      "interface": "ProgressEvent",
      "kind": "property",
      "name": "target",
      "type": "T"
    },
    {
      "interface": "ProgressEvent",
      "kind": "property",
      "name": "total",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/total)"
    }
  ],
  "PromiseRejectionEvent": [
    {
      "interface": "PromiseRejectionEvent",
      "kind": "property",
      "name": "promise",
      "type": "Promise<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise)"
    },
    {
      "interface": "PromiseRejectionEvent",
      "kind": "property",
      "name": "reason",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason)"
    }
  ],
  "PublicKeyCredential": [
    {
      "interface": "PublicKeyCredential",
      "kind": "property",
      "name": "authenticatorAttachment",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/authenticatorAttachment)"
    },
    {
      "interface": "PublicKeyCredential",
      "kind": "property",
      "name": "rawId",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/rawId)"
    },
    {
      "interface": "PublicKeyCredential",
      "kind": "property",
      "name": "response",
      "type": "AuthenticatorResponse",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/response)"
    },
    {
      "interface": "PublicKeyCredential",
      "kind": "method",
      "name": "getClientExtensionResults",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "AuthenticationExtensionsClientOutputs",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/getClientExtensionResults)"
    },
    {
      "interface": "PublicKeyCredential",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/toJSON)"
    }
  ],
  "PushManager": [
    {
      "interface": "PushManager",
      "kind": "method",
      "name": "getSubscription",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<PushSubscription>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/getSubscription)"
    },
    {
      "interface": "PushManager",
      "kind": "method",
      "name": "permissionState",
      "parameters": [
        {
          "name": "options",
          "type": "PushSubscriptionOptionsInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<PermissionState>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/permissionState)"
    },
    {
      "interface": "PushManager",
      "kind": "method",
      "name": "subscribe",
      "parameters": [
        {
          "name": "options",
          "type": "PushSubscriptionOptionsInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<PushSubscription>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/subscribe)"
    }
  ],
  "PushSubscription": [
    {
      "interface": "PushSubscription",
      "kind": "property",
      "name": "endpoint",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/endpoint)"
    },
    {
      "interface": "PushSubscription",
      "kind": "property",
      "name": "expirationTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/expirationTime)"
    },
    {
      "interface": "PushSubscription",
      "kind": "property",
      "name": "options",
      "type": "PushSubscriptionOptions",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/options)"
    },
    {
      "interface": "PushSubscription",
      "kind": "method",
      "name": "getKey",
      "parameters": [
        {
          "name": "name",
          "type": "PushEncryptionKeyName",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/getKey)"
    },
    {
      "interface": "PushSubscription",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "PushSubscriptionJSON",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/toJSON)"
    },
    {
      "interface": "PushSubscription",
      "kind": "method",
      "name": "unsubscribe",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/unsubscribe)"
    }
  ],
  "PushSubscriptionOptions": [
    {
      "interface": "PushSubscriptionOptions",
      "kind": "property",
      "name": "applicationServerKey",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions/applicationServerKey)"
    },
    {
      "interface": "PushSubscriptionOptions",
      "kind": "property",
      "name": "userVisibleOnly",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions/userVisibleOnly)"
    }
  ],
  "RTCCertificate": [
    {
      "interface": "RTCCertificate",
      "kind": "property",
      "name": "expires",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCCertificate/expires)"
    },
    {
      "interface": "RTCCertificate",
      "kind": "method",
      "name": "getFingerprints",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCDtlsFingerprint[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCCertificate/getFingerprints)"
    }
  ],
  "RTCDTMFSenderEventMap": [
    {
      "interface": "RTCDTMFSenderEventMap",
      "kind": "property",
      "name": "\"tonechange\"",
      "type": "RTCDTMFToneChangeEvent"
    }
  ],
  "RTCDTMFSender": [
    {
      "interface": "RTCDTMFSender",
      "kind": "property",
      "name": "canInsertDTMF",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/canInsertDTMF)"
    },
    {
      "interface": "RTCDTMFSender",
      "kind": "event",
      "name": "ontonechange",
      "type": "(this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/tonechange_event)"
    },
    {
      "interface": "RTCDTMFSender",
      "kind": "property",
      "name": "toneBuffer",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/toneBuffer)"
    },
    {
      "interface": "RTCDTMFSender",
      "kind": "method",
      "name": "insertDTMF",
      "parameters": [
        {
          "name": "tones",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "duration",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "interToneGap",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/insertDTMF)"
    },
    {
      "interface": "RTCDTMFSender",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDTMFSender",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDTMFSender",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDTMFSender",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "RTCDTMFToneChangeEvent": [
    {
      "interface": "RTCDTMFToneChangeEvent",
      "kind": "property",
      "name": "tone",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFToneChangeEvent/tone)"
    }
  ],
  "RTCDataChannelEventMap": [
    {
      "interface": "RTCDataChannelEventMap",
      "kind": "property",
      "name": "\"bufferedamountlow\"",
      "type": "Event"
    },
    {
      "interface": "RTCDataChannelEventMap",
      "kind": "property",
      "name": "\"close\"",
      "type": "Event"
    },
    {
      "interface": "RTCDataChannelEventMap",
      "kind": "property",
      "name": "\"closing\"",
      "type": "Event"
    },
    {
      "interface": "RTCDataChannelEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "RTCErrorEvent"
    },
    {
      "interface": "RTCDataChannelEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "RTCDataChannelEventMap",
      "kind": "property",
      "name": "\"open\"",
      "type": "Event"
    }
  ],
  "RTCDataChannel": [
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "binaryType",
      "type": "BinaryType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/binaryType)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "bufferedAmount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedAmount)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "bufferedAmountLowThreshold",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "id",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/id)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "label",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/label)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "maxPacketLifeTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/maxPacketLifeTime)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "maxRetransmits",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/maxRetransmits)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "negotiated",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/negotiated)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "event",
      "name": "onbufferedamountlow",
      "type": "(this: RTCDataChannel, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedamountlow_event)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "event",
      "name": "onclose",
      "type": "(this: RTCDataChannel, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close_event)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "event",
      "name": "onclosing",
      "type": "(this: RTCDataChannel, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/closing_event)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "event",
      "name": "onerror",
      "type": "(this: RTCDataChannel, ev: RTCErrorEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/error_event)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: RTCDataChannel, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/message_event)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "event",
      "name": "onopen",
      "type": "(this: RTCDataChannel, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/open_event)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "ordered",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/ordered)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "protocol",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/protocol)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "property",
      "name": "readyState",
      "type": "RTCDataChannelState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/readyState)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "send",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send)"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "send",
      "parameters": [
        {
          "name": "data",
          "type": "Blob",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "send",
      "parameters": [
        {
          "name": "data",
          "type": "ArrayBuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "send",
      "parameters": [
        {
          "name": "data",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDataChannel",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "RTCDataChannelEvent": [
    {
      "interface": "RTCDataChannelEvent",
      "kind": "property",
      "name": "channel",
      "type": "RTCDataChannel",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannelEvent/channel)"
    }
  ],
  "RTCDtlsTransportEventMap": [
    {
      "interface": "RTCDtlsTransportEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "RTCErrorEvent"
    },
    {
      "interface": "RTCDtlsTransportEventMap",
      "kind": "property",
      "name": "\"statechange\"",
      "type": "Event"
    }
  ],
  "RTCDtlsTransport": [
    {
      "interface": "RTCDtlsTransport",
      "kind": "property",
      "name": "iceTransport",
      "type": "RTCIceTransport",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/iceTransport)"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "event",
      "name": "onerror",
      "type": "(this: RTCDtlsTransport, ev: RTCErrorEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/error_event)"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "event",
      "name": "onstatechange",
      "type": "(this: RTCDtlsTransport, ev: Event) => any"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "property",
      "name": "state",
      "type": "RTCDtlsTransportState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/state)"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "method",
      "name": "getRemoteCertificates",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ArrayBuffer[]"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCDtlsTransport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "RTCEncodedAudioFrame": [
    {
      "interface": "RTCEncodedAudioFrame",
      "kind": "property",
      "name": "data",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/data)"
    },
    {
      "interface": "RTCEncodedAudioFrame",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/timestamp)"
    },
    {
      "interface": "RTCEncodedAudioFrame",
      "kind": "method",
      "name": "getMetadata",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCEncodedAudioFrameMetadata",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/getMetadata)"
    }
  ],
  "RTCEncodedVideoFrame": [
    {
      "interface": "RTCEncodedVideoFrame",
      "kind": "property",
      "name": "data",
      "type": "ArrayBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/data)"
    },
    {
      "interface": "RTCEncodedVideoFrame",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/timestamp)"
    },
    {
      "interface": "RTCEncodedVideoFrame",
      "kind": "property",
      "name": "type",
      "type": "RTCEncodedVideoFrameType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/type)"
    },
    {
      "interface": "RTCEncodedVideoFrame",
      "kind": "method",
      "name": "getMetadata",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCEncodedVideoFrameMetadata",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/getMetadata)"
    }
  ],
  "RTCError": [
    {
      "interface": "RTCError",
      "kind": "property",
      "name": "errorDetail",
      "type": "RTCErrorDetailType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/errorDetail)"
    },
    {
      "interface": "RTCError",
      "kind": "property",
      "name": "receivedAlert",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/receivedAlert)"
    },
    {
      "interface": "RTCError",
      "kind": "property",
      "name": "sctpCauseCode",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/sctpCauseCode)"
    },
    {
      "interface": "RTCError",
      "kind": "property",
      "name": "sdpLineNumber",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/sdpLineNumber)"
    },
    {
      "interface": "RTCError",
      "kind": "property",
      "name": "sentAlert",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/sentAlert)"
    }
  ],
  "RTCErrorEvent": [
    {
      "interface": "RTCErrorEvent",
      "kind": "property",
      "name": "error",
      "type": "RTCError",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCErrorEvent/error)"
    }
  ],
  "RTCIceCandidate": [
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "address",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/address)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "candidate",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/candidate)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "component",
      "type": "RTCIceComponent",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/component)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "foundation",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/foundation)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "port",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/port)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "priority",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/priority)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "protocol",
      "type": "RTCIceProtocol",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/protocol)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "relatedAddress",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/relatedAddress)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "relatedPort",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/relatedPort)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "sdpMLineIndex",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/sdpMLineIndex)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "sdpMid",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/sdpMid)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "tcpType",
      "type": "RTCIceTcpCandidateType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/tcpType)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "type",
      "type": "RTCIceCandidateType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/type)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "property",
      "name": "usernameFragment",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/usernameFragment)"
    },
    {
      "interface": "RTCIceCandidate",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCIceCandidateInit",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/toJSON)"
    }
  ],
  "RTCIceCandidatePair": [
    {
      "interface": "RTCIceCandidatePair",
      "kind": "property",
      "name": "local",
      "type": "RTCIceCandidate"
    },
    {
      "interface": "RTCIceCandidatePair",
      "kind": "property",
      "name": "remote",
      "type": "RTCIceCandidate"
    }
  ],
  "RTCIceTransportEventMap": [
    {
      "interface": "RTCIceTransportEventMap",
      "kind": "property",
      "name": "\"gatheringstatechange\"",
      "type": "Event"
    },
    {
      "interface": "RTCIceTransportEventMap",
      "kind": "property",
      "name": "\"selectedcandidatepairchange\"",
      "type": "Event"
    },
    {
      "interface": "RTCIceTransportEventMap",
      "kind": "property",
      "name": "\"statechange\"",
      "type": "Event"
    }
  ],
  "RTCIceTransport": [
    {
      "interface": "RTCIceTransport",
      "kind": "property",
      "name": "gatheringState",
      "type": "RTCIceGathererState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/gatheringState)"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "event",
      "name": "ongatheringstatechange",
      "type": "(this: RTCIceTransport, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/gatheringstatechange_event)"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "event",
      "name": "onselectedcandidatepairchange",
      "type": "(this: RTCIceTransport, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event)"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "event",
      "name": "onstatechange",
      "type": "(this: RTCIceTransport, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/statechange_event)"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "property",
      "name": "state",
      "type": "RTCIceTransportState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/state)"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "method",
      "name": "getSelectedCandidatePair",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCIceCandidatePair",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/getSelectedCandidatePair)"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCIceTransport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "RTCPeerConnectionEventMap": [
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"connectionstatechange\"",
      "type": "Event"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"datachannel\"",
      "type": "RTCDataChannelEvent"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"icecandidate\"",
      "type": "RTCPeerConnectionIceEvent"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"icecandidateerror\"",
      "type": "RTCPeerConnectionIceErrorEvent"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"iceconnectionstatechange\"",
      "type": "Event"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"icegatheringstatechange\"",
      "type": "Event"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"negotiationneeded\"",
      "type": "Event"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"signalingstatechange\"",
      "type": "Event"
    },
    {
      "interface": "RTCPeerConnectionEventMap",
      "kind": "property",
      "name": "\"track\"",
      "type": "RTCTrackEvent"
    }
  ],
  "RTCPeerConnection": [
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "canTrickleIceCandidates",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "connectionState",
      "type": "RTCPeerConnectionState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/connectionState)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "currentLocalDescription",
      "type": "RTCSessionDescription",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/currentLocalDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "currentRemoteDescription",
      "type": "RTCSessionDescription",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/currentRemoteDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "iceConnectionState",
      "type": "RTCIceConnectionState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceConnectionState)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "iceGatheringState",
      "type": "RTCIceGatheringState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceGatheringState)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "localDescription",
      "type": "RTCSessionDescription",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/localDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "onconnectionstatechange",
      "type": "(this: RTCPeerConnection, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/connectionstatechange_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "ondatachannel",
      "type": "(this: RTCPeerConnection, ev: RTCDataChannelEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/datachannel_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "onicecandidate",
      "type": "(this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidate_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "onicecandidateerror",
      "type": "(this: RTCPeerConnection, ev: RTCPeerConnectionIceErrorEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidateerror_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "oniceconnectionstatechange",
      "type": "(this: RTCPeerConnection, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "onicegatheringstatechange",
      "type": "(this: RTCPeerConnection, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "onnegotiationneeded",
      "type": "(this: RTCPeerConnection, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/negotiationneeded_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "onsignalingstatechange",
      "type": "(this: RTCPeerConnection, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/signalingstatechange_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "event",
      "name": "ontrack",
      "type": "(this: RTCPeerConnection, ev: RTCTrackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/track_event)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "pendingLocalDescription",
      "type": "RTCSessionDescription",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/pendingLocalDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "pendingRemoteDescription",
      "type": "RTCSessionDescription",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/pendingRemoteDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "remoteDescription",
      "type": "RTCSessionDescription",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/remoteDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "sctp",
      "type": "RTCSctpTransport",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/sctp)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "property",
      "name": "signalingState",
      "type": "RTCSignalingState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/signalingState)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "addIceCandidate",
      "parameters": [
        {
          "name": "candidate",
          "type": "RTCIceCandidateInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addIceCandidate)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "addIceCandidate",
      "parameters": [
        {
          "name": "candidate",
          "type": "RTCIceCandidateInit",
          "optional": false,
          "rest": false
        },
        {
          "name": "successCallback",
          "type": "VoidFunction",
          "optional": false,
          "rest": false
        },
        {
          "name": "failureCallback",
          "type": "RTCPeerConnectionErrorCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<void>"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "addTrack",
      "parameters": [
        {
          "name": "track",
          "type": "MediaStreamTrack",
          "optional": false,
          "rest": false
        },
        {
          "name": "streams",
          "type": "MediaStream[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "RTCRtpSender",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTrack)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "addTransceiver",
      "parameters": [
        {
          "name": "trackOrKind",
          "type": "string | MediaStreamTrack",
          "optional": false,
          "rest": false
        },
        {
          "name": "init",
          "type": "RTCRtpTransceiverInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "RTCRtpTransceiver",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTransceiver)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/close)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "createAnswer",
      "parameters": [
        {
          "name": "options",
          "type": "RTCAnswerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<RTCSessionDescriptionInit>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/createAnswer)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "createAnswer",
      "parameters": [
        {
          "name": "successCallback",
          "type": "RTCSessionDescriptionCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "failureCallback",
          "type": "RTCPeerConnectionErrorCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<void>"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "createDataChannel",
      "parameters": [
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "dataChannelDict",
          "type": "RTCDataChannelInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "RTCDataChannel",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/createDataChannel)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "createOffer",
      "parameters": [
        {
          "name": "options",
          "type": "RTCOfferOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<RTCSessionDescriptionInit>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/createOffer)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "createOffer",
      "parameters": [
        {
          "name": "successCallback",
          "type": "RTCSessionDescriptionCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "failureCallback",
          "type": "RTCPeerConnectionErrorCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "RTCOfferOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "Promise<void>"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "getConfiguration",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCConfiguration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getConfiguration)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "getReceivers",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCRtpReceiver[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getReceivers)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "getSenders",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCRtpSender[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getSenders)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "getStats",
      "parameters": [
        {
          "name": "selector",
          "type": "MediaStreamTrack",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<RTCStatsReport>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getStats)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "getTransceivers",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCRtpTransceiver[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getTransceivers)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "removeTrack",
      "parameters": [
        {
          "name": "sender",
          "type": "RTCRtpSender",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/removeTrack)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "restartIce",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/restartIce)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "setConfiguration",
      "parameters": [
        {
          "name": "configuration",
          "type": "RTCConfiguration",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/setConfiguration)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "setLocalDescription",
      "parameters": [
        {
          "name": "description",
          "type": "RTCLocalSessionDescriptionInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/setLocalDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "setLocalDescription",
      "parameters": [
        {
          "name": "description",
          "type": "RTCLocalSessionDescriptionInit",
          "optional": false,
          "rest": false
        },
        {
          "name": "successCallback",
          "type": "VoidFunction",
          "optional": false,
          "rest": false
        },
        {
          "name": "failureCallback",
          "type": "RTCPeerConnectionErrorCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<void>"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "setRemoteDescription",
      "parameters": [
        {
          "name": "description",
          "type": "RTCSessionDescriptionInit",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/setRemoteDescription)"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "setRemoteDescription",
      "parameters": [
        {
          "name": "description",
          "type": "RTCSessionDescriptionInit",
          "optional": false,
          "rest": false
        },
        {
          "name": "successCallback",
          "type": "VoidFunction",
          "optional": false,
          "rest": false
        },
        {
          "name": "failureCallback",
          "type": "RTCPeerConnectionErrorCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<void>"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCPeerConnection",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "RTCPeerConnectionIceErrorEvent": [
    {
      "interface": "RTCPeerConnectionIceErrorEvent",
      "kind": "property",
      "name": "address",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnectionIceErrorEvent/address)"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEvent",
      "kind": "property",
      "name": "errorCode",
      "type": "number"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEvent",
      "kind": "property",
      "name": "errorText",
      "type": "string"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEvent",
      "kind": "property",
      "name": "port",
      "type": "number"
    },
    {
      "interface": "RTCPeerConnectionIceErrorEvent",
      "kind": "property",
      "name": "url",
      "type": "string"
    }
  ],
  "RTCPeerConnectionIceEvent": [
    {
      "interface": "RTCPeerConnectionIceEvent",
      "kind": "property",
      "name": "candidate",
      "type": "RTCIceCandidate",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnectionIceEvent/candidate)"
    }
  ],
  "RTCRtpReceiver": [
    {
      "interface": "RTCRtpReceiver",
      "kind": "property",
      "name": "jitterBufferTarget",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/jitterBufferTarget)"
    },
    {
      "interface": "RTCRtpReceiver",
      "kind": "property",
      "name": "track",
      "type": "MediaStreamTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/track)"
    },
    {
      "interface": "RTCRtpReceiver",
      "kind": "property",
      "name": "transform",
      "type": "RTCRtpScriptTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/transform)"
    },
    {
      "interface": "RTCRtpReceiver",
      "kind": "property",
      "name": "transport",
      "type": "RTCDtlsTransport",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/transport)"
    },
    {
      "interface": "RTCRtpReceiver",
      "kind": "method",
      "name": "getContributingSources",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCRtpContributingSource[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getContributingSources)"
    },
    {
      "interface": "RTCRtpReceiver",
      "kind": "method",
      "name": "getParameters",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCRtpReceiveParameters",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getParameters)"
    },
    {
      "interface": "RTCRtpReceiver",
      "kind": "method",
      "name": "getStats",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<RTCStatsReport>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getStats)"
    },
    {
      "interface": "RTCRtpReceiver",
      "kind": "method",
      "name": "getSynchronizationSources",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCRtpSynchronizationSource[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getSynchronizationSources)"
    }
  ],
  "RTCRtpSender": [
    {
      "interface": "RTCRtpSender",
      "kind": "property",
      "name": "dtmf",
      "type": "RTCDTMFSender",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/dtmf)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "property",
      "name": "track",
      "type": "MediaStreamTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/track)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "property",
      "name": "transform",
      "type": "RTCRtpScriptTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/transform)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "property",
      "name": "transport",
      "type": "RTCDtlsTransport",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/transport)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "method",
      "name": "getParameters",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCRtpSendParameters",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/getParameters)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "method",
      "name": "getStats",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<RTCStatsReport>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/getStats)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "method",
      "name": "replaceTrack",
      "parameters": [
        {
          "name": "withTrack",
          "type": "MediaStreamTrack",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/replaceTrack)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "method",
      "name": "setParameters",
      "parameters": [
        {
          "name": "parameters",
          "type": "RTCRtpSendParameters",
          "optional": false,
          "rest": false
        },
        {
          "name": "setParameterOptions",
          "type": "RTCSetParameterOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/setParameters)"
    },
    {
      "interface": "RTCRtpSender",
      "kind": "method",
      "name": "setStreams",
      "parameters": [
        {
          "name": "streams",
          "type": "MediaStream[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/setStreams)"
    }
  ],
  "RTCRtpTransceiver": [
    {
      "interface": "RTCRtpTransceiver",
      "kind": "property",
      "name": "currentDirection",
      "type": "RTCRtpTransceiverDirection",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/currentDirection)"
    },
    {
      "interface": "RTCRtpTransceiver",
      "kind": "property",
      "name": "direction",
      "type": "RTCRtpTransceiverDirection",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/direction)"
    },
    {
      "interface": "RTCRtpTransceiver",
      "kind": "property",
      "name": "mid",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/mid)"
    },
    {
      "interface": "RTCRtpTransceiver",
      "kind": "property",
      "name": "receiver",
      "type": "RTCRtpReceiver",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/receiver)"
    },
    {
      "interface": "RTCRtpTransceiver",
      "kind": "property",
      "name": "sender",
      "type": "RTCRtpSender",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/sender)"
    },
    {
      "interface": "RTCRtpTransceiver",
      "kind": "method",
      "name": "setCodecPreferences",
      "parameters": [
        {
          "name": "codecs",
          "type": "RTCRtpCodec[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/setCodecPreferences)"
    },
    {
      "interface": "RTCRtpTransceiver",
      "kind": "method",
      "name": "stop",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/stop)"
    }
  ],
  "RTCSctpTransportEventMap": [
    {
      "interface": "RTCSctpTransportEventMap",
      "kind": "property",
      "name": "\"statechange\"",
      "type": "Event"
    }
  ],
  "RTCSctpTransport": [
    {
      "interface": "RTCSctpTransport",
      "kind": "property",
      "name": "maxChannels",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/maxChannels)"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "property",
      "name": "maxMessageSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/maxMessageSize)"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "event",
      "name": "onstatechange",
      "type": "(this: RTCSctpTransport, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/statechange_event)"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "property",
      "name": "state",
      "type": "RTCSctpTransportState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/state)"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "property",
      "name": "transport",
      "type": "RTCDtlsTransport",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/transport)"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RTCSctpTransport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "RTCSessionDescription": [
    {
      "interface": "RTCSessionDescription",
      "kind": "property",
      "name": "sdp",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSessionDescription/sdp)"
    },
    {
      "interface": "RTCSessionDescription",
      "kind": "property",
      "name": "type",
      "type": "RTCSdpType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSessionDescription/type)"
    },
    {
      "interface": "RTCSessionDescription",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "RTCSessionDescriptionInit",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSessionDescription/toJSON)"
    }
  ],
  "RTCStatsReport": [
    {
      "interface": "RTCStatsReport",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: any, key: string, parent: RTCStatsReport) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "RTCTrackEvent": [
    {
      "interface": "RTCTrackEvent",
      "kind": "property",
      "name": "receiver",
      "type": "RTCRtpReceiver",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/receiver)"
    },
    {
      "interface": "RTCTrackEvent",
      "kind": "property",
      "name": "streams",
      "type": "readonly MediaStream[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/streams)"
    },
    {
      "interface": "RTCTrackEvent",
      "kind": "property",
      "name": "track",
      "type": "MediaStreamTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/track)"
    },
    {
      "interface": "RTCTrackEvent",
      "kind": "property",
      "name": "transceiver",
      "type": "RTCRtpTransceiver",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/transceiver)"
    }
  ],
  "RadioNodeList": [
    {
      "interface": "RadioNodeList",
      "kind": "property",
      "name": "value",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RadioNodeList/value)"
    }
  ],
  "Range": [
    {
      "interface": "Range",
      "kind": "property",
      "name": "commonAncestorContainer",
      "type": "Node",
      "doc": "Returns the node, furthest away from the document, that is an ancestor of both range's start node and end node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/commonAncestorContainer)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "cloneContents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DocumentFragment",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/cloneContents)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "cloneRange",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Range",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/cloneRange)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "collapse",
      "parameters": [
        {
          "name": "toStart",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/collapse)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "compareBoundaryPoints",
      "parameters": [
        {
          "name": "how",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sourceRange",
          "type": "Range",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/compareBoundaryPoints)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "comparePoint",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "Returns −1 if the point is before the range, 0 if the point is in the range, and 1 if the point is after the range.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/comparePoint)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "createContextualFragment",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DocumentFragment",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/createContextualFragment)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "deleteContents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/deleteContents)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "detach",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/detach)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "extractContents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DocumentFragment",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/extractContents)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "getBoundingClientRect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/getBoundingClientRect)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "getClientRects",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMRectList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/getClientRects)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "insertNode",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/insertNode)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "intersectsNode",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns whether range intersects node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/intersectsNode)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "isPointInRange",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/isPointInRange)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "selectNode",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/selectNode)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "selectNodeContents",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/selectNodeContents)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "setEnd",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setEnd)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "setEndAfter",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setEndAfter)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "setEndBefore",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setEndBefore)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "setStart",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setStart)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "setStartAfter",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setStartAfter)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "setStartBefore",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setStartBefore)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "surroundContents",
      "parameters": [
        {
          "name": "newParent",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/surroundContents)"
    },
    {
      "interface": "Range",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    },
    {
      "interface": "Range",
      "kind": "property",
      "name": "START_TO_START",
      "type": "0"
    },
    {
      "interface": "Range",
      "kind": "property",
      "name": "START_TO_END",
      "type": "1"
    },
    {
      "interface": "Range",
      "kind": "property",
      "name": "END_TO_END",
      "type": "2"
    },
    {
      "interface": "Range",
      "kind": "property",
      "name": "END_TO_START",
      "type": "3"
    }
  ],
  "ReadableByteStreamController": [
    {
      "interface": "ReadableByteStreamController",
      "kind": "property",
      "name": "byobRequest",
      "type": "ReadableStreamBYOBRequest",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/byobRequest)"
    },
    {
      "interface": "ReadableByteStreamController",
      "kind": "property",
      "name": "desiredSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/desiredSize)"
    },
    {
      "interface": "ReadableByteStreamController",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/close)"
    },
    {
      "interface": "ReadableByteStreamController",
      "kind": "method",
      "name": "enqueue",
      "parameters": [
        {
          "name": "chunk",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/enqueue)"
    },
    {
      "interface": "ReadableByteStreamController",
      "kind": "method",
      "name": "error",
      "parameters": [
        {
          "name": "e",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error)"
    }
  ],
  "ReadableStream": [
    {
      "interface": "ReadableStream",
      "kind": "property",
      "name": "locked",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
    },
    {
      "interface": "ReadableStream",
      "kind": "method",
      "name": "cancel",
      "parameters": [
        {
          "name": "reason",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel)"
    },
    {
      "interface": "ReadableStream",
      "kind": "method",
      "name": "getReader",
      "parameters": [
        {
          "name": "options",
          "type": "{ mode: \"byob\"; }",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ReadableStreamBYOBReader",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader)"
    },
    {
      "interface": "ReadableStream",
      "kind": "method",
      "name": "getReader",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ReadableStreamDefaultReader<R>"
    },
    {
      "interface": "ReadableStream",
      "kind": "method",
      "name": "getReader",
      "parameters": [
        {
          "name": "options",
          "type": "ReadableStreamGetReaderOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "ReadableStreamReader<R>"
    },
    {
      "interface": "ReadableStream",
      "kind": "method",
      "name": "pipeThrough",
      "parameters": [
        {
          "name": "transform",
          "type": "ReadableWritablePair<T, R>",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "StreamPipeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "ReadableStream<T>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeThrough)"
    },
    {
      "interface": "ReadableStream",
      "kind": "method",
      "name": "pipeTo",
      "parameters": [
        {
          "name": "destination",
          "type": "WritableStream<R>",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "StreamPipeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeTo)"
    },
    {
      "interface": "ReadableStream",
      "kind": "method",
      "name": "tee",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "[ReadableStream<R>, ReadableStream<R>]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/tee)"
    }
  ],
  "ReadableStreamBYOBReader": [
    {
      "interface": "ReadableStreamBYOBReader",
      "kind": "method",
      "name": "read",
      "parameters": [
        {
          "name": "view",
          "type": "T",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<ReadableStreamReadResult<T>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/read)"
    },
    {
      "interface": "ReadableStreamBYOBReader",
      "kind": "method",
      "name": "releaseLock",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/releaseLock)"
    }
  ],
  "ReadableStreamBYOBRequest": [
    {
      "interface": "ReadableStreamBYOBRequest",
      "kind": "property",
      "name": "view",
      "type": "ArrayBufferView<ArrayBufferLike>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/view)"
    },
    {
      "interface": "ReadableStreamBYOBRequest",
      "kind": "method",
      "name": "respond",
      "parameters": [
        {
          "name": "bytesWritten",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respond)"
    },
    {
      "interface": "ReadableStreamBYOBRequest",
      "kind": "method",
      "name": "respondWithNewView",
      "parameters": [
        {
          "name": "view",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respondWithNewView)"
    }
  ],
  "ReadableStreamDefaultController": [
    {
      "interface": "ReadableStreamDefaultController",
      "kind": "property",
      "name": "desiredSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize)"
    },
    {
      "interface": "ReadableStreamDefaultController",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/close)"
    },
    {
      "interface": "ReadableStreamDefaultController",
      "kind": "method",
      "name": "enqueue",
      "parameters": [
        {
          "name": "chunk",
          "type": "R",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/enqueue)"
    },
    {
      "interface": "ReadableStreamDefaultController",
      "kind": "method",
      "name": "error",
      "parameters": [
        {
          "name": "e",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error)"
    }
  ],
  "ReadableStreamDefaultReader": [
    {
      "interface": "ReadableStreamDefaultReader",
      "kind": "method",
      "name": "read",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<ReadableStreamReadResult<R>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/read)"
    },
    {
      "interface": "ReadableStreamDefaultReader",
      "kind": "method",
      "name": "releaseLock",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/releaseLock)"
    }
  ],
  "ReadableStreamGenericReader": [
    {
      "interface": "ReadableStreamGenericReader",
      "kind": "property",
      "name": "closed",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/closed)"
    },
    {
      "interface": "ReadableStreamGenericReader",
      "kind": "method",
      "name": "cancel",
      "parameters": [
        {
          "name": "reason",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel)"
    }
  ],
  "RemotePlaybackEventMap": [
    {
      "interface": "RemotePlaybackEventMap",
      "kind": "property",
      "name": "\"connect\"",
      "type": "Event"
    },
    {
      "interface": "RemotePlaybackEventMap",
      "kind": "property",
      "name": "\"connecting\"",
      "type": "Event"
    },
    {
      "interface": "RemotePlaybackEventMap",
      "kind": "property",
      "name": "\"disconnect\"",
      "type": "Event"
    }
  ],
  "RemotePlayback": [
    {
      "interface": "RemotePlayback",
      "kind": "event",
      "name": "onconnect",
      "type": "(this: RemotePlayback, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connect_event)"
    },
    {
      "interface": "RemotePlayback",
      "kind": "event",
      "name": "onconnecting",
      "type": "(this: RemotePlayback, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connecting_event)"
    },
    {
      "interface": "RemotePlayback",
      "kind": "event",
      "name": "ondisconnect",
      "type": "(this: RemotePlayback, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/disconnect_event)"
    },
    {
      "interface": "RemotePlayback",
      "kind": "property",
      "name": "state",
      "type": "RemotePlaybackState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/state)"
    },
    {
      "interface": "RemotePlayback",
      "kind": "method",
      "name": "cancelWatchAvailability",
      "parameters": [
        {
          "name": "id",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/cancelWatchAvailability)"
    },
    {
      "interface": "RemotePlayback",
      "kind": "method",
      "name": "prompt",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/prompt)"
    },
    {
      "interface": "RemotePlayback",
      "kind": "method",
      "name": "watchAvailability",
      "parameters": [
        {
          "name": "callback",
          "type": "RemotePlaybackAvailabilityCallback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Promise<number>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/watchAvailability)"
    },
    {
      "interface": "RemotePlayback",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RemotePlayback",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RemotePlayback",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "RemotePlayback",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "Report": [
    {
      "interface": "Report",
      "kind": "property",
      "name": "body",
      "type": "ReportBody",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/body)"
    },
    {
      "interface": "Report",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/type)"
    },
    {
      "interface": "Report",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/url)"
    },
    {
      "interface": "Report",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any"
    }
  ],
  "ReportBody": [
    {
      "interface": "ReportBody",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody/toJSON)"
    }
  ],
  "ReportingObserver": [
    {
      "interface": "ReportingObserver",
      "kind": "method",
      "name": "disconnect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/disconnect)"
    },
    {
      "interface": "ReportingObserver",
      "kind": "method",
      "name": "observe",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/observe)"
    },
    {
      "interface": "ReportingObserver",
      "kind": "method",
      "name": "takeRecords",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "ReportList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/takeRecords)"
    }
  ],
  "Request": [
    {
      "interface": "Request",
      "kind": "property",
      "name": "cache",
      "type": "RequestCache",
      "doc": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "credentials",
      "type": "RequestCredentials",
      "doc": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "destination",
      "type": "RequestDestination",
      "doc": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "headers",
      "type": "Headers",
      "doc": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "integrity",
      "type": "string",
      "doc": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "keepalive",
      "type": "boolean",
      "doc": "Returns a boolean indicating whether or not request can outlive the global in which it was created.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "method",
      "type": "string",
      "doc": "Returns request's HTTP method, which is \"GET\" by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "mode",
      "type": "RequestMode",
      "doc": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "redirect",
      "type": "RequestRedirect",
      "doc": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "referrer",
      "type": "string",
      "doc": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "referrerPolicy",
      "type": "ReferrerPolicy",
      "doc": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal",
      "doc": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)"
    },
    {
      "interface": "Request",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "Returns the URL of request as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)"
    },
    {
      "interface": "Request",
      "kind": "method",
      "name": "clone",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Request",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/clone)"
    }
  ],
  "ResizeObserver": [
    {
      "interface": "ResizeObserver",
      "kind": "method",
      "name": "disconnect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserver/disconnect)"
    },
    {
      "interface": "ResizeObserver",
      "kind": "method",
      "name": "observe",
      "parameters": [
        {
          "name": "target",
          "type": "Element",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ResizeObserverOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserver/observe)"
    },
    {
      "interface": "ResizeObserver",
      "kind": "method",
      "name": "unobserve",
      "parameters": [
        {
          "name": "target",
          "type": "Element",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserver/unobserve)"
    }
  ],
  "ResizeObserverEntry": [
    {
      "interface": "ResizeObserverEntry",
      "kind": "property",
      "name": "borderBoxSize",
      "type": "readonly ResizeObserverSize[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/borderBoxSize)"
    },
    {
      "interface": "ResizeObserverEntry",
      "kind": "property",
      "name": "contentBoxSize",
      "type": "readonly ResizeObserverSize[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/contentBoxSize)"
    },
    {
      "interface": "ResizeObserverEntry",
      "kind": "property",
      "name": "contentRect",
      "type": "DOMRectReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/contentRect)"
    },
    {
      "interface": "ResizeObserverEntry",
      "kind": "property",
      "name": "devicePixelContentBoxSize",
      "type": "readonly ResizeObserverSize[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/devicePixelContentBoxSize)"
    },
    {
      "interface": "ResizeObserverEntry",
      "kind": "property",
      "name": "target",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/target)"
    }
  ],
  "ResizeObserverSize": [
    {
      "interface": "ResizeObserverSize",
      "kind": "property",
      "name": "blockSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverSize/blockSize)"
    },
    {
      "interface": "ResizeObserverSize",
      "kind": "property",
      "name": "inlineSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverSize/inlineSize)"
    }
  ],
  "Response": [
    {
      "interface": "Response",
      "kind": "property",
      "name": "headers",
      "type": "Headers",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/headers)"
    },
    {
      "interface": "Response",
      "kind": "property",
      "name": "ok",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/ok)"
    },
    {
      "interface": "Response",
      "kind": "property",
      "name": "redirected",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/redirected)"
    },
    {
      "interface": "Response",
      "kind": "property",
      "name": "status",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/status)"
    },
    {
      "interface": "Response",
      "kind": "property",
      "name": "statusText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/statusText)"
    },
    {
      "interface": "Response",
      "kind": "property",
      "name": "type",
      "type": "ResponseType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/type)"
    },
    {
      "interface": "Response",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/url)"
    },
    {
      "interface": "Response",
      "kind": "method",
      "name": "clone",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Response",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/clone)"
    }
  ],
  "SVGAElement": [
    {
      "interface": "SVGAElement",
      "kind": "property",
      "name": "rel",
      "type": "string"
    },
    {
      "interface": "SVGAElement",
      "kind": "property",
      "name": "target",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAElement/target)"
    },
    {
      "interface": "SVGAElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGAngle": [
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "unitType",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/unitType)"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "value",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/value)"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "valueAsString",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/valueAsString)"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "valueInSpecifiedUnits",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/valueInSpecifiedUnits)"
    },
    {
      "interface": "SVGAngle",
      "kind": "method",
      "name": "convertToSpecifiedUnits",
      "parameters": [
        {
          "name": "unitType",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/convertToSpecifiedUnits)"
    },
    {
      "interface": "SVGAngle",
      "kind": "method",
      "name": "newValueSpecifiedUnits",
      "parameters": [
        {
          "name": "unitType",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "valueInSpecifiedUnits",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/newValueSpecifiedUnits)"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "SVG_ANGLETYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "SVG_ANGLETYPE_UNSPECIFIED",
      "type": "1"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "SVG_ANGLETYPE_DEG",
      "type": "2"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "SVG_ANGLETYPE_RAD",
      "type": "3"
    },
    {
      "interface": "SVGAngle",
      "kind": "property",
      "name": "SVG_ANGLETYPE_GRAD",
      "type": "4"
    }
  ],
  "SVGAnimateElement": [
    {
      "interface": "SVGAnimateElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGAnimateMotionElement": [
    {
      "interface": "SVGAnimateMotionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateMotionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateMotionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateMotionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGAnimateTransformElement": [
    {
      "interface": "SVGAnimateTransformElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimateTransformElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateTransformElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateTransformElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimateTransformElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimateTransformElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGAnimatedAngle": [
    {
      "interface": "SVGAnimatedAngle",
      "kind": "property",
      "name": "animVal",
      "type": "SVGAngle",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedAngle/animVal)"
    },
    {
      "interface": "SVGAnimatedAngle",
      "kind": "property",
      "name": "baseVal",
      "type": "SVGAngle",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedAngle/baseVal)"
    }
  ],
  "SVGAnimatedBoolean": [
    {
      "interface": "SVGAnimatedBoolean",
      "kind": "property",
      "name": "animVal",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedBoolean/animVal)"
    },
    {
      "interface": "SVGAnimatedBoolean",
      "kind": "property",
      "name": "baseVal",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedBoolean/baseVal)"
    }
  ],
  "SVGAnimatedEnumeration": [
    {
      "interface": "SVGAnimatedEnumeration",
      "kind": "property",
      "name": "animVal",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedEnumeration/animVal)"
    },
    {
      "interface": "SVGAnimatedEnumeration",
      "kind": "property",
      "name": "baseVal",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedEnumeration/baseVal)"
    }
  ],
  "SVGAnimatedInteger": [
    {
      "interface": "SVGAnimatedInteger",
      "kind": "property",
      "name": "animVal",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedInteger/animVal)"
    },
    {
      "interface": "SVGAnimatedInteger",
      "kind": "property",
      "name": "baseVal",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedInteger/baseVal)"
    }
  ],
  "SVGAnimatedLength": [
    {
      "interface": "SVGAnimatedLength",
      "kind": "property",
      "name": "animVal",
      "type": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLength/animVal)"
    },
    {
      "interface": "SVGAnimatedLength",
      "kind": "property",
      "name": "baseVal",
      "type": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLength/baseVal)"
    }
  ],
  "SVGAnimatedLengthList": [
    {
      "interface": "SVGAnimatedLengthList",
      "kind": "property",
      "name": "animVal",
      "type": "SVGLengthList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLengthList/animVal)"
    },
    {
      "interface": "SVGAnimatedLengthList",
      "kind": "property",
      "name": "baseVal",
      "type": "SVGLengthList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLengthList/baseVal)"
    }
  ],
  "SVGAnimatedNumber": [
    {
      "interface": "SVGAnimatedNumber",
      "kind": "property",
      "name": "animVal",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumber/animVal)"
    },
    {
      "interface": "SVGAnimatedNumber",
      "kind": "property",
      "name": "baseVal",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumber/baseVal)"
    }
  ],
  "SVGAnimatedNumberList": [
    {
      "interface": "SVGAnimatedNumberList",
      "kind": "property",
      "name": "animVal",
      "type": "SVGNumberList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumberList/animVal)"
    },
    {
      "interface": "SVGAnimatedNumberList",
      "kind": "property",
      "name": "baseVal",
      "type": "SVGNumberList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumberList/baseVal)"
    }
  ],
  "SVGAnimatedPoints": [
    {
      "interface": "SVGAnimatedPoints",
      "kind": "property",
      "name": "animatedPoints",
      "type": "SVGPointList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPolygonElement/animatedPoints)"
    },
    {
      "interface": "SVGAnimatedPoints",
      "kind": "property",
      "name": "points",
      "type": "SVGPointList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPolygonElement/points)"
    }
  ],
  "SVGAnimatedPreserveAspectRatio": [
    {
      "interface": "SVGAnimatedPreserveAspectRatio",
      "kind": "property",
      "name": "animVal",
      "type": "SVGPreserveAspectRatio",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedPreserveAspectRatio/animVal)"
    },
    {
      "interface": "SVGAnimatedPreserveAspectRatio",
      "kind": "property",
      "name": "baseVal",
      "type": "SVGPreserveAspectRatio",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedPreserveAspectRatio/baseVal)"
    }
  ],
  "SVGAnimatedRect": [
    {
      "interface": "SVGAnimatedRect",
      "kind": "property",
      "name": "animVal",
      "type": "DOMRectReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedRect/animVal)"
    },
    {
      "interface": "SVGAnimatedRect",
      "kind": "property",
      "name": "baseVal",
      "type": "DOMRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedRect/baseVal)"
    }
  ],
  "SVGAnimatedString": [
    {
      "interface": "SVGAnimatedString",
      "kind": "property",
      "name": "animVal",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedString/animVal)"
    },
    {
      "interface": "SVGAnimatedString",
      "kind": "property",
      "name": "baseVal",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedString/baseVal)"
    }
  ],
  "SVGAnimatedTransformList": [
    {
      "interface": "SVGAnimatedTransformList",
      "kind": "property",
      "name": "animVal",
      "type": "SVGTransformList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedTransformList/animVal)"
    },
    {
      "interface": "SVGAnimatedTransformList",
      "kind": "property",
      "name": "baseVal",
      "type": "SVGTransformList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedTransformList/baseVal)"
    }
  ],
  "SVGAnimationElement": [
    {
      "interface": "SVGAnimationElement",
      "kind": "property",
      "name": "targetElement",
      "type": "SVGElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/targetElement)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "beginElement",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/beginElement)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "beginElementAt",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/beginElementAt)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "endElement",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/endElement)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "endElementAt",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/endElementAt)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "getCurrentTime",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/getCurrentTime)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "getSimpleDuration",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/getSimpleDuration)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "getStartTime",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/getStartTime)"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGAnimationElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGCircleElement": [
    {
      "interface": "SVGCircleElement",
      "kind": "property",
      "name": "cx",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGCircleElement/cx)"
    },
    {
      "interface": "SVGCircleElement",
      "kind": "property",
      "name": "cy",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGCircleElement/cy)"
    },
    {
      "interface": "SVGCircleElement",
      "kind": "property",
      "name": "r",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGCircleElement/r)"
    },
    {
      "interface": "SVGCircleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGCircleElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGCircleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGCircleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGCircleElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGCircleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGClipPathElement": [
    {
      "interface": "SVGClipPathElement",
      "kind": "property",
      "name": "clipPathUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGClipPathElement/clipPathUnits)"
    },
    {
      "interface": "SVGClipPathElement",
      "kind": "property",
      "name": "transform",
      "type": "SVGAnimatedTransformList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGClipPathElement/transform)"
    },
    {
      "interface": "SVGClipPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGClipPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGClipPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGClipPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGComponentTransferFunctionElement": [
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "amplitude",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/amplitude)"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "exponent",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/exponent)"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "intercept",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/intercept)"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "offset",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/offset)"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "slope",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/slope)"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "tableValues",
      "type": "SVGAnimatedNumberList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/tableValues)"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "type",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/type)"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "type": "1"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "type": "2"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "type": "3"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "type": "4"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "property",
      "name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "type": "5"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGComponentTransferFunctionElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGDefsElement": [
    {
      "interface": "SVGDefsElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGDefsElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGDefsElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGDefsElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGDefsElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGDefsElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGDescElement": [
    {
      "interface": "SVGDescElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGDescElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGDescElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGDescElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGDescElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGDescElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGElement": [
    {
      "interface": "SVGElement",
      "kind": "property",
      "name": "className",
      "type": "any"
    },
    {
      "interface": "SVGElement",
      "kind": "property",
      "name": "ownerSVGElement",
      "type": "SVGSVGElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/ownerSVGElement)"
    },
    {
      "interface": "SVGElement",
      "kind": "property",
      "name": "viewportElement",
      "type": "SVGElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/viewportElement)"
    },
    {
      "interface": "SVGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGEllipseElement": [
    {
      "interface": "SVGEllipseElement",
      "kind": "property",
      "name": "cx",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGEllipseElement",
      "kind": "property",
      "name": "cy",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGEllipseElement",
      "kind": "property",
      "name": "rx",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGEllipseElement",
      "kind": "property",
      "name": "ry",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGEllipseElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGEllipseElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGEllipseElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGEllipseElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEBlendElement": [
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "in2",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "mode",
      "type": "SVGAnimatedEnumeration"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_NORMAL",
      "type": "1"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_MULTIPLY",
      "type": "2"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_SCREEN",
      "type": "3"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_DARKEN",
      "type": "4"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_LIGHTEN",
      "type": "5"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_OVERLAY",
      "type": "6"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_COLOR_DODGE",
      "type": "7"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_COLOR_BURN",
      "type": "8"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_HARD_LIGHT",
      "type": "9"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_SOFT_LIGHT",
      "type": "10"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_DIFFERENCE",
      "type": "11"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_EXCLUSION",
      "type": "12"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_HUE",
      "type": "13"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_SATURATION",
      "type": "14"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_COLOR",
      "type": "15"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "property",
      "name": "SVG_FEBLEND_MODE_LUMINOSITY",
      "type": "16"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEBlendElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEColorMatrixElement": [
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEColorMatrixElement/in1)"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "type",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEColorMatrixElement/type)"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "values",
      "type": "SVGAnimatedNumberList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEColorMatrixElement/values)"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "SVG_FECOLORMATRIX_TYPE_MATRIX",
      "type": "1"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "SVG_FECOLORMATRIX_TYPE_SATURATE",
      "type": "2"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
      "type": "3"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "property",
      "name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
      "type": "4"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEColorMatrixElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEComponentTransferElement": [
    {
      "interface": "SVGFEComponentTransferElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEComponentTransferElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEComponentTransferElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEComponentTransferElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEComponentTransferElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFECompositeElement": [
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "in2",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "k1",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "k2",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "k3",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "k4",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "operator",
      "type": "SVGAnimatedEnumeration"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "SVG_FECOMPOSITE_OPERATOR_OVER",
      "type": "1"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "SVG_FECOMPOSITE_OPERATOR_IN",
      "type": "2"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "SVG_FECOMPOSITE_OPERATOR_OUT",
      "type": "3"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "SVG_FECOMPOSITE_OPERATOR_ATOP",
      "type": "4"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "SVG_FECOMPOSITE_OPERATOR_XOR",
      "type": "5"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "property",
      "name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
      "type": "6"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFECompositeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEConvolveMatrixElement": [
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "bias",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "divisor",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "edgeMode",
      "type": "SVGAnimatedEnumeration"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "kernelMatrix",
      "type": "SVGAnimatedNumberList"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "kernelUnitLengthX",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "kernelUnitLengthY",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "orderX",
      "type": "SVGAnimatedInteger"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "orderY",
      "type": "SVGAnimatedInteger"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "preserveAlpha",
      "type": "SVGAnimatedBoolean"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "targetX",
      "type": "SVGAnimatedInteger"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "targetY",
      "type": "SVGAnimatedInteger"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "SVG_EDGEMODE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "SVG_EDGEMODE_DUPLICATE",
      "type": "1"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "SVG_EDGEMODE_WRAP",
      "type": "2"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "property",
      "name": "SVG_EDGEMODE_NONE",
      "type": "3"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEConvolveMatrixElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEDiffuseLightingElement": [
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "property",
      "name": "diffuseConstant",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/diffuseConstant)"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/in1)"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "property",
      "name": "kernelUnitLengthX",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/kernelUnitLengthX)"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "property",
      "name": "kernelUnitLengthY",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/kernelUnitLengthY)"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "property",
      "name": "surfaceScale",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/surfaceScale)"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDiffuseLightingElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEDisplacementMapElement": [
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "in2",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "scale",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "xChannelSelector",
      "type": "SVGAnimatedEnumeration"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "yChannelSelector",
      "type": "SVGAnimatedEnumeration"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "SVG_CHANNEL_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "SVG_CHANNEL_R",
      "type": "1"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "SVG_CHANNEL_G",
      "type": "2"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "SVG_CHANNEL_B",
      "type": "3"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "property",
      "name": "SVG_CHANNEL_A",
      "type": "4"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDisplacementMapElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEDistantLightElement": [
    {
      "interface": "SVGFEDistantLightElement",
      "kind": "property",
      "name": "azimuth",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDistantLightElement/azimuth)"
    },
    {
      "interface": "SVGFEDistantLightElement",
      "kind": "property",
      "name": "elevation",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDistantLightElement/elevation)"
    },
    {
      "interface": "SVGFEDistantLightElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDistantLightElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDistantLightElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDistantLightElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEDropShadowElement": [
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "property",
      "name": "dx",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "property",
      "name": "dy",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "property",
      "name": "stdDeviationX",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "property",
      "name": "stdDeviationY",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "method",
      "name": "setStdDeviation",
      "parameters": [
        {
          "name": "stdDeviationX",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "stdDeviationY",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEDropShadowElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEFloodElement": [
    {
      "interface": "SVGFEFloodElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFloodElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFloodElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFloodElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEFuncAElement": [
    {
      "interface": "SVGFEFuncAElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncAElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncAElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncAElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEFuncBElement": [
    {
      "interface": "SVGFEFuncBElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncBElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncBElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncBElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEFuncGElement": [
    {
      "interface": "SVGFEFuncGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEFuncRElement": [
    {
      "interface": "SVGFEFuncRElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncRElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncRElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEFuncRElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEGaussianBlurElement": [
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/in1)"
    },
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "property",
      "name": "stdDeviationX",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/stdDeviationX)"
    },
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "property",
      "name": "stdDeviationY",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/stdDeviationY)"
    },
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "method",
      "name": "setStdDeviation",
      "parameters": [
        {
          "name": "stdDeviationX",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "stdDeviationY",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/setStdDeviation)"
    },
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEGaussianBlurElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEImageElement": [
    {
      "interface": "SVGFEImageElement",
      "kind": "property",
      "name": "preserveAspectRatio",
      "type": "SVGAnimatedPreserveAspectRatio"
    },
    {
      "interface": "SVGFEImageElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEImageElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEImageElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEImageElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEMergeElement": [
    {
      "interface": "SVGFEMergeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMergeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMergeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMergeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEMergeNodeElement": [
    {
      "interface": "SVGFEMergeNodeElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMergeNodeElement/in1)"
    },
    {
      "interface": "SVGFEMergeNodeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMergeNodeElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMergeNodeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMergeNodeElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEMorphologyElement": [
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/in1)"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "property",
      "name": "operator",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/operator)"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "property",
      "name": "radiusX",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/radiusX)"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "property",
      "name": "radiusY",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/radiusY)"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "property",
      "name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "property",
      "name": "SVG_MORPHOLOGY_OPERATOR_ERODE",
      "type": "1"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "property",
      "name": "SVG_MORPHOLOGY_OPERATOR_DILATE",
      "type": "2"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEMorphologyElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEOffsetElement": [
    {
      "interface": "SVGFEOffsetElement",
      "kind": "property",
      "name": "dx",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEOffsetElement",
      "kind": "property",
      "name": "dy",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFEOffsetElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFEOffsetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEOffsetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEOffsetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEOffsetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFEPointLightElement": [
    {
      "interface": "SVGFEPointLightElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEPointLightElement/x)"
    },
    {
      "interface": "SVGFEPointLightElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEPointLightElement/y)"
    },
    {
      "interface": "SVGFEPointLightElement",
      "kind": "property",
      "name": "z",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEPointLightElement/z)"
    },
    {
      "interface": "SVGFEPointLightElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEPointLightElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEPointLightElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFEPointLightElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFESpecularLightingElement": [
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/in1)"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "property",
      "name": "kernelUnitLengthX",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "property",
      "name": "kernelUnitLengthY",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "property",
      "name": "specularConstant",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/specularConstant)"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "property",
      "name": "specularExponent",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/specularExponent)"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "property",
      "name": "surfaceScale",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/surfaceScale)"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFESpecularLightingElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFESpotLightElement": [
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "limitingConeAngle",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "pointsAtX",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "pointsAtY",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "pointsAtZ",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "specularExponent",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpotLightElement/x)"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpotLightElement/y)"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "property",
      "name": "z",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpotLightElement/z)"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFESpotLightElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFETileElement": [
    {
      "interface": "SVGFETileElement",
      "kind": "property",
      "name": "in1",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFETileElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFETileElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFETileElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFETileElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFETileElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFETileElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFETurbulenceElement": [
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "baseFrequencyX",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "baseFrequencyY",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "numOctaves",
      "type": "SVGAnimatedInteger"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "seed",
      "type": "SVGAnimatedNumber"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "stitchTiles",
      "type": "SVGAnimatedEnumeration"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "type",
      "type": "SVGAnimatedEnumeration"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "SVG_TURBULENCE_TYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
      "type": "1"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "SVG_TURBULENCE_TYPE_TURBULENCE",
      "type": "2"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "SVG_STITCHTYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "SVG_STITCHTYPE_STITCH",
      "type": "1"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "property",
      "name": "SVG_STITCHTYPE_NOSTITCH",
      "type": "2"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFETurbulenceElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFilterElement": [
    {
      "interface": "SVGFilterElement",
      "kind": "property",
      "name": "filterUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/filterUnits)"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/height)"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "property",
      "name": "primitiveUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/primitiveUnits)"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/width)"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/x)"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/y)"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFilterElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGFilterElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGFilterElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGFilterPrimitiveStandardAttributes": [
    {
      "interface": "SVGFilterPrimitiveStandardAttributes",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGFilterPrimitiveStandardAttributes",
      "kind": "property",
      "name": "result",
      "type": "SVGAnimatedString"
    },
    {
      "interface": "SVGFilterPrimitiveStandardAttributes",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGFilterPrimitiveStandardAttributes",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGFilterPrimitiveStandardAttributes",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength"
    }
  ],
  "SVGFitToViewBox": [
    {
      "interface": "SVGFitToViewBox",
      "kind": "property",
      "name": "preserveAspectRatio",
      "type": "SVGAnimatedPreserveAspectRatio",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/preserveAspectRatio)"
    },
    {
      "interface": "SVGFitToViewBox",
      "kind": "property",
      "name": "viewBox",
      "type": "SVGAnimatedRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/viewBox)"
    }
  ],
  "SVGForeignObjectElement": [
    {
      "interface": "SVGForeignObjectElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGForeignObjectElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGForeignObjectElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGForeignObjectElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGForeignObjectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGForeignObjectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGForeignObjectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGForeignObjectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGGElement": [
    {
      "interface": "SVGGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGGeometryElement": [
    {
      "interface": "SVGGeometryElement",
      "kind": "property",
      "name": "pathLength",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/pathLength)"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "getPointAtLength",
      "parameters": [
        {
          "name": "distance",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/getPointAtLength)"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "getTotalLength",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/getTotalLength)"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "isPointInFill",
      "parameters": [
        {
          "name": "point",
          "type": "DOMPointInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/isPointInFill)"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "isPointInStroke",
      "parameters": [
        {
          "name": "point",
          "type": "DOMPointInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/isPointInStroke)"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGeometryElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGGradientElement": [
    {
      "interface": "SVGGradientElement",
      "kind": "property",
      "name": "gradientTransform",
      "type": "SVGAnimatedTransformList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGradientElement/gradientTransform)"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "property",
      "name": "gradientUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGradientElement/gradientUnits)"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "property",
      "name": "spreadMethod",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGradientElement/spreadMethod)"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "property",
      "name": "SVG_SPREADMETHOD_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "property",
      "name": "SVG_SPREADMETHOD_PAD",
      "type": "1"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "property",
      "name": "SVG_SPREADMETHOD_REFLECT",
      "type": "2"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "property",
      "name": "SVG_SPREADMETHOD_REPEAT",
      "type": "3"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGradientElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGradientElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGradientElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGGraphicsElement": [
    {
      "interface": "SVGGraphicsElement",
      "kind": "property",
      "name": "transform",
      "type": "SVGAnimatedTransformList"
    },
    {
      "interface": "SVGGraphicsElement",
      "kind": "method",
      "name": "getBBox",
      "parameters": [
        {
          "name": "options",
          "type": "SVGBoundingBoxOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "DOMRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGraphicsElement/getBBox)"
    },
    {
      "interface": "SVGGraphicsElement",
      "kind": "method",
      "name": "getCTM",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "SVGGraphicsElement",
      "kind": "method",
      "name": "getScreenCTM",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "SVGGraphicsElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGraphicsElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGraphicsElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGGraphicsElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGImageElement": [
    {
      "interface": "SVGImageElement",
      "kind": "property",
      "name": "crossOrigin",
      "type": "string"
    },
    {
      "interface": "SVGImageElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/height)"
    },
    {
      "interface": "SVGImageElement",
      "kind": "property",
      "name": "preserveAspectRatio",
      "type": "SVGAnimatedPreserveAspectRatio",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/preserveAspectRatio)"
    },
    {
      "interface": "SVGImageElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/width)"
    },
    {
      "interface": "SVGImageElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/x)"
    },
    {
      "interface": "SVGImageElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/y)"
    },
    {
      "interface": "SVGImageElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGImageElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGImageElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGImageElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGImageElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGImageElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGLength": [
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "unitType",
      "type": "number"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "value",
      "type": "number"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "valueAsString",
      "type": "string"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "valueInSpecifiedUnits",
      "type": "number"
    },
    {
      "interface": "SVGLength",
      "kind": "method",
      "name": "convertToSpecifiedUnits",
      "parameters": [
        {
          "name": "unitType",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "SVGLength",
      "kind": "method",
      "name": "newValueSpecifiedUnits",
      "parameters": [
        {
          "name": "unitType",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "valueInSpecifiedUnits",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_NUMBER",
      "type": "1"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_PERCENTAGE",
      "type": "2"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_EMS",
      "type": "3"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_EXS",
      "type": "4"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_PX",
      "type": "5"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_CM",
      "type": "6"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_MM",
      "type": "7"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_IN",
      "type": "8"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_PT",
      "type": "9"
    },
    {
      "interface": "SVGLength",
      "kind": "property",
      "name": "SVG_LENGTHTYPE_PC",
      "type": "10"
    }
  ],
  "SVGLengthList": [
    {
      "interface": "SVGLengthList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/length)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "property",
      "name": "numberOfItems",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/numberOfItems)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "method",
      "name": "appendItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGLength",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/appendItem)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/clear)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "method",
      "name": "getItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/getItem)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "method",
      "name": "initialize",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGLength",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/initialize)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "method",
      "name": "insertItemBefore",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGLength",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/insertItemBefore)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "method",
      "name": "removeItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/removeItem)"
    },
    {
      "interface": "SVGLengthList",
      "kind": "method",
      "name": "replaceItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGLength",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/replaceItem)"
    }
  ],
  "SVGLineElement": [
    {
      "interface": "SVGLineElement",
      "kind": "property",
      "name": "x1",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/x1)"
    },
    {
      "interface": "SVGLineElement",
      "kind": "property",
      "name": "x2",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/x2)"
    },
    {
      "interface": "SVGLineElement",
      "kind": "property",
      "name": "y1",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/y1)"
    },
    {
      "interface": "SVGLineElement",
      "kind": "property",
      "name": "y2",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/y2)"
    },
    {
      "interface": "SVGLineElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGLineElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGLineElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGLineElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGLineElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGLineElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGLinearGradientElement": [
    {
      "interface": "SVGLinearGradientElement",
      "kind": "property",
      "name": "x1",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/x1)"
    },
    {
      "interface": "SVGLinearGradientElement",
      "kind": "property",
      "name": "x2",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/x2)"
    },
    {
      "interface": "SVGLinearGradientElement",
      "kind": "property",
      "name": "y1",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/y1)"
    },
    {
      "interface": "SVGLinearGradientElement",
      "kind": "property",
      "name": "y2",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/y2)"
    },
    {
      "interface": "SVGLinearGradientElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGLinearGradientElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGLinearGradientElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGLinearGradientElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGMPathElement": [
    {
      "interface": "SVGMPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGMarkerElement": [
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "markerHeight",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/markerHeight)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "markerUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/markerUnits)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "markerWidth",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/markerWidth)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "orientAngle",
      "type": "SVGAnimatedAngle",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/orientAngle)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "orientType",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/orientType)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "refX",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/refX)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "refY",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/refY)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "method",
      "name": "setOrientToAngle",
      "parameters": [
        {
          "name": "angle",
          "type": "SVGAngle",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/setOrientToAngle)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "method",
      "name": "setOrientToAuto",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/setOrientToAuto)"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "SVG_MARKERUNITS_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "SVG_MARKERUNITS_USERSPACEONUSE",
      "type": "1"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "SVG_MARKERUNITS_STROKEWIDTH",
      "type": "2"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "SVG_MARKER_ORIENT_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "SVG_MARKER_ORIENT_AUTO",
      "type": "1"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "property",
      "name": "SVG_MARKER_ORIENT_ANGLE",
      "type": "2"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMarkerElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGMaskElement": [
    {
      "interface": "SVGMaskElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/height)"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "property",
      "name": "maskContentUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/maskContentUnits)"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "property",
      "name": "maskUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/maskUnits)"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/width)"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/x)"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/y)"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMaskElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMaskElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMaskElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGMetadataElement": [
    {
      "interface": "SVGMetadataElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMetadataElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMetadataElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGMetadataElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGNumber": [
    {
      "interface": "SVGNumber",
      "kind": "property",
      "name": "value",
      "type": "number"
    }
  ],
  "SVGNumberList": [
    {
      "interface": "SVGNumberList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/length)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "property",
      "name": "numberOfItems",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/numberOfItems)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "method",
      "name": "appendItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGNumber",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/appendItem)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/clear)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "method",
      "name": "getItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/getItem)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "method",
      "name": "initialize",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGNumber",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/initialize)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "method",
      "name": "insertItemBefore",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGNumber",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/insertItemBefore)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "method",
      "name": "removeItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/removeItem)"
    },
    {
      "interface": "SVGNumberList",
      "kind": "method",
      "name": "replaceItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGNumber",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/replaceItem)"
    }
  ],
  "SVGPathElement": [
    {
      "interface": "SVGPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGPatternElement": [
    {
      "interface": "SVGPatternElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "property",
      "name": "patternContentUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPatternElement/patternContentUnits)"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "property",
      "name": "patternTransform",
      "type": "SVGAnimatedTransformList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPatternElement/patternTransform)"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "property",
      "name": "patternUnits",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPatternElement/patternUnits)"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPatternElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPatternElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPatternElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGPointList": [
    {
      "interface": "SVGPointList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/length)"
    },
    {
      "interface": "SVGPointList",
      "kind": "property",
      "name": "numberOfItems",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/numberOfItems)"
    },
    {
      "interface": "SVGPointList",
      "kind": "method",
      "name": "appendItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "DOMPoint",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/appendItem)"
    },
    {
      "interface": "SVGPointList",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/clear)"
    },
    {
      "interface": "SVGPointList",
      "kind": "method",
      "name": "getItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/getItem)"
    },
    {
      "interface": "SVGPointList",
      "kind": "method",
      "name": "initialize",
      "parameters": [
        {
          "name": "newItem",
          "type": "DOMPoint",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/initialize)"
    },
    {
      "interface": "SVGPointList",
      "kind": "method",
      "name": "insertItemBefore",
      "parameters": [
        {
          "name": "newItem",
          "type": "DOMPoint",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/insertItemBefore)"
    },
    {
      "interface": "SVGPointList",
      "kind": "method",
      "name": "removeItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/removeItem)"
    },
    {
      "interface": "SVGPointList",
      "kind": "method",
      "name": "replaceItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "DOMPoint",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/replaceItem)"
    }
  ],
  "SVGPolygonElement": [
    {
      "interface": "SVGPolygonElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPolygonElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPolygonElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPolygonElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGPolylineElement": [
    {
      "interface": "SVGPolylineElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPolylineElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPolylineElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGPolylineElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGPreserveAspectRatio": [
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "align",
      "type": "number"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "meetOrSlice",
      "type": "number"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_NONE",
      "type": "1"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMINYMIN",
      "type": "2"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
      "type": "3"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
      "type": "4"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMINYMID",
      "type": "5"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMIDYMID",
      "type": "6"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMAXYMID",
      "type": "7"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMINYMAX",
      "type": "8"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
      "type": "9"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
      "type": "10"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_MEETORSLICE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_MEETORSLICE_MEET",
      "type": "1"
    },
    {
      "interface": "SVGPreserveAspectRatio",
      "kind": "property",
      "name": "SVG_MEETORSLICE_SLICE",
      "type": "2"
    }
  ],
  "SVGRadialGradientElement": [
    {
      "interface": "SVGRadialGradientElement",
      "kind": "property",
      "name": "cx",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/cx)"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "property",
      "name": "cy",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/cy)"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "property",
      "name": "fr",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "property",
      "name": "fx",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/fx)"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "property",
      "name": "fy",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/fy)"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "property",
      "name": "r",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/r)"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGRadialGradientElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGRectElement": [
    {
      "interface": "SVGRectElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/height)"
    },
    {
      "interface": "SVGRectElement",
      "kind": "property",
      "name": "rx",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/rx)"
    },
    {
      "interface": "SVGRectElement",
      "kind": "property",
      "name": "ry",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/ry)"
    },
    {
      "interface": "SVGRectElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/width)"
    },
    {
      "interface": "SVGRectElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/x)"
    },
    {
      "interface": "SVGRectElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/y)"
    },
    {
      "interface": "SVGRectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGRectElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGRectElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGRectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGRectElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGRectElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGSVGElement": [
    {
      "interface": "SVGSVGElement",
      "kind": "property",
      "name": "currentScale",
      "type": "number"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "property",
      "name": "currentTranslate",
      "type": "DOMPointReadOnly"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "animationsPaused",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "checkEnclosure",
      "parameters": [
        {
          "name": "element",
          "type": "SVGElement",
          "optional": false,
          "rest": false
        },
        {
          "name": "rect",
          "type": "DOMRectReadOnly",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "boolean"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "checkIntersection",
      "parameters": [
        {
          "name": "element",
          "type": "SVGElement",
          "optional": false,
          "rest": false
        },
        {
          "name": "rect",
          "type": "DOMRectReadOnly",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "boolean"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGAngle",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "SVGAngle"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGLength",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "SVGLength"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGMatrix",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMMatrix"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGNumber",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "SVGNumber"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGPoint",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMPoint"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGRect",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DOMRect"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGTransform",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "SVGTransform"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "createSVGTransformFromMatrix",
      "parameters": [
        {
          "name": "matrix",
          "type": "DOMMatrix2DInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "SVGTransform"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "deselectAll",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "forceRedraw",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "getCurrentTime",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "getElementById",
      "parameters": [
        {
          "name": "elementId",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Element"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "getEnclosureList",
      "parameters": [
        {
          "name": "rect",
          "type": "DOMRectReadOnly",
          "optional": false,
          "rest": false
        },
        {
          "name": "referenceElement",
          "type": "SVGElement",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "NodeListOf<SVGImageElement | SVGCircleElement | SVGEllipseElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "getIntersectionList",
      "parameters": [
        {
          "name": "rect",
          "type": "DOMRectReadOnly",
          "optional": false,
          "rest": false
        },
        {
          "name": "referenceElement",
          "type": "SVGElement",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "NodeListOf<SVGImageElement | SVGCircleElement | SVGEllipseElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "pauseAnimations",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "setCurrentTime",
      "parameters": [
        {
          "name": "seconds",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "suspendRedraw",
      "parameters": [
        {
          "name": "maxWaitMilliseconds",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "unpauseAnimations",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "unsuspendRedraw",
      "parameters": [
        {
          "name": "suspendHandleID",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "unsuspendRedrawAll",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSVGElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGScriptElement": [
    {
      "interface": "SVGScriptElement",
      "kind": "property",
      "name": "type",
      "type": "string"
    },
    {
      "interface": "SVGScriptElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGScriptElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGScriptElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGScriptElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGScriptElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGScriptElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGSetElement": [
    {
      "interface": "SVGSetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSetElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSetElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSetElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSetElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGStopElement": [
    {
      "interface": "SVGStopElement",
      "kind": "property",
      "name": "offset",
      "type": "SVGAnimatedNumber",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStopElement/offset)"
    },
    {
      "interface": "SVGStopElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGStopElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGStopElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGStopElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGStopElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGStopElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGStringList": [
    {
      "interface": "SVGStringList",
      "kind": "property",
      "name": "length",
      "type": "number"
    },
    {
      "interface": "SVGStringList",
      "kind": "property",
      "name": "numberOfItems",
      "type": "number"
    },
    {
      "interface": "SVGStringList",
      "kind": "method",
      "name": "appendItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string"
    },
    {
      "interface": "SVGStringList",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "SVGStringList",
      "kind": "method",
      "name": "getItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string"
    },
    {
      "interface": "SVGStringList",
      "kind": "method",
      "name": "initialize",
      "parameters": [
        {
          "name": "newItem",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string"
    },
    {
      "interface": "SVGStringList",
      "kind": "method",
      "name": "insertItemBefore",
      "parameters": [
        {
          "name": "newItem",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "string"
    },
    {
      "interface": "SVGStringList",
      "kind": "method",
      "name": "removeItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string"
    },
    {
      "interface": "SVGStringList",
      "kind": "method",
      "name": "replaceItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "string"
    }
  ],
  "SVGStyleElement": [
    {
      "interface": "SVGStyleElement",
      "kind": "property",
      "name": "disabled",
      "type": "boolean"
    },
    {
      "interface": "SVGStyleElement",
      "kind": "property",
      "name": "media",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStyleElement/media)"
    },
    {
      "interface": "SVGStyleElement",
      "kind": "property",
      "name": "title",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStyleElement/title)"
    },
    {
      "interface": "SVGStyleElement",
      "kind": "property",
      "name": "type",
      "type": "string"
    },
    {
      "interface": "SVGStyleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGStyleElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGStyleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGStyleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGStyleElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGStyleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGSwitchElement": [
    {
      "interface": "SVGSwitchElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSwitchElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSwitchElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSwitchElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGSymbolElement": [
    {
      "interface": "SVGSymbolElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSymbolElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSymbolElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGSymbolElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGTSpanElement": [
    {
      "interface": "SVGTSpanElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTSpanElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTSpanElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTSpanElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGTests": [
    {
      "interface": "SVGTests",
      "kind": "property",
      "name": "requiredExtensions",
      "type": "SVGStringList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/requiredExtensions)"
    },
    {
      "interface": "SVGTests",
      "kind": "property",
      "name": "systemLanguage",
      "type": "SVGStringList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/systemLanguage)"
    }
  ],
  "SVGTextContentElement": [
    {
      "interface": "SVGTextContentElement",
      "kind": "property",
      "name": "lengthAdjust",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/lengthAdjust)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "property",
      "name": "textLength",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/textLength)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getCharNumAtPosition",
      "parameters": [
        {
          "name": "point",
          "type": "DOMPointInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getCharNumAtPosition)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getComputedTextLength",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getComputedTextLength)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getEndPositionOfChar",
      "parameters": [
        {
          "name": "charnum",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getEndPositionOfChar)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getExtentOfChar",
      "parameters": [
        {
          "name": "charnum",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMRect",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getExtentOfChar)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getNumberOfChars",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getNumberOfChars)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getRotationOfChar",
      "parameters": [
        {
          "name": "charnum",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getRotationOfChar)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getStartPositionOfChar",
      "parameters": [
        {
          "name": "charnum",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "DOMPoint",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getStartPositionOfChar)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "getSubStringLength",
      "parameters": [
        {
          "name": "charnum",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "nchars",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getSubStringLength)"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "selectSubString",
      "parameters": [
        {
          "name": "charnum",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "nchars",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "property",
      "name": "LENGTHADJUST_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "property",
      "name": "LENGTHADJUST_SPACING",
      "type": "1"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "property",
      "name": "LENGTHADJUST_SPACINGANDGLYPHS",
      "type": "2"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextContentElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGTextElement": [
    {
      "interface": "SVGTextElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGTextPathElement": [
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "method",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPathElement/method)"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "spacing",
      "type": "SVGAnimatedEnumeration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPathElement/spacing)"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "startOffset",
      "type": "SVGAnimatedLength",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPathElement/startOffset)"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "TEXTPATH_METHODTYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "TEXTPATH_METHODTYPE_ALIGN",
      "type": "1"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "TEXTPATH_METHODTYPE_STRETCH",
      "type": "2"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "TEXTPATH_SPACINGTYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "TEXTPATH_SPACINGTYPE_AUTO",
      "type": "1"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "property",
      "name": "TEXTPATH_SPACINGTYPE_EXACT",
      "type": "2"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextPathElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGTextPositioningElement": [
    {
      "interface": "SVGTextPositioningElement",
      "kind": "property",
      "name": "dx",
      "type": "SVGAnimatedLengthList"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "property",
      "name": "dy",
      "type": "SVGAnimatedLengthList"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "property",
      "name": "rotate",
      "type": "SVGAnimatedNumberList"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLengthList"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLengthList"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTextPositioningElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGTitleElement": [
    {
      "interface": "SVGTitleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTitleElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTitleElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTitleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGTitleElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGTitleElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGTransform": [
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "angle",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/angle)"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "matrix",
      "type": "DOMMatrix",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/matrix)"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "type",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/type)"
    },
    {
      "interface": "SVGTransform",
      "kind": "method",
      "name": "setMatrix",
      "parameters": [
        {
          "name": "matrix",
          "type": "DOMMatrix2DInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setMatrix)"
    },
    {
      "interface": "SVGTransform",
      "kind": "method",
      "name": "setRotate",
      "parameters": [
        {
          "name": "angle",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "cx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "cy",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setRotate)"
    },
    {
      "interface": "SVGTransform",
      "kind": "method",
      "name": "setScale",
      "parameters": [
        {
          "name": "sx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sy",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setScale)"
    },
    {
      "interface": "SVGTransform",
      "kind": "method",
      "name": "setSkewX",
      "parameters": [
        {
          "name": "angle",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setSkewX)"
    },
    {
      "interface": "SVGTransform",
      "kind": "method",
      "name": "setSkewY",
      "parameters": [
        {
          "name": "angle",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setSkewY)"
    },
    {
      "interface": "SVGTransform",
      "kind": "method",
      "name": "setTranslate",
      "parameters": [
        {
          "name": "tx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "ty",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setTranslate)"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "SVG_TRANSFORM_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "SVG_TRANSFORM_MATRIX",
      "type": "1"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "SVG_TRANSFORM_TRANSLATE",
      "type": "2"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "SVG_TRANSFORM_SCALE",
      "type": "3"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "SVG_TRANSFORM_ROTATE",
      "type": "4"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "SVG_TRANSFORM_SKEWX",
      "type": "5"
    },
    {
      "interface": "SVGTransform",
      "kind": "property",
      "name": "SVG_TRANSFORM_SKEWY",
      "type": "6"
    }
  ],
  "SVGTransformList": [
    {
      "interface": "SVGTransformList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/length)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "property",
      "name": "numberOfItems",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/numberOfItems)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "appendItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGTransform",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/appendItem)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/clear)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "consolidate",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/consolidate)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "createSVGTransformFromMatrix",
      "parameters": [
        {
          "name": "matrix",
          "type": "DOMMatrix2DInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/createSVGTransformFromMatrix)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "getItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/getItem)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "initialize",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGTransform",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/initialize)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "insertItemBefore",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGTransform",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/insertItemBefore)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "removeItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/removeItem)"
    },
    {
      "interface": "SVGTransformList",
      "kind": "method",
      "name": "replaceItem",
      "parameters": [
        {
          "name": "newItem",
          "type": "SVGTransform",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "SVGTransform",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/replaceItem)"
    }
  ],
  "SVGURIReference": [
    {
      "interface": "SVGURIReference",
      "kind": "property",
      "name": "href",
      "type": "SVGAnimatedString",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAElement/href)"
    }
  ],
  "SVGUnitTypes": [
    {
      "interface": "SVGUnitTypes",
      "kind": "property",
      "name": "SVG_UNIT_TYPE_UNKNOWN",
      "type": "0"
    },
    {
      "interface": "SVGUnitTypes",
      "kind": "property",
      "name": "SVG_UNIT_TYPE_USERSPACEONUSE",
      "type": "1"
    },
    {
      "interface": "SVGUnitTypes",
      "kind": "property",
      "name": "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
      "type": "2"
    }
  ],
  "SVGUseElement": [
    {
      "interface": "SVGUseElement",
      "kind": "property",
      "name": "height",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGUseElement",
      "kind": "property",
      "name": "width",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGUseElement",
      "kind": "property",
      "name": "x",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGUseElement",
      "kind": "property",
      "name": "y",
      "type": "SVGAnimatedLength"
    },
    {
      "interface": "SVGUseElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGUseElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGUseElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGUseElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGUseElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGUseElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SVGViewElement": [
    {
      "interface": "SVGViewElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGViewElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGViewElement",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGViewElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SVGViewElement, ev: SVGElementEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SVGViewElement",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "Screen": [
    {
      "interface": "Screen",
      "kind": "property",
      "name": "availHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/availHeight)"
    },
    {
      "interface": "Screen",
      "kind": "property",
      "name": "availWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/availWidth)"
    },
    {
      "interface": "Screen",
      "kind": "property",
      "name": "colorDepth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/colorDepth)"
    },
    {
      "interface": "Screen",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/height)"
    },
    {
      "interface": "Screen",
      "kind": "property",
      "name": "orientation",
      "type": "ScreenOrientation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/orientation)"
    },
    {
      "interface": "Screen",
      "kind": "property",
      "name": "pixelDepth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/pixelDepth)"
    },
    {
      "interface": "Screen",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/width)"
    }
  ],
  "ScreenOrientationEventMap": [
    {
      "interface": "ScreenOrientationEventMap",
      "kind": "property",
      "name": "\"change\"",
      "type": "Event"
    }
  ],
  "ScreenOrientation": [
    {
      "interface": "ScreenOrientation",
      "kind": "property",
      "name": "angle",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/angle)"
    },
    {
      "interface": "ScreenOrientation",
      "kind": "event",
      "name": "onchange",
      "type": "(this: ScreenOrientation, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/change_event)"
    },
    {
      "interface": "ScreenOrientation",
      "kind": "property",
      "name": "type",
      "type": "OrientationType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/type)"
    },
    {
      "interface": "ScreenOrientation",
      "kind": "method",
      "name": "unlock",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/unlock)"
    },
    {
      "interface": "ScreenOrientation",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ScreenOrientation, ev: ScreenOrientationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ScreenOrientation",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ScreenOrientation",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ScreenOrientation, ev: ScreenOrientationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ScreenOrientation",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "ScriptProcessorNodeEventMap": [
    {
      "interface": "ScriptProcessorNodeEventMap",
      "kind": "property",
      "name": "\"audioprocess\"",
      "type": "AudioProcessingEvent"
    }
  ],
  "ScriptProcessorNode": [
    {
      "interface": "ScriptProcessorNode",
      "kind": "property",
      "name": "bufferSize",
      "type": "number"
    },
    {
      "interface": "ScriptProcessorNode",
      "kind": "event",
      "name": "onaudioprocess",
      "type": "(this: ScriptProcessorNode, ev: AudioProcessingEvent) => any"
    },
    {
      "interface": "ScriptProcessorNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ScriptProcessorNode",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ScriptProcessorNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ScriptProcessorNode",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SecurityPolicyViolationEvent": [
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "blockedURI",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/blockedURI)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "columnNumber",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/columnNumber)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "disposition",
      "type": "SecurityPolicyViolationEventDisposition",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/disposition)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "documentURI",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/documentURI)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "effectiveDirective",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "lineNumber",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/lineNumber)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "originalPolicy",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "referrer",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/referrer)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "sample",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/sample)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "sourceFile",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/sourceFile)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "statusCode",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/statusCode)"
    },
    {
      "interface": "SecurityPolicyViolationEvent",
      "kind": "property",
      "name": "violatedDirective",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective)"
    }
  ],
  "Selection": [
    {
      "interface": "Selection",
      "kind": "property",
      "name": "anchorNode",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/anchorNode)"
    },
    {
      "interface": "Selection",
      "kind": "property",
      "name": "anchorOffset",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/anchorOffset)"
    },
    {
      "interface": "Selection",
      "kind": "property",
      "name": "direction",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/direction)"
    },
    {
      "interface": "Selection",
      "kind": "property",
      "name": "focusNode",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/focusNode)"
    },
    {
      "interface": "Selection",
      "kind": "property",
      "name": "focusOffset",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/focusOffset)"
    },
    {
      "interface": "Selection",
      "kind": "property",
      "name": "isCollapsed",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/isCollapsed)"
    },
    {
      "interface": "Selection",
      "kind": "property",
      "name": "rangeCount",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/rangeCount)"
    },
    {
      "interface": "Selection",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/type)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "addRange",
      "parameters": [
        {
          "name": "range",
          "type": "Range",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/addRange)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "collapse",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/collapse)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "collapseToEnd",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/collapseToEnd)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "collapseToStart",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/collapseToStart)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "containsNode",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "allowPartialContainment",
          "type": "boolean",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/containsNode)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "deleteFromDocument",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/deleteFromDocument)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "empty",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/empty)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "extend",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/extend)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "getRangeAt",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Range",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/getRangeAt)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "modify",
      "parameters": [
        {
          "name": "alter",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "direction",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "granularity",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/modify)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "removeAllRanges",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/removeAllRanges)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "removeRange",
      "parameters": [
        {
          "name": "range",
          "type": "Range",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/removeRange)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "selectAllChildren",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/selectAllChildren)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "setBaseAndExtent",
      "parameters": [
        {
          "name": "anchorNode",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "anchorOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "focusNode",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "focusOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/setBaseAndExtent)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "setPosition",
      "parameters": [
        {
          "name": "node",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/setPosition)"
    },
    {
      "interface": "Selection",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    }
  ],
  "ServiceWorkerEventMap": [
    {
      "interface": "ServiceWorkerEventMap",
      "kind": "property",
      "name": "\"statechange\"",
      "type": "Event"
    }
  ],
  "ServiceWorker": [
    {
      "interface": "ServiceWorker",
      "kind": "event",
      "name": "onstatechange",
      "type": "(this: ServiceWorker, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/statechange_event)"
    },
    {
      "interface": "ServiceWorker",
      "kind": "property",
      "name": "scriptURL",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/scriptURL)"
    },
    {
      "interface": "ServiceWorker",
      "kind": "property",
      "name": "state",
      "type": "ServiceWorkerState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/state)"
    },
    {
      "interface": "ServiceWorker",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "transfer",
          "type": "Transferable[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/postMessage)"
    },
    {
      "interface": "ServiceWorker",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "StructuredSerializeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "ServiceWorkerContainerEventMap": [
    {
      "interface": "ServiceWorkerContainerEventMap",
      "kind": "property",
      "name": "\"controllerchange\"",
      "type": "Event"
    },
    {
      "interface": "ServiceWorkerContainerEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "ServiceWorkerContainerEventMap",
      "kind": "property",
      "name": "\"messageerror\"",
      "type": "MessageEvent<any>"
    }
  ],
  "ServiceWorkerContainer": [
    {
      "interface": "ServiceWorkerContainer",
      "kind": "property",
      "name": "controller",
      "type": "ServiceWorker",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controller)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "event",
      "name": "oncontrollerchange",
      "type": "(this: ServiceWorkerContainer, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controllerchange_event)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: ServiceWorkerContainer, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/message_event)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "event",
      "name": "onmessageerror",
      "type": "(this: ServiceWorkerContainer, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/messageerror_event)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "property",
      "name": "ready",
      "type": "Promise<ServiceWorkerRegistration>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/ready)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "getRegistration",
      "parameters": [
        {
          "name": "clientURL",
          "type": "string | URL",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<ServiceWorkerRegistration>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/getRegistration)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "getRegistrations",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<readonly ServiceWorkerRegistration[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/getRegistrations)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "register",
      "parameters": [
        {
          "name": "scriptURL",
          "type": "string | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "RegistrationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<ServiceWorkerRegistration>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/register)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "startMessages",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/startMessages)"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorkerContainer",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "ServiceWorkerRegistrationEventMap": [
    {
      "interface": "ServiceWorkerRegistrationEventMap",
      "kind": "property",
      "name": "\"updatefound\"",
      "type": "Event"
    }
  ],
  "ServiceWorkerRegistration": [
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "property",
      "name": "active",
      "type": "ServiceWorker",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/active)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "property",
      "name": "installing",
      "type": "ServiceWorker",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/installing)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "property",
      "name": "navigationPreload",
      "type": "NavigationPreloadManager",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/navigationPreload)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "event",
      "name": "onupdatefound",
      "type": "(this: ServiceWorkerRegistration, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updatefound_event)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "property",
      "name": "pushManager",
      "type": "PushManager",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/pushManager)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "property",
      "name": "scope",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/scope)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "property",
      "name": "updateViaCache",
      "type": "ServiceWorkerUpdateViaCache",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updateViaCache)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "property",
      "name": "waiting",
      "type": "ServiceWorker",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/waiting)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "getNotifications",
      "parameters": [
        {
          "name": "filter",
          "type": "GetNotificationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<Notification[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/getNotifications)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "showNotification",
      "parameters": [
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "NotificationOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/showNotification)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "unregister",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/unregister)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "update",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/update)"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ServiceWorkerRegistration",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "ShadowRootEventMap": [
    {
      "interface": "ShadowRootEventMap",
      "kind": "property",
      "name": "\"slotchange\"",
      "type": "Event"
    }
  ],
  "ShadowRoot": [
    {
      "interface": "ShadowRoot",
      "kind": "property",
      "name": "clonable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/clonable)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "property",
      "name": "delegatesFocus",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/delegatesFocus)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "property",
      "name": "host",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/host)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "property",
      "name": "innerHTML",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/innerHTML)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "property",
      "name": "mode",
      "type": "ShadowRootMode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/mode)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "event",
      "name": "onslotchange",
      "type": "(this: ShadowRoot, ev: Event) => any"
    },
    {
      "interface": "ShadowRoot",
      "kind": "property",
      "name": "serializable",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/serializable)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "property",
      "name": "slotAssignment",
      "type": "SlotAssignmentMode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/slotAssignment)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "method",
      "name": "getHTML",
      "parameters": [
        {
          "name": "options",
          "type": "GetHTMLOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/getHTML)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "method",
      "name": "setHTMLUnsafe",
      "parameters": [
        {
          "name": "html",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/setHTMLUnsafe)"
    },
    {
      "interface": "ShadowRoot",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ShadowRoot, ev: ShadowRootEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "Throws a \"NotSupportedError\" DOMException if context object is a shadow root."
    },
    {
      "interface": "ShadowRoot",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ShadowRoot",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: ShadowRoot, ev: ShadowRootEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "ShadowRoot",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SharedWorker": [
    {
      "interface": "SharedWorker",
      "kind": "property",
      "name": "port",
      "type": "MessagePort",
      "doc": "Returns sharedWorker's MessagePort object which can be used to communicate with the global environment.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorker/port)"
    },
    {
      "interface": "SharedWorker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SharedWorker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SharedWorker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SharedWorker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "Slottable": [
    {
      "interface": "Slottable",
      "kind": "property",
      "name": "assignedSlot",
      "type": "HTMLSlotElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/assignedSlot)"
    }
  ],
  "SourceBufferEventMap": [
    {
      "interface": "SourceBufferEventMap",
      "kind": "property",
      "name": "\"abort\"",
      "type": "Event"
    },
    {
      "interface": "SourceBufferEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "Event"
    },
    {
      "interface": "SourceBufferEventMap",
      "kind": "property",
      "name": "\"update\"",
      "type": "Event"
    },
    {
      "interface": "SourceBufferEventMap",
      "kind": "property",
      "name": "\"updateend\"",
      "type": "Event"
    },
    {
      "interface": "SourceBufferEventMap",
      "kind": "property",
      "name": "\"updatestart\"",
      "type": "Event"
    }
  ],
  "SourceBuffer": [
    {
      "interface": "SourceBuffer",
      "kind": "property",
      "name": "appendWindowEnd",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/appendWindowEnd)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "property",
      "name": "appendWindowStart",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/appendWindowStart)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "property",
      "name": "buffered",
      "type": "TimeRanges",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/buffered)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "property",
      "name": "mode",
      "type": "AppendMode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/mode)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "event",
      "name": "onabort",
      "type": "(this: SourceBuffer, ev: Event) => any"
    },
    {
      "interface": "SourceBuffer",
      "kind": "event",
      "name": "onerror",
      "type": "(this: SourceBuffer, ev: Event) => any"
    },
    {
      "interface": "SourceBuffer",
      "kind": "event",
      "name": "onupdate",
      "type": "(this: SourceBuffer, ev: Event) => any"
    },
    {
      "interface": "SourceBuffer",
      "kind": "event",
      "name": "onupdateend",
      "type": "(this: SourceBuffer, ev: Event) => any"
    },
    {
      "interface": "SourceBuffer",
      "kind": "event",
      "name": "onupdatestart",
      "type": "(this: SourceBuffer, ev: Event) => any"
    },
    {
      "interface": "SourceBuffer",
      "kind": "property",
      "name": "timestampOffset",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/timestampOffset)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "property",
      "name": "updating",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/updating)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "abort",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/abort)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "appendBuffer",
      "parameters": [
        {
          "name": "data",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/appendBuffer)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "changeType",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/changeType)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "remove",
      "parameters": [
        {
          "name": "start",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/remove)"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SourceBuffer, ev: SourceBufferEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SourceBuffer, ev: SourceBufferEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SourceBuffer",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SourceBufferListEventMap": [
    {
      "interface": "SourceBufferListEventMap",
      "kind": "property",
      "name": "\"addsourcebuffer\"",
      "type": "Event"
    },
    {
      "interface": "SourceBufferListEventMap",
      "kind": "property",
      "name": "\"removesourcebuffer\"",
      "type": "Event"
    }
  ],
  "SourceBufferList": [
    {
      "interface": "SourceBufferList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBufferList/length)"
    },
    {
      "interface": "SourceBufferList",
      "kind": "event",
      "name": "onaddsourcebuffer",
      "type": "(this: SourceBufferList, ev: Event) => any"
    },
    {
      "interface": "SourceBufferList",
      "kind": "event",
      "name": "onremovesourcebuffer",
      "type": "(this: SourceBufferList, ev: Event) => any"
    },
    {
      "interface": "SourceBufferList",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SourceBufferList",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SourceBufferList",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SourceBufferList",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SpeechRecognitionAlternative": [
    {
      "interface": "SpeechRecognitionAlternative",
      "kind": "property",
      "name": "confidence",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionAlternative/confidence)"
    },
    {
      "interface": "SpeechRecognitionAlternative",
      "kind": "property",
      "name": "transcript",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionAlternative/transcript)"
    }
  ],
  "SpeechRecognitionResult": [
    {
      "interface": "SpeechRecognitionResult",
      "kind": "property",
      "name": "isFinal",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResult/isFinal)"
    },
    {
      "interface": "SpeechRecognitionResult",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResult/length)"
    },
    {
      "interface": "SpeechRecognitionResult",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SpeechRecognitionAlternative",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResult/item)"
    }
  ],
  "SpeechRecognitionResultList": [
    {
      "interface": "SpeechRecognitionResultList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResultList/length)"
    },
    {
      "interface": "SpeechRecognitionResultList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "SpeechRecognitionResult",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResultList/item)"
    }
  ],
  "SpeechSynthesisEventMap": [
    {
      "interface": "SpeechSynthesisEventMap",
      "kind": "property",
      "name": "\"voiceschanged\"",
      "type": "Event"
    }
  ],
  "SpeechSynthesis": [
    {
      "interface": "SpeechSynthesis",
      "kind": "event",
      "name": "onvoiceschanged",
      "type": "(this: SpeechSynthesis, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/voiceschanged_event)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "property",
      "name": "paused",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/paused)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "property",
      "name": "pending",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/pending)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "property",
      "name": "speaking",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/speaking)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "cancel",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/cancel)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "getVoices",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "SpeechSynthesisVoice[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/getVoices)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "pause",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/pause)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "resume",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/resume)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "speak",
      "parameters": [
        {
          "name": "utterance",
          "type": "SpeechSynthesisUtterance",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/speak)"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SpeechSynthesis",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SpeechSynthesisErrorEvent": [
    {
      "interface": "SpeechSynthesisErrorEvent",
      "kind": "property",
      "name": "error",
      "type": "SpeechSynthesisErrorCode",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisErrorEvent/error)"
    }
  ],
  "SpeechSynthesisEvent": [
    {
      "interface": "SpeechSynthesisEvent",
      "kind": "property",
      "name": "charIndex",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/charIndex)"
    },
    {
      "interface": "SpeechSynthesisEvent",
      "kind": "property",
      "name": "charLength",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/charLength)"
    },
    {
      "interface": "SpeechSynthesisEvent",
      "kind": "property",
      "name": "elapsedTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/elapsedTime)"
    },
    {
      "interface": "SpeechSynthesisEvent",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/name)"
    },
    {
      "interface": "SpeechSynthesisEvent",
      "kind": "property",
      "name": "utterance",
      "type": "SpeechSynthesisUtterance",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/utterance)"
    }
  ],
  "SpeechSynthesisUtteranceEventMap": [
    {
      "interface": "SpeechSynthesisUtteranceEventMap",
      "kind": "property",
      "name": "\"boundary\"",
      "type": "SpeechSynthesisEvent"
    },
    {
      "interface": "SpeechSynthesisUtteranceEventMap",
      "kind": "property",
      "name": "\"end\"",
      "type": "SpeechSynthesisEvent"
    },
    {
      "interface": "SpeechSynthesisUtteranceEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "SpeechSynthesisErrorEvent"
    },
    {
      "interface": "SpeechSynthesisUtteranceEventMap",
      "kind": "property",
      "name": "\"mark\"",
      "type": "SpeechSynthesisEvent"
    },
    {
      "interface": "SpeechSynthesisUtteranceEventMap",
      "kind": "property",
      "name": "\"pause\"",
      "type": "SpeechSynthesisEvent"
    },
    {
      "interface": "SpeechSynthesisUtteranceEventMap",
      "kind": "property",
      "name": "\"resume\"",
      "type": "SpeechSynthesisEvent"
    },
    {
      "interface": "SpeechSynthesisUtteranceEventMap",
      "kind": "property",
      "name": "\"start\"",
      "type": "SpeechSynthesisEvent"
    }
  ],
  "SpeechSynthesisUtterance": [
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "property",
      "name": "lang",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/lang)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "event",
      "name": "onboundary",
      "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/boundary_event)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "event",
      "name": "onend",
      "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/end_event)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "event",
      "name": "onerror",
      "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisErrorEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/error_event)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "event",
      "name": "onmark",
      "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/mark_event)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "event",
      "name": "onpause",
      "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/pause_event)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "event",
      "name": "onresume",
      "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/resume_event)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "event",
      "name": "onstart",
      "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/start_event)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "property",
      "name": "pitch",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/pitch)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "property",
      "name": "rate",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/rate)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "property",
      "name": "text",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/text)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "property",
      "name": "voice",
      "type": "SpeechSynthesisVoice",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/voice)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "property",
      "name": "volume",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/volume)"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "SpeechSynthesisUtterance",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "SpeechSynthesisVoice": [
    {
      "interface": "SpeechSynthesisVoice",
      "kind": "property",
      "name": "default",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/default)"
    },
    {
      "interface": "SpeechSynthesisVoice",
      "kind": "property",
      "name": "lang",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/lang)"
    },
    {
      "interface": "SpeechSynthesisVoice",
      "kind": "property",
      "name": "localService",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/localService)"
    },
    {
      "interface": "SpeechSynthesisVoice",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/name)"
    },
    {
      "interface": "SpeechSynthesisVoice",
      "kind": "property",
      "name": "voiceURI",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/voiceURI)"
    }
  ],
  "StereoPannerNode": [
    {
      "interface": "StereoPannerNode",
      "kind": "property",
      "name": "pan",
      "type": "AudioParam",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StereoPannerNode/pan)"
    }
  ],
  "Storage": [
    {
      "interface": "Storage",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of key/value pairs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/length)"
    },
    {
      "interface": "Storage",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Removes all key/value pairs, if there are any.\n\nDispatches a storage event on Window objects holding an equivalent Storage object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/clear)"
    },
    {
      "interface": "Storage",
      "kind": "method",
      "name": "getItem",
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns the current value associated with the given key, or null if the given key does not exist.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/getItem)"
    },
    {
      "interface": "Storage",
      "kind": "method",
      "name": "key",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/key)"
    },
    {
      "interface": "Storage",
      "kind": "method",
      "name": "removeItem",
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n\nDispatches a storage event on Window objects holding an equivalent Storage object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/removeItem)"
    },
    {
      "interface": "Storage",
      "kind": "method",
      "name": "setItem",
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n\nThrows a \"QuotaExceededError\" DOMException exception if the new value couldn't be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n\nDispatches a storage event on Window objects holding an equivalent Storage object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/setItem)"
    }
  ],
  "StorageEvent": [
    {
      "interface": "StorageEvent",
      "kind": "property",
      "name": "key",
      "type": "string",
      "doc": "Returns the key of the storage item being changed.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/key)"
    },
    {
      "interface": "StorageEvent",
      "kind": "property",
      "name": "newValue",
      "type": "string",
      "doc": "Returns the new value of the key of the storage item whose value is being changed.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/newValue)"
    },
    {
      "interface": "StorageEvent",
      "kind": "property",
      "name": "oldValue",
      "type": "string",
      "doc": "Returns the old value of the key of the storage item whose value is being changed.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/oldValue)"
    },
    {
      "interface": "StorageEvent",
      "kind": "property",
      "name": "storageArea",
      "type": "Storage",
      "doc": "Returns the Storage object that was affected.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/storageArea)"
    },
    {
      "interface": "StorageEvent",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "Returns the URL of the document whose storage item changed.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/url)"
    },
    {
      "interface": "StorageEvent",
      "kind": "method",
      "name": "initStorageEvent",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubbles",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelable",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "key",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "oldValue",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "newValue",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "url",
          "type": "string | URL",
          "optional": true,
          "rest": false
        },
        {
          "name": "storageArea",
          "type": "Storage",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 1,
      "returnType": "void"
    }
  ],
  "StorageManager": [
    {
      "interface": "StorageManager",
      "kind": "method",
      "name": "estimate",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<StorageEstimate>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/estimate)"
    },
    {
      "interface": "StorageManager",
      "kind": "method",
      "name": "getDirectory",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<FileSystemDirectoryHandle>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/getDirectory)"
    },
    {
      "interface": "StorageManager",
      "kind": "method",
      "name": "persist",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/persist)"
    },
    {
      "interface": "StorageManager",
      "kind": "method",
      "name": "persisted",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/persisted)"
    }
  ],
  "StyleMedia": [
    {
      "interface": "StyleMedia",
      "kind": "property",
      "name": "type",
      "type": "string"
    },
    {
      "interface": "StyleMedia",
      "kind": "method",
      "name": "matchMedium",
      "parameters": [
        {
          "name": "mediaquery",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean"
    }
  ],
  "StylePropertyMap": [
    {
      "interface": "StylePropertyMap",
      "kind": "method",
      "name": "append",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "(string | CSSStyleValue)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/append)"
    },
    {
      "interface": "StylePropertyMap",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/clear)"
    },
    {
      "interface": "StylePropertyMap",
      "kind": "method",
      "name": "delete",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/delete)"
    },
    {
      "interface": "StylePropertyMap",
      "kind": "method",
      "name": "set",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "(string | CSSStyleValue)[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/set)"
    }
  ],
  "StylePropertyMapReadOnly": [
    {
      "interface": "StylePropertyMapReadOnly",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/size)"
    },
    {
      "interface": "StylePropertyMapReadOnly",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CSSStyleValue",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/get)"
    },
    {
      "interface": "StylePropertyMapReadOnly",
      "kind": "method",
      "name": "getAll",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CSSStyleValue[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/getAll)"
    },
    {
      "interface": "StylePropertyMapReadOnly",
      "kind": "method",
      "name": "has",
      "parameters": [
        {
          "name": "property",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/has)"
    },
    {
      "interface": "StylePropertyMapReadOnly",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "StyleSheet": [
    {
      "interface": "StyleSheet",
      "kind": "property",
      "name": "disabled",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/disabled)"
    },
    {
      "interface": "StyleSheet",
      "kind": "property",
      "name": "href",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/href)"
    },
    {
      "interface": "StyleSheet",
      "kind": "property",
      "name": "ownerNode",
      "type": "Element | ProcessingInstruction",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/ownerNode)"
    },
    {
      "interface": "StyleSheet",
      "kind": "property",
      "name": "parentStyleSheet",
      "type": "CSSStyleSheet",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/parentStyleSheet)"
    },
    {
      "interface": "StyleSheet",
      "kind": "property",
      "name": "title",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/title)"
    },
    {
      "interface": "StyleSheet",
      "kind": "property",
      "name": "type",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/type)"
    }
  ],
  "StyleSheetList": [
    {
      "interface": "StyleSheetList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheetList/length)"
    },
    {
      "interface": "StyleSheetList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "CSSStyleSheet",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheetList/item)"
    }
  ],
  "SubmitEvent": [
    {
      "interface": "SubmitEvent",
      "kind": "property",
      "name": "submitter",
      "type": "HTMLElement",
      "doc": "Returns the element representing the submit button that triggered the form submission, or null if the submission was not triggered by a button.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubmitEvent/submitter)"
    }
  ],
  "SubtleCrypto": [
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "decrypt",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/decrypt)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "deriveBits",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params",
          "optional": false,
          "rest": false
        },
        {
          "name": "baseKey",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "length",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveBits)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "deriveKey",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params",
          "optional": false,
          "rest": false
        },
        {
          "name": "baseKey",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "derivedKeyType",
          "type": "AlgorithmIdentifier | HkdfParams | Pbkdf2Params | AesDerivedKeyParams | HmacImportParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "KeyUsage[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "Promise<CryptoKey>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveKey)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "digest",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/digest)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "encrypt",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/encrypt)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "exportKey",
      "parameters": [
        {
          "name": "format",
          "type": "\"jwk\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<JsonWebKey>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/exportKey)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "exportKey",
      "parameters": [
        {
          "name": "format",
          "type": "\"pkcs8\" | \"raw\" | \"spki\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<ArrayBuffer>"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "exportKey",
      "parameters": [
        {
          "name": "format",
          "type": "KeyFormat",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "Promise<ArrayBuffer | JsonWebKey>"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "generateKey",
      "parameters": [
        {
          "name": "algorithm",
          "type": "\"Ed25519\" | { name: \"Ed25519\"; }",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "readonly (\"sign\" | \"verify\")[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<CryptoKeyPair>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/generateKey)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "generateKey",
      "parameters": [
        {
          "name": "algorithm",
          "type": "RsaHashedKeyGenParams | EcKeyGenParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "readonly KeyUsage[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<CryptoKeyPair>"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "generateKey",
      "parameters": [
        {
          "name": "algorithm",
          "type": "Pbkdf2Params | AesKeyGenParams | HmacKeyGenParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "readonly KeyUsage[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<CryptoKey>"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "generateKey",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "KeyUsage[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<CryptoKey | CryptoKeyPair>"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "importKey",
      "parameters": [
        {
          "name": "format",
          "type": "\"jwk\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyData",
          "type": "JsonWebKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | HmacImportParams | RsaHashedImportParams | EcKeyImportParams | AesKeyAlgorithm",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "readonly KeyUsage[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "Promise<CryptoKey>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/importKey)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "importKey",
      "parameters": [
        {
          "name": "format",
          "type": "\"pkcs8\" | \"raw\" | \"spki\"",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyData",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | HmacImportParams | RsaHashedImportParams | EcKeyImportParams | AesKeyAlgorithm",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "KeyUsage[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "Promise<CryptoKey>"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "sign",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | RsaPssParams | EcdsaParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/sign)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "unwrapKey",
      "parameters": [
        {
          "name": "format",
          "type": "KeyFormat",
          "optional": false,
          "rest": false
        },
        {
          "name": "wrappedKey",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "unwrappingKey",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "unwrapAlgorithm",
          "type": "AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "unwrappedKeyAlgorithm",
          "type": "AlgorithmIdentifier | HmacImportParams | RsaHashedImportParams | EcKeyImportParams | AesKeyAlgorithm",
          "optional": false,
          "rest": false
        },
        {
          "name": "extractable",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "keyUsages",
          "type": "KeyUsage[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "Promise<CryptoKey>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/unwrapKey)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "verify",
      "parameters": [
        {
          "name": "algorithm",
          "type": "AlgorithmIdentifier | RsaPssParams | EcdsaParams",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "signature",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "BufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "Promise<boolean>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/verify)"
    },
    {
      "interface": "SubtleCrypto",
      "kind": "method",
      "name": "wrapKey",
      "parameters": [
        {
          "name": "format",
          "type": "KeyFormat",
          "optional": false,
          "rest": false
        },
        {
          "name": "key",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "wrappingKey",
          "type": "CryptoKey",
          "optional": false,
          "rest": false
        },
        {
          "name": "wrapAlgorithm",
          "type": "AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "Promise<ArrayBuffer>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/wrapKey)"
    }
  ],
  "Text": [
    {
      "interface": "Text",
      "kind": "property",
      "name": "wholeText",
      "type": "string",
      "doc": "Returns the combined data of all direct Text node siblings.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Text/wholeText)"
    },
    {
      "interface": "Text",
      "kind": "method",
      "name": "splitText",
      "parameters": [
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Text",
      "doc": "Splits data at the given offset and returns the remainder as Text node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Text/splitText)"
    }
  ],
  "TextDecoder": [
    {
      "interface": "TextDecoder",
      "kind": "method",
      "name": "decode",
      "parameters": [
        {
          "name": "input",
          "type": "AllowSharedBufferSource",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "TextDecodeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "string",
      "doc": "Returns the result of running encoding's decoder. The method can be invoked zero or more times with options's stream set to true, and then once without options's stream (or set to false), to process a fragmented input. If the invocation without options's stream (or set to false) has no input, it's clearest to omit both arguments.\n\n```\nvar string = \"\", decoder = new TextDecoder(encoding), buffer;\nwhile(buffer = next_chunk()) {\n  string += decoder.decode(buffer, {stream:true});\n}\nstring += decoder.decode(); // end-of-queue\n```\n\nIf the error mode is \"fatal\" and encoding's decoder returns error, throws a TypeError.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/decode)"
    }
  ],
  "TextDecoderCommon": [
    {
      "interface": "TextDecoderCommon",
      "kind": "property",
      "name": "encoding",
      "type": "string",
      "doc": "Returns encoding's name, lowercased.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/encoding)"
    },
    {
      "interface": "TextDecoderCommon",
      "kind": "property",
      "name": "fatal",
      "type": "boolean",
      "doc": "Returns true if error mode is \"fatal\", otherwise false.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/fatal)"
    },
    {
      "interface": "TextDecoderCommon",
      "kind": "property",
      "name": "ignoreBOM",
      "type": "boolean",
      "doc": "Returns the value of ignore BOM.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/ignoreBOM)"
    }
  ],
  "TextDecoderStream": [
    {
      "interface": "TextDecoderStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<string>"
    },
    {
      "interface": "TextDecoderStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<BufferSource>"
    }
  ],
  "TextEncoder": [
    {
      "interface": "TextEncoder",
      "kind": "method",
      "name": "encode",
      "parameters": [
        {
          "name": "input",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Uint8Array<ArrayBufferLike>",
      "doc": "Returns the result of running UTF-8's encoder.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encode)"
    },
    {
      "interface": "TextEncoder",
      "kind": "method",
      "name": "encodeInto",
      "parameters": [
        {
          "name": "source",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "destination",
          "type": "Uint8Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "TextEncoderEncodeIntoResult",
      "doc": "Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as an object wherein read is the number of converted code units of source and written is the number of bytes modified in destination.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encodeInto)"
    }
  ],
  "TextEncoderCommon": [
    {
      "interface": "TextEncoderCommon",
      "kind": "property",
      "name": "encoding",
      "type": "string",
      "doc": "Returns \"utf-8\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encoding)"
    }
  ],
  "TextEncoderStream": [
    {
      "interface": "TextEncoderStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<Uint8Array<ArrayBufferLike>>"
    },
    {
      "interface": "TextEncoderStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<string>"
    }
  ],
  "TextEvent": [
    {
      "interface": "TextEvent",
      "kind": "property",
      "name": "data",
      "type": "string"
    },
    {
      "interface": "TextEvent",
      "kind": "method",
      "name": "initTextEvent",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubbles",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelable",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "view",
          "type": "Window",
          "optional": true,
          "rest": false
        },
        {
          "name": "data",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 1,
      "returnType": "void"
    }
  ],
  "TextMetrics": [
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "actualBoundingBoxAscent",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxAscent)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "actualBoundingBoxDescent",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxDescent)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "actualBoundingBoxLeft",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxLeft)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "actualBoundingBoxRight",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxRight)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "alphabeticBaseline",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/alphabeticBaseline)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "emHeightAscent",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/emHeightAscent)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "emHeightDescent",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/emHeightDescent)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "fontBoundingBoxAscent",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/fontBoundingBoxAscent)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "fontBoundingBoxDescent",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/fontBoundingBoxDescent)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "hangingBaseline",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/hangingBaseline)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "ideographicBaseline",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/ideographicBaseline)"
    },
    {
      "interface": "TextMetrics",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "Returns the measurement described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/width)"
    }
  ],
  "TextTrackEventMap": [
    {
      "interface": "TextTrackEventMap",
      "kind": "property",
      "name": "\"cuechange\"",
      "type": "Event"
    }
  ],
  "TextTrack": [
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "activeCues",
      "type": "TextTrackCueList",
      "doc": "Returns the text track cues from the text track list of cues that are currently active (i.e. that start before the current playback position and end after it), as a TextTrackCueList object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/activeCues)"
    },
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "cues",
      "type": "TextTrackCueList",
      "doc": "Returns the text track list of cues, as a TextTrackCueList object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/cues)"
    },
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "Returns the ID of the given track.\n\nFor in-band tracks, this is the ID that can be used with a fragment if the format supports media fragment syntax, and that can be used with the getTrackById() method.\n\nFor TextTrack objects corresponding to track elements, this is the ID of the track element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/id)"
    },
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "inBandMetadataTrackDispatchType",
      "type": "string",
      "doc": "Returns the text track in-band metadata track dispatch type string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/inBandMetadataTrackDispatchType)"
    },
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "kind",
      "type": "TextTrackKind",
      "doc": "Returns the text track kind string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/kind)"
    },
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "label",
      "type": "string",
      "doc": "Returns the text track label, if there is one, or the empty string otherwise (indicating that a custom label probably needs to be generated from the other attributes of the object if the object is exposed to the user).\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/label)"
    },
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "language",
      "type": "string",
      "doc": "Returns the text track language string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/language)"
    },
    {
      "interface": "TextTrack",
      "kind": "property",
      "name": "mode",
      "type": "TextTrackMode",
      "doc": "Returns the text track mode, represented by a string from the following list:\n\nCan be set, to change the mode.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/mode)"
    },
    {
      "interface": "TextTrack",
      "kind": "event",
      "name": "oncuechange",
      "type": "(this: TextTrack, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/cuechange_event)"
    },
    {
      "interface": "TextTrack",
      "kind": "method",
      "name": "addCue",
      "parameters": [
        {
          "name": "cue",
          "type": "TextTrackCue",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Adds the given cue to textTrack's text track list of cues.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/addCue)"
    },
    {
      "interface": "TextTrack",
      "kind": "method",
      "name": "removeCue",
      "parameters": [
        {
          "name": "cue",
          "type": "TextTrackCue",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Removes the given cue from textTrack's text track list of cues.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/removeCue)"
    },
    {
      "interface": "TextTrack",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: TextTrack, ev: TextTrackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrack",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrack",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: TextTrack, ev: TextTrackEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrack",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "TextTrackCueEventMap": [
    {
      "interface": "TextTrackCueEventMap",
      "kind": "property",
      "name": "\"enter\"",
      "type": "Event"
    },
    {
      "interface": "TextTrackCueEventMap",
      "kind": "property",
      "name": "\"exit\"",
      "type": "Event"
    }
  ],
  "TextTrackCue": [
    {
      "interface": "TextTrackCue",
      "kind": "property",
      "name": "endTime",
      "type": "number",
      "doc": "Returns the text track cue end time, in seconds.\n\nCan be set.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/endTime)"
    },
    {
      "interface": "TextTrackCue",
      "kind": "property",
      "name": "id",
      "type": "string",
      "doc": "Returns the text track cue identifier.\n\nCan be set.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/id)"
    },
    {
      "interface": "TextTrackCue",
      "kind": "event",
      "name": "onenter",
      "type": "(this: TextTrackCue, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/enter_event)"
    },
    {
      "interface": "TextTrackCue",
      "kind": "event",
      "name": "onexit",
      "type": "(this: TextTrackCue, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/exit_event)"
    },
    {
      "interface": "TextTrackCue",
      "kind": "property",
      "name": "pauseOnExit",
      "type": "boolean",
      "doc": "Returns true if the text track cue pause-on-exit flag is set, false otherwise.\n\nCan be set.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/pauseOnExit)"
    },
    {
      "interface": "TextTrackCue",
      "kind": "property",
      "name": "startTime",
      "type": "number",
      "doc": "Returns the text track cue start time, in seconds.\n\nCan be set.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/startTime)"
    },
    {
      "interface": "TextTrackCue",
      "kind": "property",
      "name": "track",
      "type": "TextTrack",
      "doc": "Returns the TextTrack object to which this text track cue belongs, if any, or null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/track)"
    },
    {
      "interface": "TextTrackCue",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrackCue",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrackCue",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrackCue",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "TextTrackCueList": [
    {
      "interface": "TextTrackCueList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of cues in the list.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCueList/length)"
    },
    {
      "interface": "TextTrackCueList",
      "kind": "method",
      "name": "getCueById",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TextTrackCue",
      "doc": "Returns the first text track cue (in text track cue order) with text track cue identifier id.\n\nReturns null if none of the cues have the given identifier or if the argument is the empty string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCueList/getCueById)"
    }
  ],
  "TextTrackListEventMap": [
    {
      "interface": "TextTrackListEventMap",
      "kind": "property",
      "name": "\"addtrack\"",
      "type": "TrackEvent"
    },
    {
      "interface": "TextTrackListEventMap",
      "kind": "property",
      "name": "\"change\"",
      "type": "Event"
    },
    {
      "interface": "TextTrackListEventMap",
      "kind": "property",
      "name": "\"removetrack\"",
      "type": "TrackEvent"
    }
  ],
  "TextTrackList": [
    {
      "interface": "TextTrackList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/length)"
    },
    {
      "interface": "TextTrackList",
      "kind": "event",
      "name": "onaddtrack",
      "type": "(this: TextTrackList, ev: TrackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/addtrack_event)"
    },
    {
      "interface": "TextTrackList",
      "kind": "event",
      "name": "onchange",
      "type": "(this: TextTrackList, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/change_event)"
    },
    {
      "interface": "TextTrackList",
      "kind": "event",
      "name": "onremovetrack",
      "type": "(this: TextTrackList, ev: TrackEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/removetrack_event)"
    },
    {
      "interface": "TextTrackList",
      "kind": "method",
      "name": "getTrackById",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "TextTrack",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/getTrackById)"
    },
    {
      "interface": "TextTrackList",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: TextTrackList, ev: TextTrackListEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrackList",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrackList",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: TextTrackList, ev: TextTrackListEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "TextTrackList",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "TimeRanges": [
    {
      "interface": "TimeRanges",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "Returns the number of ranges in the object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TimeRanges/length)"
    },
    {
      "interface": "TimeRanges",
      "kind": "method",
      "name": "end",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "Returns the time for the end of the range with the given index.\n\nThrows an \"IndexSizeError\" DOMException if the index is out of range.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TimeRanges/end)"
    },
    {
      "interface": "TimeRanges",
      "kind": "method",
      "name": "start",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "Returns the time for the start of the range with the given index.\n\nThrows an \"IndexSizeError\" DOMException if the index is out of range.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TimeRanges/start)"
    }
  ],
  "ToggleEvent": [
    {
      "interface": "ToggleEvent",
      "kind": "property",
      "name": "newState",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ToggleEvent/newState)"
    },
    {
      "interface": "ToggleEvent",
      "kind": "property",
      "name": "oldState",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ToggleEvent/oldState)"
    }
  ],
  "Touch": [
    {
      "interface": "Touch",
      "kind": "property",
      "name": "clientX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/clientX)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "clientY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/clientY)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "force",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/force)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "identifier",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/identifier)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "pageX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/pageX)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "pageY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/pageY)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "radiusX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/radiusX)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "radiusY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/radiusY)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "rotationAngle",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/rotationAngle)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "screenX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/screenX)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "screenY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/screenY)"
    },
    {
      "interface": "Touch",
      "kind": "property",
      "name": "target",
      "type": "EventTarget",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/target)"
    }
  ],
  "TouchEvent": [
    {
      "interface": "TouchEvent",
      "kind": "property",
      "name": "altKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/altKey)"
    },
    {
      "interface": "TouchEvent",
      "kind": "property",
      "name": "changedTouches",
      "type": "TouchList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/changedTouches)"
    },
    {
      "interface": "TouchEvent",
      "kind": "property",
      "name": "ctrlKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/ctrlKey)"
    },
    {
      "interface": "TouchEvent",
      "kind": "property",
      "name": "metaKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/metaKey)"
    },
    {
      "interface": "TouchEvent",
      "kind": "property",
      "name": "shiftKey",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/shiftKey)"
    },
    {
      "interface": "TouchEvent",
      "kind": "property",
      "name": "targetTouches",
      "type": "TouchList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/targetTouches)"
    },
    {
      "interface": "TouchEvent",
      "kind": "property",
      "name": "touches",
      "type": "TouchList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/touches)"
    }
  ],
  "TouchList": [
    {
      "interface": "TouchList",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchList/length)"
    },
    {
      "interface": "TouchList",
      "kind": "method",
      "name": "item",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Touch",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchList/item)"
    }
  ],
  "TrackEvent": [
    {
      "interface": "TrackEvent",
      "kind": "property",
      "name": "track",
      "type": "TextTrack",
      "doc": "Returns the track object (TextTrack, AudioTrack, or VideoTrack) to which the event relates.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/TrackEvent/track)"
    }
  ],
  "TransformStream": [
    {
      "interface": "TransformStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<O>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/readable)"
    },
    {
      "interface": "TransformStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<I>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/writable)"
    }
  ],
  "TransformStreamDefaultController": [
    {
      "interface": "TransformStreamDefaultController",
      "kind": "property",
      "name": "desiredSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize)"
    },
    {
      "interface": "TransformStreamDefaultController",
      "kind": "method",
      "name": "enqueue",
      "parameters": [
        {
          "name": "chunk",
          "type": "O",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/enqueue)"
    },
    {
      "interface": "TransformStreamDefaultController",
      "kind": "method",
      "name": "error",
      "parameters": [
        {
          "name": "reason",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error)"
    },
    {
      "interface": "TransformStreamDefaultController",
      "kind": "method",
      "name": "terminate",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate)"
    }
  ],
  "TransitionEvent": [
    {
      "interface": "TransitionEvent",
      "kind": "property",
      "name": "elapsedTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransitionEvent/elapsedTime)"
    },
    {
      "interface": "TransitionEvent",
      "kind": "property",
      "name": "propertyName",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransitionEvent/propertyName)"
    },
    {
      "interface": "TransitionEvent",
      "kind": "property",
      "name": "pseudoElement",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TransitionEvent/pseudoElement)"
    }
  ],
  "TreeWalker": [
    {
      "interface": "TreeWalker",
      "kind": "property",
      "name": "currentNode",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/currentNode)"
    },
    {
      "interface": "TreeWalker",
      "kind": "property",
      "name": "filter",
      "type": "NodeFilter",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/filter)"
    },
    {
      "interface": "TreeWalker",
      "kind": "property",
      "name": "root",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/root)"
    },
    {
      "interface": "TreeWalker",
      "kind": "property",
      "name": "whatToShow",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/whatToShow)"
    },
    {
      "interface": "TreeWalker",
      "kind": "method",
      "name": "firstChild",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/firstChild)"
    },
    {
      "interface": "TreeWalker",
      "kind": "method",
      "name": "lastChild",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/lastChild)"
    },
    {
      "interface": "TreeWalker",
      "kind": "method",
      "name": "nextNode",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/nextNode)"
    },
    {
      "interface": "TreeWalker",
      "kind": "method",
      "name": "nextSibling",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/nextSibling)"
    },
    {
      "interface": "TreeWalker",
      "kind": "method",
      "name": "parentNode",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/parentNode)"
    },
    {
      "interface": "TreeWalker",
      "kind": "method",
      "name": "previousNode",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/previousNode)"
    },
    {
      "interface": "TreeWalker",
      "kind": "method",
      "name": "previousSibling",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/previousSibling)"
    }
  ],
  "UIEvent": [
    {
      "interface": "UIEvent",
      "kind": "property",
      "name": "detail",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/UIEvent/detail)"
    },
    {
      "interface": "UIEvent",
      "kind": "property",
      "name": "view",
      "type": "Window",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/UIEvent/view)"
    },
    {
      "interface": "UIEvent",
      "kind": "property",
      "name": "which",
      "type": "number"
    },
    {
      "interface": "UIEvent",
      "kind": "method",
      "name": "initUIEvent",
      "parameters": [
        {
          "name": "typeArg",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "bubblesArg",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "cancelableArg",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "viewArg",
          "type": "Window",
          "optional": true,
          "rest": false
        },
        {
          "name": "detailArg",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 1,
      "returnType": "void"
    }
  ],
  "URL": [
    {
      "interface": "URL",
      "kind": "property",
      "name": "hash",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/hash)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "host",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/host)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "hostname",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/hostname)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "href",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/href)"
    },
    {
      "interface": "URL",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "origin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/origin)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "password",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/password)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "pathname",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/pathname)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "port",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/port)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "protocol",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/protocol)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "search",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/search)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "searchParams",
      "type": "URLSearchParams",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/searchParams)"
    },
    {
      "interface": "URL",
      "kind": "property",
      "name": "username",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/username)"
    },
    {
      "interface": "URL",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/toJSON)"
    }
  ],
  "URLSearchParams": [
    {
      "interface": "URLSearchParams",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/size)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "append",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Appends a specified key/value pair as a new search parameter.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/append)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "delete",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "Deletes the given search parameter, and its associated value, from the list of all search parameters.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/delete)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "get",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "Returns the first value associated to the given search parameter.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/get)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "getAll",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string[]",
      "doc": "Returns all the values association with a given search parameter.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/getAll)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "has",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "boolean",
      "doc": "Returns a Boolean indicating if such a search parameter exists.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/has)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "set",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/set)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "sort",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/sort)"
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "toString",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string",
      "doc": "Returns a string containing a query string suitable for use in a URL. Does not include the question mark."
    },
    {
      "interface": "URLSearchParams",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: string, key: string, parent: URLSearchParams) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "UserActivation": [
    {
      "interface": "UserActivation",
      "kind": "property",
      "name": "hasBeenActive",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/UserActivation/hasBeenActive)"
    },
    {
      "interface": "UserActivation",
      "kind": "property",
      "name": "isActive",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/UserActivation/isActive)"
    }
  ],
  "VTTCue": [
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "align",
      "type": "AlignSetting",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/align)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "line",
      "type": "LineAndPositionSetting",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/line)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "lineAlign",
      "type": "LineAlignSetting",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/lineAlign)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "position",
      "type": "LineAndPositionSetting",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/position)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "positionAlign",
      "type": "PositionAlignSetting",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/positionAlign)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "region",
      "type": "VTTRegion",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/region)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/size)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "snapToLines",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/snapToLines)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "text",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/text)"
    },
    {
      "interface": "VTTCue",
      "kind": "property",
      "name": "vertical",
      "type": "DirectionSetting",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/vertical)"
    },
    {
      "interface": "VTTCue",
      "kind": "method",
      "name": "getCueAsHTML",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "DocumentFragment",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/getCueAsHTML)"
    },
    {
      "interface": "VTTCue",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VTTCue, ev: TextTrackCueEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VTTCue",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VTTCue",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VTTCue, ev: TextTrackCueEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VTTCue",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "VTTRegion": [
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "id",
      "type": "string"
    },
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "lines",
      "type": "number"
    },
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "regionAnchorX",
      "type": "number"
    },
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "regionAnchorY",
      "type": "number"
    },
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "scroll",
      "type": "ScrollSetting"
    },
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "viewportAnchorX",
      "type": "number"
    },
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "viewportAnchorY",
      "type": "number"
    },
    {
      "interface": "VTTRegion",
      "kind": "property",
      "name": "width",
      "type": "number"
    }
  ],
  "ValidityState": [
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "badInput",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/badInput)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "customError",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/customError)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "patternMismatch",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/patternMismatch)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "rangeOverflow",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/rangeOverflow)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "rangeUnderflow",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/rangeUnderflow)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "stepMismatch",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/stepMismatch)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "tooLong",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/tooLong)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "tooShort",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/tooShort)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "typeMismatch",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/typeMismatch)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "valid",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/valid)"
    },
    {
      "interface": "ValidityState",
      "kind": "property",
      "name": "valueMissing",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/valueMissing)"
    }
  ],
  "VideoColorSpace": [
    {
      "interface": "VideoColorSpace",
      "kind": "property",
      "name": "fullRange",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/fullRange)"
    },
    {
      "interface": "VideoColorSpace",
      "kind": "property",
      "name": "matrix",
      "type": "VideoMatrixCoefficients",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/matrix)"
    },
    {
      "interface": "VideoColorSpace",
      "kind": "property",
      "name": "primaries",
      "type": "VideoColorPrimaries",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/primaries)"
    },
    {
      "interface": "VideoColorSpace",
      "kind": "property",
      "name": "transfer",
      "type": "VideoTransferCharacteristics",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/transfer)"
    },
    {
      "interface": "VideoColorSpace",
      "kind": "method",
      "name": "toJSON",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "VideoColorSpaceInit",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/toJSON)"
    }
  ],
  "VideoDecoderEventMap": [
    {
      "interface": "VideoDecoderEventMap",
      "kind": "property",
      "name": "\"dequeue\"",
      "type": "Event"
    }
  ],
  "VideoDecoder": [
    {
      "interface": "VideoDecoder",
      "kind": "property",
      "name": "decodeQueueSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decodeQueueSize)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "event",
      "name": "ondequeue",
      "type": "(this: VideoDecoder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/dequeue_event)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "property",
      "name": "state",
      "type": "CodecState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/state)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/close)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "configure",
      "parameters": [
        {
          "name": "config",
          "type": "VideoDecoderConfig",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/configure)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "decode",
      "parameters": [
        {
          "name": "chunk",
          "type": "EncodedVideoChunk",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decode)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "flush",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/flush)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/reset)"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VideoDecoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "VideoEncoderEventMap": [
    {
      "interface": "VideoEncoderEventMap",
      "kind": "property",
      "name": "\"dequeue\"",
      "type": "Event"
    }
  ],
  "VideoEncoder": [
    {
      "interface": "VideoEncoder",
      "kind": "property",
      "name": "encodeQueueSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encodeQueueSize)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "event",
      "name": "ondequeue",
      "type": "(this: VideoEncoder, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/dequeue_event)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "property",
      "name": "state",
      "type": "CodecState",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/state)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/close)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "configure",
      "parameters": [
        {
          "name": "config",
          "type": "VideoEncoderConfig",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/configure)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "encode",
      "parameters": [
        {
          "name": "frame",
          "type": "VideoFrame",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "VideoEncoderEncodeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encode)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "flush",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/flush)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/reset)"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VideoEncoder",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "VideoFrame": [
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "codedHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedHeight)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "codedRect",
      "type": "DOMRectReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedRect)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "codedWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedWidth)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "colorSpace",
      "type": "VideoColorSpace",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/colorSpace)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "displayHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/displayHeight)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "displayWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/displayWidth)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "duration",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/duration)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "format",
      "type": "VideoPixelFormat",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/format)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "timestamp",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/timestamp)"
    },
    {
      "interface": "VideoFrame",
      "kind": "property",
      "name": "visibleRect",
      "type": "DOMRectReadOnly",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/visibleRect)"
    },
    {
      "interface": "VideoFrame",
      "kind": "method",
      "name": "allocationSize",
      "parameters": [
        {
          "name": "options",
          "type": "VideoFrameCopyToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/allocationSize)"
    },
    {
      "interface": "VideoFrame",
      "kind": "method",
      "name": "clone",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "VideoFrame",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/clone)"
    },
    {
      "interface": "VideoFrame",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/close)"
    },
    {
      "interface": "VideoFrame",
      "kind": "method",
      "name": "copyTo",
      "parameters": [
        {
          "name": "destination",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "VideoFrameCopyToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<PlaneLayout[]>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/copyTo)"
    }
  ],
  "VideoPlaybackQuality": [
    {
      "interface": "VideoPlaybackQuality",
      "kind": "property",
      "name": "corruptedVideoFrames",
      "type": "number"
    },
    {
      "interface": "VideoPlaybackQuality",
      "kind": "property",
      "name": "creationTime",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality/creationTime)"
    },
    {
      "interface": "VideoPlaybackQuality",
      "kind": "property",
      "name": "droppedVideoFrames",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality/droppedVideoFrames)"
    },
    {
      "interface": "VideoPlaybackQuality",
      "kind": "property",
      "name": "totalVideoFrames",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality/totalVideoFrames)"
    }
  ],
  "ViewTransition": [
    {
      "interface": "ViewTransition",
      "kind": "property",
      "name": "finished",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/finished)"
    },
    {
      "interface": "ViewTransition",
      "kind": "property",
      "name": "ready",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/ready)"
    },
    {
      "interface": "ViewTransition",
      "kind": "property",
      "name": "types",
      "type": "ViewTransitionTypeSet"
    },
    {
      "interface": "ViewTransition",
      "kind": "property",
      "name": "updateCallbackDone",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/updateCallbackDone)"
    },
    {
      "interface": "ViewTransition",
      "kind": "method",
      "name": "skipTransition",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/skipTransition)"
    }
  ],
  "ViewTransitionTypeSet": [
    {
      "interface": "ViewTransitionTypeSet",
      "kind": "method",
      "name": "forEach",
      "parameters": [
        {
          "name": "callbackfn",
          "type": "(value: string, key: string, parent: ViewTransitionTypeSet) => void",
          "optional": false,
          "rest": false
        },
        {
          "name": "thisArg",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    }
  ],
  "VisualViewportEventMap": [
    {
      "interface": "VisualViewportEventMap",
      "kind": "property",
      "name": "\"resize\"",
      "type": "Event"
    },
    {
      "interface": "VisualViewportEventMap",
      "kind": "property",
      "name": "\"scroll\"",
      "type": "Event"
    }
  ],
  "VisualViewport": [
    {
      "interface": "VisualViewport",
      "kind": "property",
      "name": "height",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/height)"
    },
    {
      "interface": "VisualViewport",
      "kind": "property",
      "name": "offsetLeft",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/offsetLeft)"
    },
    {
      "interface": "VisualViewport",
      "kind": "property",
      "name": "offsetTop",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/offsetTop)"
    },
    {
      "interface": "VisualViewport",
      "kind": "event",
      "name": "onresize",
      "type": "(this: VisualViewport, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/resize_event)"
    },
    {
      "interface": "VisualViewport",
      "kind": "event",
      "name": "onscroll",
      "type": "(this: VisualViewport, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/scroll_event)"
    },
    {
      "interface": "VisualViewport",
      "kind": "property",
      "name": "pageLeft",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/pageLeft)"
    },
    {
      "interface": "VisualViewport",
      "kind": "property",
      "name": "pageTop",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/pageTop)"
    },
    {
      "interface": "VisualViewport",
      "kind": "property",
      "name": "scale",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/scale)"
    },
    {
      "interface": "VisualViewport",
      "kind": "property",
      "name": "width",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/width)"
    },
    {
      "interface": "VisualViewport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VisualViewport, ev: VisualViewportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VisualViewport",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VisualViewport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: VisualViewport, ev: VisualViewportEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "VisualViewport",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "WEBGL_color_buffer_float": [
    {
      "interface": "WEBGL_color_buffer_float",
      "kind": "property",
      "name": "RGBA32F_EXT",
      "type": "34836"
    },
    {
      "interface": "WEBGL_color_buffer_float",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT",
      "type": "33297"
    },
    {
      "interface": "WEBGL_color_buffer_float",
      "kind": "property",
      "name": "UNSIGNED_NORMALIZED_EXT",
      "type": "35863"
    }
  ],
  "WEBGL_compressed_texture_astc": [
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "method",
      "name": "getSupportedProfiles",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles)"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_4x4_KHR",
      "type": "37808"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_5x4_KHR",
      "type": "37809"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_5x5_KHR",
      "type": "37810"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_6x5_KHR",
      "type": "37811"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_6x6_KHR",
      "type": "37812"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_8x5_KHR",
      "type": "37813"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_8x6_KHR",
      "type": "37814"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_8x8_KHR",
      "type": "37815"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_10x5_KHR",
      "type": "37816"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_10x6_KHR",
      "type": "37817"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_10x8_KHR",
      "type": "37818"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_10x10_KHR",
      "type": "37819"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_12x10_KHR",
      "type": "37820"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_ASTC_12x12_KHR",
      "type": "37821"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",
      "type": "37840"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",
      "type": "37841"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",
      "type": "37842"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",
      "type": "37843"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",
      "type": "37844"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",
      "type": "37845"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",
      "type": "37846"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",
      "type": "37847"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",
      "type": "37848"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",
      "type": "37849"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",
      "type": "37850"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",
      "type": "37851"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",
      "type": "37852"
    },
    {
      "interface": "WEBGL_compressed_texture_astc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR",
      "type": "37853"
    }
  ],
  "WEBGL_compressed_texture_etc": [
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_R11_EAC",
      "type": "37488"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_SIGNED_R11_EAC",
      "type": "37489"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_RG11_EAC",
      "type": "37490"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_SIGNED_RG11_EAC",
      "type": "37491"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_RGB8_ETC2",
      "type": "37492"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ETC2",
      "type": "37493"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",
      "type": "37494"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",
      "type": "37495"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_RGBA8_ETC2_EAC",
      "type": "37496"
    },
    {
      "interface": "WEBGL_compressed_texture_etc",
      "kind": "property",
      "name": "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",
      "type": "37497"
    }
  ],
  "WEBGL_compressed_texture_etc1": [
    {
      "interface": "WEBGL_compressed_texture_etc1",
      "kind": "property",
      "name": "COMPRESSED_RGB_ETC1_WEBGL",
      "type": "36196"
    }
  ],
  "WEBGL_compressed_texture_pvrtc": [
    {
      "interface": "WEBGL_compressed_texture_pvrtc",
      "kind": "property",
      "name": "COMPRESSED_RGB_PVRTC_4BPPV1_IMG",
      "type": "35840"
    },
    {
      "interface": "WEBGL_compressed_texture_pvrtc",
      "kind": "property",
      "name": "COMPRESSED_RGB_PVRTC_2BPPV1_IMG",
      "type": "35841"
    },
    {
      "interface": "WEBGL_compressed_texture_pvrtc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",
      "type": "35842"
    },
    {
      "interface": "WEBGL_compressed_texture_pvrtc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",
      "type": "35843"
    }
  ],
  "WEBGL_compressed_texture_s3tc": [
    {
      "interface": "WEBGL_compressed_texture_s3tc",
      "kind": "property",
      "name": "COMPRESSED_RGB_S3TC_DXT1_EXT",
      "type": "33776"
    },
    {
      "interface": "WEBGL_compressed_texture_s3tc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_S3TC_DXT1_EXT",
      "type": "33777"
    },
    {
      "interface": "WEBGL_compressed_texture_s3tc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_S3TC_DXT3_EXT",
      "type": "33778"
    },
    {
      "interface": "WEBGL_compressed_texture_s3tc",
      "kind": "property",
      "name": "COMPRESSED_RGBA_S3TC_DXT5_EXT",
      "type": "33779"
    }
  ],
  "WEBGL_compressed_texture_s3tc_srgb": [
    {
      "interface": "WEBGL_compressed_texture_s3tc_srgb",
      "kind": "property",
      "name": "COMPRESSED_SRGB_S3TC_DXT1_EXT",
      "type": "35916"
    },
    {
      "interface": "WEBGL_compressed_texture_s3tc_srgb",
      "kind": "property",
      "name": "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",
      "type": "35917"
    },
    {
      "interface": "WEBGL_compressed_texture_s3tc_srgb",
      "kind": "property",
      "name": "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",
      "type": "35918"
    },
    {
      "interface": "WEBGL_compressed_texture_s3tc_srgb",
      "kind": "property",
      "name": "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",
      "type": "35919"
    }
  ],
  "WEBGL_debug_renderer_info": [
    {
      "interface": "WEBGL_debug_renderer_info",
      "kind": "property",
      "name": "UNMASKED_VENDOR_WEBGL",
      "type": "37445"
    },
    {
      "interface": "WEBGL_debug_renderer_info",
      "kind": "property",
      "name": "UNMASKED_RENDERER_WEBGL",
      "type": "37446"
    }
  ],
  "WEBGL_debug_shaders": [
    {
      "interface": "WEBGL_debug_shaders",
      "kind": "method",
      "name": "getTranslatedShaderSource",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_debug_shaders/getTranslatedShaderSource)"
    }
  ],
  "WEBGL_depth_texture": [
    {
      "interface": "WEBGL_depth_texture",
      "kind": "property",
      "name": "UNSIGNED_INT_24_8_WEBGL",
      "type": "34042"
    }
  ],
  "WEBGL_draw_buffers": [
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "method",
      "name": "drawBuffersWEBGL",
      "parameters": [
        {
          "name": "buffers",
          "type": "number[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL)"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT0_WEBGL",
      "type": "36064"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT1_WEBGL",
      "type": "36065"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT2_WEBGL",
      "type": "36066"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT3_WEBGL",
      "type": "36067"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT4_WEBGL",
      "type": "36068"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT5_WEBGL",
      "type": "36069"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT6_WEBGL",
      "type": "36070"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT7_WEBGL",
      "type": "36071"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT8_WEBGL",
      "type": "36072"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT9_WEBGL",
      "type": "36073"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT10_WEBGL",
      "type": "36074"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT11_WEBGL",
      "type": "36075"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT12_WEBGL",
      "type": "36076"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT13_WEBGL",
      "type": "36077"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT14_WEBGL",
      "type": "36078"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "COLOR_ATTACHMENT15_WEBGL",
      "type": "36079"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER0_WEBGL",
      "type": "34853"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER1_WEBGL",
      "type": "34854"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER2_WEBGL",
      "type": "34855"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER3_WEBGL",
      "type": "34856"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER4_WEBGL",
      "type": "34857"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER5_WEBGL",
      "type": "34858"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER6_WEBGL",
      "type": "34859"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER7_WEBGL",
      "type": "34860"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER8_WEBGL",
      "type": "34861"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER9_WEBGL",
      "type": "34862"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER10_WEBGL",
      "type": "34863"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER11_WEBGL",
      "type": "34864"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER12_WEBGL",
      "type": "34865"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER13_WEBGL",
      "type": "34866"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER14_WEBGL",
      "type": "34867"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "DRAW_BUFFER15_WEBGL",
      "type": "34868"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "MAX_COLOR_ATTACHMENTS_WEBGL",
      "type": "36063"
    },
    {
      "interface": "WEBGL_draw_buffers",
      "kind": "property",
      "name": "MAX_DRAW_BUFFERS_WEBGL",
      "type": "34852"
    }
  ],
  "WEBGL_lose_context": [
    {
      "interface": "WEBGL_lose_context",
      "kind": "method",
      "name": "loseContext",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context/loseContext)"
    },
    {
      "interface": "WEBGL_lose_context",
      "kind": "method",
      "name": "restoreContext",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context/restoreContext)"
    }
  ],
  "WEBGL_multi_draw": [
    {
      "interface": "WEBGL_multi_draw",
      "kind": "method",
      "name": "multiDrawArraysInstancedWEBGL",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "firstsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "firstsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "instanceCountsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "instanceCountsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawcount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 8,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL)"
    },
    {
      "interface": "WEBGL_multi_draw",
      "kind": "method",
      "name": "multiDrawArraysWEBGL",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "firstsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "firstsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawcount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL)"
    },
    {
      "interface": "WEBGL_multi_draw",
      "kind": "method",
      "name": "multiDrawElementsInstancedWEBGL",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offsetsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "offsetsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "instanceCountsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "instanceCountsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawcount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL)"
    },
    {
      "interface": "WEBGL_multi_draw",
      "kind": "method",
      "name": "multiDrawElementsWEBGL",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "countsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offsetsList",
          "type": "number[] | Int32Array<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "offsetsOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawcount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL)"
    }
  ],
  "WakeLock": [
    {
      "interface": "WakeLock",
      "kind": "method",
      "name": "request",
      "parameters": [
        {
          "name": "type",
          "type": "\"screen\"",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<WakeLockSentinel>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLock/request)"
    }
  ],
  "WakeLockSentinelEventMap": [
    {
      "interface": "WakeLockSentinelEventMap",
      "kind": "property",
      "name": "\"release\"",
      "type": "Event"
    }
  ],
  "WakeLockSentinel": [
    {
      "interface": "WakeLockSentinel",
      "kind": "event",
      "name": "onrelease",
      "type": "(this: WakeLockSentinel, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/release_event)"
    },
    {
      "interface": "WakeLockSentinel",
      "kind": "property",
      "name": "released",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/released)"
    },
    {
      "interface": "WakeLockSentinel",
      "kind": "property",
      "name": "type",
      "type": "\"screen\"",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/type)"
    },
    {
      "interface": "WakeLockSentinel",
      "kind": "method",
      "name": "release",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/release)"
    },
    {
      "interface": "WakeLockSentinel",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WakeLockSentinel",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WakeLockSentinel",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WakeLockSentinel",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "WaveShaperNode": [
    {
      "interface": "WaveShaperNode",
      "kind": "property",
      "name": "curve",
      "type": "Float32Array<ArrayBufferLike>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WaveShaperNode/curve)"
    },
    {
      "interface": "WaveShaperNode",
      "kind": "property",
      "name": "oversample",
      "type": "OverSampleType",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WaveShaperNode/oversample)"
    }
  ],
  "WebGL2RenderingContextBase": [
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "beginQuery",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "query",
          "type": "WebGLQuery",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/beginQuery)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "beginTransformFeedback",
      "parameters": [
        {
          "name": "primitiveMode",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/beginTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "bindBufferBase",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "buffer",
          "type": "WebGLBuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindBufferBase)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "bindBufferRange",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "buffer",
          "type": "WebGLBuffer",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindBufferRange)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "bindSampler",
      "parameters": [
        {
          "name": "unit",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sampler",
          "type": "WebGLSampler",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindSampler)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "bindTransformFeedback",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "tf",
          "type": "WebGLTransformFeedback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "bindVertexArray",
      "parameters": [
        {
          "name": "array",
          "type": "WebGLVertexArrayObject",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindVertexArray)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "blitFramebuffer",
      "parameters": [
        {
          "name": "srcX0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcY0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcX1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcY1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstX0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstY0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstX1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstY1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "mask",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "filter",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 10,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/blitFramebuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "clearBufferfi",
      "parameters": [
        {
          "name": "buffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawbuffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "stencil",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "clearBufferfv",
      "parameters": [
        {
          "name": "buffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawbuffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "clearBufferiv",
      "parameters": [
        {
          "name": "buffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawbuffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Int32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "clearBufferuiv",
      "parameters": [
        {
          "name": "buffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "drawbuffer",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Uint32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "clientWaitSync",
      "parameters": [
        {
          "name": "sync",
          "type": "WebGLSync",
          "optional": false,
          "rest": false
        },
        {
          "name": "flags",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "timeout",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clientWaitSync)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "compressedTexImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "imageSize",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/compressedTexImage3D)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "compressedTexImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLengthOverride",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 8,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "compressedTexSubImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "imageSize",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 11,
      "required": 11,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/compressedTexSubImage3D)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "compressedTexSubImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLengthOverride",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 12,
      "required": 10,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "copyBufferSubData",
      "parameters": [
        {
          "name": "readTarget",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "writeTarget",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "readOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "writeOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/copyBufferSubData)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "copyTexSubImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/copyTexSubImage3D)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "createQuery",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLQuery",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createQuery)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "createSampler",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLSampler",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createSampler)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "createTransformFeedback",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLTransformFeedback",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "createVertexArray",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLVertexArrayObject",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createVertexArray)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "deleteQuery",
      "parameters": [
        {
          "name": "query",
          "type": "WebGLQuery",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteQuery)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "deleteSampler",
      "parameters": [
        {
          "name": "sampler",
          "type": "WebGLSampler",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteSampler)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "deleteSync",
      "parameters": [
        {
          "name": "sync",
          "type": "WebGLSync",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteSync)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "deleteTransformFeedback",
      "parameters": [
        {
          "name": "tf",
          "type": "WebGLTransformFeedback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "deleteVertexArray",
      "parameters": [
        {
          "name": "vertexArray",
          "type": "WebGLVertexArrayObject",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteVertexArray)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "drawArraysInstanced",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "first",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "instanceCount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawArraysInstanced)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "drawBuffers",
      "parameters": [
        {
          "name": "buffers",
          "type": "number[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "drawElementsInstanced",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "instanceCount",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "drawRangeElements",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawRangeElements)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "endQuery",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/endQuery)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "endTransformFeedback",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/endTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "fenceSync",
      "parameters": [
        {
          "name": "condition",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "flags",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "WebGLSync",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/fenceSync)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "framebufferTextureLayer",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "attachment",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "texture",
          "type": "WebGLTexture",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "layer",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/framebufferTextureLayer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getActiveUniformBlockName",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "uniformBlockIndex",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockName)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getActiveUniformBlockParameter",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "uniformBlockIndex",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getActiveUniforms",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "uniformIndices",
          "type": "number[]",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getBufferSubData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcByteOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstBuffer",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "length",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getBufferSubData)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getFragDataLocation",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getFragDataLocation)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getIndexedParameter",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getIndexedParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getInternalformatParameter",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getQuery",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "WebGLQuery",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQuery)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getQueryParameter",
      "parameters": [
        {
          "name": "query",
          "type": "WebGLQuery",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQueryParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getSamplerParameter",
      "parameters": [
        {
          "name": "sampler",
          "type": "WebGLSampler",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSamplerParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getSyncParameter",
      "parameters": [
        {
          "name": "sync",
          "type": "WebGLSync",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSyncParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getTransformFeedbackVarying",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "WebGLActiveInfo",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getUniformBlockIndex",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "uniformBlockName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformBlockIndex)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "getUniformIndices",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "uniformNames",
          "type": "string[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformIndices)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "invalidateFramebuffer",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "attachments",
          "type": "number[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "invalidateSubFramebuffer",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "attachments",
          "type": "number[]",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "isQuery",
      "parameters": [
        {
          "name": "query",
          "type": "WebGLQuery",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isQuery)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "isSampler",
      "parameters": [
        {
          "name": "sampler",
          "type": "WebGLSampler",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isSampler)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "isSync",
      "parameters": [
        {
          "name": "sync",
          "type": "WebGLSync",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isSync)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "isTransformFeedback",
      "parameters": [
        {
          "name": "tf",
          "type": "WebGLTransformFeedback",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "isVertexArray",
      "parameters": [
        {
          "name": "vertexArray",
          "type": "WebGLVertexArrayObject",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isVertexArray)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "pauseTransformFeedback",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/pauseTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "readBuffer",
      "parameters": [
        {
          "name": "src",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/readBuffer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "renderbufferStorageMultisample",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "samples",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/renderbufferStorageMultisample)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "resumeTransformFeedback",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/resumeTransformFeedback)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "samplerParameterf",
      "parameters": [
        {
          "name": "sampler",
          "type": "WebGLSampler",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "param",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/samplerParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "samplerParameteri",
      "parameters": [
        {
          "name": "sampler",
          "type": "WebGLSampler",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "param",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/samplerParameter)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pboOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 10,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texImage3D)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 10,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 10,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 11,
      "required": 11,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texStorage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "levels",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texStorage2D)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texStorage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "levels",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texStorage3D)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texSubImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pboOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 11,
      "required": 11,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texSubImage3D)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texSubImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 11,
      "required": 11,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "texSubImage3D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 12,
      "required": 11,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "transformFeedbackVaryings",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "varyings",
          "type": "string[]",
          "optional": false,
          "rest": false
        },
        {
          "name": "bufferMode",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform1ui",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v0",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform1uiv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Uint32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform2ui",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "v1",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform2uiv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Uint32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform3ui",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "v1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "v2",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform3uiv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Uint32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform4ui",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v0",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "v1",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "v2",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "v3",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniform4uiv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Uint32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniformBlockBinding",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "uniformBlockIndex",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "uniformBlockBinding",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformBlockBinding)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniformMatrix2x3fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniformMatrix2x4fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniformMatrix3x2fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniformMatrix3x4fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniformMatrix4x2fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "uniformMatrix4x3fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "vertexAttribDivisor",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "divisor",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribDivisor)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "vertexAttribI4i",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "vertexAttribI4iv",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Int32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "vertexAttribI4ui",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "vertexAttribI4uiv",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Uint32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "vertexAttribIPointer",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "stride",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribIPointer)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "method",
      "name": "waitSync",
      "parameters": [
        {
          "name": "sync",
          "type": "WebGLSync",
          "optional": false,
          "rest": false
        },
        {
          "name": "flags",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "timeout",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/waitSync)"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "READ_BUFFER",
      "type": "3074"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNPACK_ROW_LENGTH",
      "type": "3314"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNPACK_SKIP_ROWS",
      "type": "3315"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNPACK_SKIP_PIXELS",
      "type": "3316"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "PACK_ROW_LENGTH",
      "type": "3330"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "PACK_SKIP_ROWS",
      "type": "3331"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "PACK_SKIP_PIXELS",
      "type": "3332"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR",
      "type": "6144"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DEPTH",
      "type": "6145"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "STENCIL",
      "type": "6146"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RED",
      "type": "6403"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB8",
      "type": "32849"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB10_A2",
      "type": "32857"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_BINDING_3D",
      "type": "32874"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNPACK_SKIP_IMAGES",
      "type": "32877"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNPACK_IMAGE_HEIGHT",
      "type": "32878"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_3D",
      "type": "32879"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_WRAP_R",
      "type": "32882"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_3D_TEXTURE_SIZE",
      "type": "32883"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_2_10_10_10_REV",
      "type": "33640"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_ELEMENTS_VERTICES",
      "type": "33000"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_ELEMENTS_INDICES",
      "type": "33001"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_MIN_LOD",
      "type": "33082"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_MAX_LOD",
      "type": "33083"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_BASE_LEVEL",
      "type": "33084"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_MAX_LEVEL",
      "type": "33085"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MIN",
      "type": "32775"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX",
      "type": "32776"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DEPTH_COMPONENT24",
      "type": "33190"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_TEXTURE_LOD_BIAS",
      "type": "34045"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_COMPARE_MODE",
      "type": "34892"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_COMPARE_FUNC",
      "type": "34893"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "CURRENT_QUERY",
      "type": "34917"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "QUERY_RESULT",
      "type": "34918"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "QUERY_RESULT_AVAILABLE",
      "type": "34919"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "STREAM_READ",
      "type": "35041"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "STREAM_COPY",
      "type": "35042"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "STATIC_READ",
      "type": "35045"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "STATIC_COPY",
      "type": "35046"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DYNAMIC_READ",
      "type": "35049"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DYNAMIC_COPY",
      "type": "35050"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_DRAW_BUFFERS",
      "type": "34852"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER0",
      "type": "34853"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER1",
      "type": "34854"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER2",
      "type": "34855"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER3",
      "type": "34856"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER4",
      "type": "34857"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER5",
      "type": "34858"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER6",
      "type": "34859"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER7",
      "type": "34860"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER8",
      "type": "34861"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER9",
      "type": "34862"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER10",
      "type": "34863"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER11",
      "type": "34864"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER12",
      "type": "34865"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER13",
      "type": "34866"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER14",
      "type": "34867"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_BUFFER15",
      "type": "34868"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_FRAGMENT_UNIFORM_COMPONENTS",
      "type": "35657"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_VERTEX_UNIFORM_COMPONENTS",
      "type": "35658"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_3D",
      "type": "35679"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_2D_SHADOW",
      "type": "35682"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAGMENT_SHADER_DERIVATIVE_HINT",
      "type": "35723"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "PIXEL_PACK_BUFFER",
      "type": "35051"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "PIXEL_UNPACK_BUFFER",
      "type": "35052"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "PIXEL_PACK_BUFFER_BINDING",
      "type": "35053"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "PIXEL_UNPACK_BUFFER_BINDING",
      "type": "35055"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT2x3",
      "type": "35685"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT2x4",
      "type": "35686"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT3x2",
      "type": "35687"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT3x4",
      "type": "35688"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT4x2",
      "type": "35689"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT4x3",
      "type": "35690"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SRGB",
      "type": "35904"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SRGB8",
      "type": "35905"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SRGB8_ALPHA8",
      "type": "35907"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COMPARE_REF_TO_TEXTURE",
      "type": "34894"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA32F",
      "type": "34836"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB32F",
      "type": "34837"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA16F",
      "type": "34842"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB16F",
      "type": "34843"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_INTEGER",
      "type": "35069"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_ARRAY_TEXTURE_LAYERS",
      "type": "35071"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MIN_PROGRAM_TEXEL_OFFSET",
      "type": "35076"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_PROGRAM_TEXEL_OFFSET",
      "type": "35077"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_VARYING_COMPONENTS",
      "type": "35659"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_2D_ARRAY",
      "type": "35866"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_BINDING_2D_ARRAY",
      "type": "35869"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R11F_G11F_B10F",
      "type": "35898"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_10F_11F_11F_REV",
      "type": "35899"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB9_E5",
      "type": "35901"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_5_9_9_9_REV",
      "type": "35902"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_BUFFER_MODE",
      "type": "35967"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",
      "type": "35968"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_VARYINGS",
      "type": "35971"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_BUFFER_START",
      "type": "35972"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_BUFFER_SIZE",
      "type": "35973"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",
      "type": "35976"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RASTERIZER_DISCARD",
      "type": "35977"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",
      "type": "35978"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",
      "type": "35979"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "INTERLEAVED_ATTRIBS",
      "type": "35980"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SEPARATE_ATTRIBS",
      "type": "35981"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_BUFFER",
      "type": "35982"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_BUFFER_BINDING",
      "type": "35983"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA32UI",
      "type": "36208"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB32UI",
      "type": "36209"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA16UI",
      "type": "36214"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB16UI",
      "type": "36215"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA8UI",
      "type": "36220"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB8UI",
      "type": "36221"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA32I",
      "type": "36226"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB32I",
      "type": "36227"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA16I",
      "type": "36232"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB16I",
      "type": "36233"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA8I",
      "type": "36238"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB8I",
      "type": "36239"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RED_INTEGER",
      "type": "36244"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB_INTEGER",
      "type": "36248"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA_INTEGER",
      "type": "36249"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_2D_ARRAY",
      "type": "36289"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_2D_ARRAY_SHADOW",
      "type": "36292"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_CUBE_SHADOW",
      "type": "36293"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_VEC2",
      "type": "36294"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_VEC3",
      "type": "36295"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_VEC4",
      "type": "36296"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "INT_SAMPLER_2D",
      "type": "36298"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "INT_SAMPLER_3D",
      "type": "36299"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "INT_SAMPLER_CUBE",
      "type": "36300"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "INT_SAMPLER_2D_ARRAY",
      "type": "36303"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_SAMPLER_2D",
      "type": "36306"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_SAMPLER_3D",
      "type": "36307"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_SAMPLER_CUBE",
      "type": "36308"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_SAMPLER_2D_ARRAY",
      "type": "36311"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DEPTH_COMPONENT32F",
      "type": "36012"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DEPTH32F_STENCIL8",
      "type": "36013"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FLOAT_32_UNSIGNED_INT_24_8_REV",
      "type": "36269"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",
      "type": "33296"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",
      "type": "33297"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_RED_SIZE",
      "type": "33298"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",
      "type": "33299"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",
      "type": "33300"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",
      "type": "33301"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",
      "type": "33302"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",
      "type": "33303"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_DEFAULT",
      "type": "33304"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT_24_8",
      "type": "34042"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DEPTH24_STENCIL8",
      "type": "35056"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_NORMALIZED",
      "type": "35863"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_FRAMEBUFFER_BINDING",
      "type": "36006"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "READ_FRAMEBUFFER",
      "type": "36008"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "DRAW_FRAMEBUFFER",
      "type": "36009"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "READ_FRAMEBUFFER_BINDING",
      "type": "36010"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_SAMPLES",
      "type": "36011"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",
      "type": "36052"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_COLOR_ATTACHMENTS",
      "type": "36063"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT1",
      "type": "36065"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT2",
      "type": "36066"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT3",
      "type": "36067"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT4",
      "type": "36068"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT5",
      "type": "36069"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT6",
      "type": "36070"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT7",
      "type": "36071"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT8",
      "type": "36072"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT9",
      "type": "36073"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT10",
      "type": "36074"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT11",
      "type": "36075"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT12",
      "type": "36076"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT13",
      "type": "36077"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT14",
      "type": "36078"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT15",
      "type": "36079"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",
      "type": "36182"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_SAMPLES",
      "type": "36183"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "HALF_FLOAT",
      "type": "5131"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG",
      "type": "33319"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG_INTEGER",
      "type": "33320"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R8",
      "type": "33321"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG8",
      "type": "33323"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R16F",
      "type": "33325"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R32F",
      "type": "33326"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG16F",
      "type": "33327"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG32F",
      "type": "33328"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R8I",
      "type": "33329"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R8UI",
      "type": "33330"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R16I",
      "type": "33331"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R16UI",
      "type": "33332"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R32I",
      "type": "33333"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R32UI",
      "type": "33334"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG8I",
      "type": "33335"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG8UI",
      "type": "33336"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG16I",
      "type": "33337"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG16UI",
      "type": "33338"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG32I",
      "type": "33339"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG32UI",
      "type": "33340"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ARRAY_BINDING",
      "type": "34229"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "R8_SNORM",
      "type": "36756"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RG8_SNORM",
      "type": "36757"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB8_SNORM",
      "type": "36758"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGBA8_SNORM",
      "type": "36759"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SIGNED_NORMALIZED",
      "type": "36764"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COPY_READ_BUFFER",
      "type": "36662"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COPY_WRITE_BUFFER",
      "type": "36663"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COPY_READ_BUFFER_BINDING",
      "type": "36662"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "COPY_WRITE_BUFFER_BINDING",
      "type": "36663"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BUFFER",
      "type": "35345"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BUFFER_BINDING",
      "type": "35368"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BUFFER_START",
      "type": "35369"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BUFFER_SIZE",
      "type": "35370"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_VERTEX_UNIFORM_BLOCKS",
      "type": "35371"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_FRAGMENT_UNIFORM_BLOCKS",
      "type": "35373"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_COMBINED_UNIFORM_BLOCKS",
      "type": "35374"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_UNIFORM_BUFFER_BINDINGS",
      "type": "35375"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_UNIFORM_BLOCK_SIZE",
      "type": "35376"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",
      "type": "35377"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",
      "type": "35379"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BUFFER_OFFSET_ALIGNMENT",
      "type": "35380"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "ACTIVE_UNIFORM_BLOCKS",
      "type": "35382"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_TYPE",
      "type": "35383"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_SIZE",
      "type": "35384"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BLOCK_INDEX",
      "type": "35386"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_OFFSET",
      "type": "35387"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_ARRAY_STRIDE",
      "type": "35388"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_MATRIX_STRIDE",
      "type": "35389"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_IS_ROW_MAJOR",
      "type": "35390"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BLOCK_BINDING",
      "type": "35391"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BLOCK_DATA_SIZE",
      "type": "35392"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BLOCK_ACTIVE_UNIFORMS",
      "type": "35394"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",
      "type": "35395"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",
      "type": "35396"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",
      "type": "35398"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "INVALID_INDEX",
      "type": "4294967295"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_VERTEX_OUTPUT_COMPONENTS",
      "type": "37154"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_FRAGMENT_INPUT_COMPONENTS",
      "type": "37157"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_SERVER_WAIT_TIMEOUT",
      "type": "37137"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "OBJECT_TYPE",
      "type": "37138"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SYNC_CONDITION",
      "type": "37139"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SYNC_STATUS",
      "type": "37140"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SYNC_FLAGS",
      "type": "37141"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SYNC_FENCE",
      "type": "37142"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SYNC_GPU_COMMANDS_COMPLETE",
      "type": "37143"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "UNSIGNALED",
      "type": "37144"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SIGNALED",
      "type": "37145"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "ALREADY_SIGNALED",
      "type": "37146"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TIMEOUT_EXPIRED",
      "type": "37147"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "CONDITION_SATISFIED",
      "type": "37148"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "WAIT_FAILED",
      "type": "37149"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SYNC_FLUSH_COMMANDS_BIT",
      "type": "1"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_DIVISOR",
      "type": "35070"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "ANY_SAMPLES_PASSED",
      "type": "35887"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "ANY_SAMPLES_PASSED_CONSERVATIVE",
      "type": "36202"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_BINDING",
      "type": "35097"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "RGB10_A2UI",
      "type": "36975"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "INT_2_10_10_10_REV",
      "type": "36255"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK",
      "type": "36386"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_PAUSED",
      "type": "36387"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_ACTIVE",
      "type": "36388"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TRANSFORM_FEEDBACK_BINDING",
      "type": "36389"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_IMMUTABLE_FORMAT",
      "type": "37167"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_ELEMENT_INDEX",
      "type": "36203"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_IMMUTABLE_LEVELS",
      "type": "33503"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "TIMEOUT_IGNORED",
      "type": "-1"
    },
    {
      "interface": "WebGL2RenderingContextBase",
      "kind": "property",
      "name": "MAX_CLIENT_WAIT_TIMEOUT_WEBGL",
      "type": "37447"
    }
  ],
  "WebGL2RenderingContextOverloads": [
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "bufferData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "usage",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bufferData)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "bufferData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "usage",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "bufferData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "usage",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "length",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 4,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "bufferSubData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstByteOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bufferSubData)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "bufferSubData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstByteOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "length",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 4,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "compressedTexImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "imageSize",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 8,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexImage2D)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "compressedTexImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLengthOverride",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 7,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "compressedTexSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "imageSize",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "compressedTexSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLengthOverride",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 8,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "readPixels",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/readPixels)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "readPixels",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "readPixels",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 8,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pixels",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texImage2D)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pboOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 10,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pixels",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texSubImage2D)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pboOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "texSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcData",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 10,
      "required": 10,
      "returnType": "void"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform1fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform1iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Int32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform2fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform2iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Int32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform3fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform3iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Int32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform4fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniform4iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Int32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniformMatrix2fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniformMatrix3fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGL2RenderingContextOverloads",
      "kind": "method",
      "name": "uniformMatrix4fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "Float32List",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcOffset",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "srcLength",
          "type": "number",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix)"
    }
  ],
  "WebGLActiveInfo": [
    {
      "interface": "WebGLActiveInfo",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/name)"
    },
    {
      "interface": "WebGLActiveInfo",
      "kind": "property",
      "name": "size",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/size)"
    },
    {
      "interface": "WebGLActiveInfo",
      "kind": "property",
      "name": "type",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/type)"
    }
  ],
  "WebGLContextEvent": [
    {
      "interface": "WebGLContextEvent",
      "kind": "property",
      "name": "statusMessage",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLContextEvent/statusMessage)"
    }
  ],
  "WebGLRenderingContextBase": [
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "canvas",
      "type": "OffscreenCanvas | HTMLCanvasElement",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/canvas)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "drawingBufferColorSpace",
      "type": "PredefinedColorSpace",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawingBufferColorSpace)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "drawingBufferHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawingBufferHeight)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "drawingBufferWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawingBufferWidth)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "unpackColorSpace",
      "type": "PredefinedColorSpace",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/unpackColorSpace)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "activeTexture",
      "parameters": [
        {
          "name": "texture",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/activeTexture)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "attachShader",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/attachShader)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "bindAttribLocation",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindAttribLocation)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "bindBuffer",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "buffer",
          "type": "WebGLBuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindBuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "bindFramebuffer",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "framebuffer",
          "type": "WebGLFramebuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindFramebuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "bindRenderbuffer",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "renderbuffer",
          "type": "WebGLRenderbuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindRenderbuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "bindTexture",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "texture",
          "type": "WebGLTexture",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindTexture)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "blendColor",
      "parameters": [
        {
          "name": "red",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "green",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "blue",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "alpha",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendColor)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "blendEquation",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendEquation)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "blendEquationSeparate",
      "parameters": [
        {
          "name": "modeRGB",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "modeAlpha",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendEquationSeparate)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "blendFunc",
      "parameters": [
        {
          "name": "sfactor",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dfactor",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendFunc)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "blendFuncSeparate",
      "parameters": [
        {
          "name": "srcRGB",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstRGB",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "srcAlpha",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "dstAlpha",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendFuncSeparate)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "checkFramebufferStatus",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/checkFramebufferStatus)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "clear",
      "parameters": [
        {
          "name": "mask",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clear)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "clearColor",
      "parameters": [
        {
          "name": "red",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "green",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "blue",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "alpha",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearColor)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "clearDepth",
      "parameters": [
        {
          "name": "depth",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearDepth)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "clearStencil",
      "parameters": [
        {
          "name": "s",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearStencil)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "colorMask",
      "parameters": [
        {
          "name": "red",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "green",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "blue",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "alpha",
          "type": "boolean",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/colorMask)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "compileShader",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compileShader)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "copyTexImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 8,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/copyTexImage2D)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "copyTexSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 8,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "createBuffer",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLBuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createBuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "createFramebuffer",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLFramebuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createFramebuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "createProgram",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLProgram",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createProgram)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "createRenderbuffer",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLRenderbuffer",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createRenderbuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "createShader",
      "parameters": [
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WebGLShader",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createShader)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "createTexture",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLTexture",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createTexture)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "cullFace",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/cullFace)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "deleteBuffer",
      "parameters": [
        {
          "name": "buffer",
          "type": "WebGLBuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteBuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "deleteFramebuffer",
      "parameters": [
        {
          "name": "framebuffer",
          "type": "WebGLFramebuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteFramebuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "deleteProgram",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteProgram)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "deleteRenderbuffer",
      "parameters": [
        {
          "name": "renderbuffer",
          "type": "WebGLRenderbuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteRenderbuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "deleteShader",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteShader)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "deleteTexture",
      "parameters": [
        {
          "name": "texture",
          "type": "WebGLTexture",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteTexture)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "depthFunc",
      "parameters": [
        {
          "name": "func",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthFunc)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "depthMask",
      "parameters": [
        {
          "name": "flag",
          "type": "boolean",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthMask)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "depthRange",
      "parameters": [
        {
          "name": "zNear",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zFar",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthRange)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "detachShader",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/detachShader)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "disable",
      "parameters": [
        {
          "name": "cap",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/disable)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "disableVertexAttribArray",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/disableVertexAttribArray)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "drawArrays",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "first",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawArrays)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "drawElements",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "count",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawElements)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "enable",
      "parameters": [
        {
          "name": "cap",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/enable)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "enableVertexAttribArray",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/enableVertexAttribArray)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "finish",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/finish)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "flush",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/flush)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "framebufferRenderbuffer",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "attachment",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "renderbuffertarget",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "renderbuffer",
          "type": "WebGLRenderbuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/framebufferRenderbuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "framebufferTexture2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "attachment",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "textarget",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "texture",
          "type": "WebGLTexture",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/framebufferTexture2D)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "frontFace",
      "parameters": [
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/frontFace)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "generateMipmap",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/generateMipmap)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getActiveAttrib",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "WebGLActiveInfo",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getActiveAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getActiveUniform",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "WebGLActiveInfo",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getActiveUniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getAttachedShaders",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WebGLShader[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttachedShaders)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getAttribLocation",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttribLocation)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getBufferParameter",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getBufferParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getContextAttributes",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WebGLContextAttributes",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getContextAttributes)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getError",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getError)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"ANGLE_instanced_arrays\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "ANGLE_instanced_arrays",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getExtension)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_blend_minmax\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_blend_minmax"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_color_buffer_float\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_color_buffer_float"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_color_buffer_half_float\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_color_buffer_half_float"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_float_blend\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_float_blend"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_frag_depth\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_frag_depth"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_sRGB\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_sRGB"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_shader_texture_lod\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_shader_texture_lod"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_texture_compression_bptc\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_texture_compression_bptc"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_texture_compression_rgtc\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_texture_compression_rgtc"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"EXT_texture_filter_anisotropic\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "EXT_texture_filter_anisotropic"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"KHR_parallel_shader_compile\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "KHR_parallel_shader_compile"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_element_index_uint\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_element_index_uint"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_fbo_render_mipmap\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_fbo_render_mipmap"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_standard_derivatives\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_standard_derivatives"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_texture_float\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_texture_float"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_texture_float_linear\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_texture_float_linear"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_texture_half_float\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_texture_half_float"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_texture_half_float_linear\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_texture_half_float_linear"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OES_vertex_array_object\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OES_vertex_array_object"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"OVR_multiview2\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "OVR_multiview2"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_color_buffer_float\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_color_buffer_float"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_compressed_texture_astc\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_compressed_texture_astc"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_compressed_texture_etc\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_compressed_texture_etc"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_compressed_texture_etc1\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_compressed_texture_etc1"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_compressed_texture_pvrtc\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_compressed_texture_pvrtc"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_compressed_texture_s3tc\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_compressed_texture_s3tc"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_compressed_texture_s3tc_srgb\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_compressed_texture_s3tc_srgb"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_debug_renderer_info\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_debug_renderer_info"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_debug_shaders\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_debug_shaders"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_depth_texture\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_depth_texture"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_draw_buffers\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_draw_buffers"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_lose_context\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_lose_context"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "extensionName",
          "type": "\"WEBGL_multi_draw\"",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "WEBGL_multi_draw"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getExtension",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "any"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getFramebufferAttachmentParameter",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "attachment",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getParameter",
      "parameters": [
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getProgramInfoLog",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramInfoLog)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getProgramParameter",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getRenderbufferParameter",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getShaderInfoLog",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderInfoLog)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getShaderParameter",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getShaderPrecisionFormat",
      "parameters": [
        {
          "name": "shadertype",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "precisiontype",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "WebGLShaderPrecisionFormat",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getShaderSource",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderSource)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getSupportedExtensions",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string[]",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getSupportedExtensions)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getTexParameter",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getTexParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getUniform",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getUniformLocation",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "WebGLUniformLocation",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniformLocation)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getVertexAttrib",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "getVertexAttribOffset",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "hint",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "mode",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/hint)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isBuffer",
      "parameters": [
        {
          "name": "buffer",
          "type": "WebGLBuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isBuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isContextLost",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isContextLost)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isEnabled",
      "parameters": [
        {
          "name": "cap",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isEnabled)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isFramebuffer",
      "parameters": [
        {
          "name": "framebuffer",
          "type": "WebGLFramebuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isFramebuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isProgram",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isProgram)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isRenderbuffer",
      "parameters": [
        {
          "name": "renderbuffer",
          "type": "WebGLRenderbuffer",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isRenderbuffer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isShader",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isShader)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "isTexture",
      "parameters": [
        {
          "name": "texture",
          "type": "WebGLTexture",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isTexture)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "lineWidth",
      "parameters": [
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/lineWidth)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "linkProgram",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/linkProgram)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "pixelStorei",
      "parameters": [
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "param",
          "type": "number | boolean",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/pixelStorei)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "polygonOffset",
      "parameters": [
        {
          "name": "factor",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "units",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/polygonOffset)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "renderbufferStorage",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/renderbufferStorage)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "sampleCoverage",
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "invert",
          "type": "boolean",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/sampleCoverage)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "scissor",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/scissor)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "shaderSource",
      "parameters": [
        {
          "name": "shader",
          "type": "WebGLShader",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/shaderSource)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "stencilFunc",
      "parameters": [
        {
          "name": "func",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "ref",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "mask",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilFunc)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "stencilFuncSeparate",
      "parameters": [
        {
          "name": "face",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "func",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "ref",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "mask",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilFuncSeparate)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "stencilMask",
      "parameters": [
        {
          "name": "mask",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilMask)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "stencilMaskSeparate",
      "parameters": [
        {
          "name": "face",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "mask",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilMaskSeparate)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "stencilOp",
      "parameters": [
        {
          "name": "fail",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zfail",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zpass",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilOp)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "stencilOpSeparate",
      "parameters": [
        {
          "name": "face",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "fail",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zfail",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "zpass",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilOpSeparate)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "texParameterf",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "param",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "texParameteri",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pname",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "param",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texParameter)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform1f",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform1i",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform2f",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform2i",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform3f",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform3i",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform4f",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "uniform4i",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "useProgram",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/useProgram)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "validateProgram",
      "parameters": [
        {
          "name": "program",
          "type": "WebGLProgram",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/validateProgram)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib1f",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib1fv",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib2f",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib2fv",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib3f",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib3fv",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib4f",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "z",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "w",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 5,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttrib4fv",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "values",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "vertexAttribPointer",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "normalized",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "stride",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttribPointer)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "method",
      "name": "viewport",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 4,
      "required": 4,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/viewport)"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_BUFFER_BIT",
      "type": "256"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BUFFER_BIT",
      "type": "1024"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "COLOR_BUFFER_BIT",
      "type": "16384"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "POINTS",
      "type": "0"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINES",
      "type": "1"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINE_LOOP",
      "type": "2"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINE_STRIP",
      "type": "3"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TRIANGLES",
      "type": "4"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TRIANGLE_STRIP",
      "type": "5"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TRIANGLE_FAN",
      "type": "6"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ZERO",
      "type": "0"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ONE",
      "type": "1"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SRC_COLOR",
      "type": "768"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ONE_MINUS_SRC_COLOR",
      "type": "769"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SRC_ALPHA",
      "type": "770"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ONE_MINUS_SRC_ALPHA",
      "type": "771"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DST_ALPHA",
      "type": "772"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ONE_MINUS_DST_ALPHA",
      "type": "773"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DST_COLOR",
      "type": "774"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ONE_MINUS_DST_COLOR",
      "type": "775"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SRC_ALPHA_SATURATE",
      "type": "776"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FUNC_ADD",
      "type": "32774"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_EQUATION",
      "type": "32777"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_EQUATION_RGB",
      "type": "32777"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_EQUATION_ALPHA",
      "type": "34877"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FUNC_SUBTRACT",
      "type": "32778"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FUNC_REVERSE_SUBTRACT",
      "type": "32779"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_DST_RGB",
      "type": "32968"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_SRC_RGB",
      "type": "32969"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_DST_ALPHA",
      "type": "32970"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_SRC_ALPHA",
      "type": "32971"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CONSTANT_COLOR",
      "type": "32769"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ONE_MINUS_CONSTANT_COLOR",
      "type": "32770"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CONSTANT_ALPHA",
      "type": "32771"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ONE_MINUS_CONSTANT_ALPHA",
      "type": "32772"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND_COLOR",
      "type": "32773"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ARRAY_BUFFER",
      "type": "34962"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ELEMENT_ARRAY_BUFFER",
      "type": "34963"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ARRAY_BUFFER_BINDING",
      "type": "34964"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ELEMENT_ARRAY_BUFFER_BINDING",
      "type": "34965"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STREAM_DRAW",
      "type": "35040"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STATIC_DRAW",
      "type": "35044"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DYNAMIC_DRAW",
      "type": "35048"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BUFFER_SIZE",
      "type": "34660"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BUFFER_USAGE",
      "type": "34661"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CURRENT_VERTEX_ATTRIB",
      "type": "34342"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRONT",
      "type": "1028"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BACK",
      "type": "1029"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRONT_AND_BACK",
      "type": "1032"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CULL_FACE",
      "type": "2884"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLEND",
      "type": "3042"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DITHER",
      "type": "3024"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_TEST",
      "type": "2960"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_TEST",
      "type": "2929"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SCISSOR_TEST",
      "type": "3089"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "POLYGON_OFFSET_FILL",
      "type": "32823"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLE_ALPHA_TO_COVERAGE",
      "type": "32926"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLE_COVERAGE",
      "type": "32928"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NO_ERROR",
      "type": "0"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INVALID_ENUM",
      "type": "1280"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INVALID_VALUE",
      "type": "1281"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INVALID_OPERATION",
      "type": "1282"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "OUT_OF_MEMORY",
      "type": "1285"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CW",
      "type": "2304"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CCW",
      "type": "2305"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINE_WIDTH",
      "type": "2849"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ALIASED_POINT_SIZE_RANGE",
      "type": "33901"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ALIASED_LINE_WIDTH_RANGE",
      "type": "33902"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CULL_FACE_MODE",
      "type": "2885"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRONT_FACE",
      "type": "2886"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_RANGE",
      "type": "2928"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_WRITEMASK",
      "type": "2930"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_CLEAR_VALUE",
      "type": "2931"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_FUNC",
      "type": "2932"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_CLEAR_VALUE",
      "type": "2961"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_FUNC",
      "type": "2962"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_FAIL",
      "type": "2964"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_PASS_DEPTH_FAIL",
      "type": "2965"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_PASS_DEPTH_PASS",
      "type": "2966"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_REF",
      "type": "2967"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_VALUE_MASK",
      "type": "2963"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_WRITEMASK",
      "type": "2968"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BACK_FUNC",
      "type": "34816"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BACK_FAIL",
      "type": "34817"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BACK_PASS_DEPTH_FAIL",
      "type": "34818"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BACK_PASS_DEPTH_PASS",
      "type": "34819"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BACK_REF",
      "type": "36003"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BACK_VALUE_MASK",
      "type": "36004"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BACK_WRITEMASK",
      "type": "36005"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VIEWPORT",
      "type": "2978"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SCISSOR_BOX",
      "type": "3088"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "COLOR_CLEAR_VALUE",
      "type": "3106"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "COLOR_WRITEMASK",
      "type": "3107"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNPACK_ALIGNMENT",
      "type": "3317"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "PACK_ALIGNMENT",
      "type": "3333"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_TEXTURE_SIZE",
      "type": "3379"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_VIEWPORT_DIMS",
      "type": "3386"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SUBPIXEL_BITS",
      "type": "3408"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RED_BITS",
      "type": "3410"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "GREEN_BITS",
      "type": "3411"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BLUE_BITS",
      "type": "3412"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ALPHA_BITS",
      "type": "3413"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_BITS",
      "type": "3414"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_BITS",
      "type": "3415"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "POLYGON_OFFSET_UNITS",
      "type": "10752"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "POLYGON_OFFSET_FACTOR",
      "type": "32824"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_BINDING_2D",
      "type": "32873"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLE_BUFFERS",
      "type": "32936"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLES",
      "type": "32937"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLE_COVERAGE_VALUE",
      "type": "32938"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLE_COVERAGE_INVERT",
      "type": "32939"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "COMPRESSED_TEXTURE_FORMATS",
      "type": "34467"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DONT_CARE",
      "type": "4352"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FASTEST",
      "type": "4353"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NICEST",
      "type": "4354"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "GENERATE_MIPMAP_HINT",
      "type": "33170"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BYTE",
      "type": "5120"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_BYTE",
      "type": "5121"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SHORT",
      "type": "5122"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_SHORT",
      "type": "5123"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INT",
      "type": "5124"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_INT",
      "type": "5125"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FLOAT",
      "type": "5126"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_COMPONENT",
      "type": "6402"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ALPHA",
      "type": "6406"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RGB",
      "type": "6407"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RGBA",
      "type": "6408"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LUMINANCE",
      "type": "6409"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LUMINANCE_ALPHA",
      "type": "6410"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_SHORT_4_4_4_4",
      "type": "32819"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_SHORT_5_5_5_1",
      "type": "32820"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNSIGNED_SHORT_5_6_5",
      "type": "33635"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAGMENT_SHADER",
      "type": "35632"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_SHADER",
      "type": "35633"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_VERTEX_ATTRIBS",
      "type": "34921"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_VERTEX_UNIFORM_VECTORS",
      "type": "36347"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_VARYING_VECTORS",
      "type": "36348"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
      "type": "35661"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
      "type": "35660"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_TEXTURE_IMAGE_UNITS",
      "type": "34930"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_FRAGMENT_UNIFORM_VECTORS",
      "type": "36349"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SHADER_TYPE",
      "type": "35663"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DELETE_STATUS",
      "type": "35712"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINK_STATUS",
      "type": "35714"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VALIDATE_STATUS",
      "type": "35715"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ATTACHED_SHADERS",
      "type": "35717"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ACTIVE_UNIFORMS",
      "type": "35718"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ACTIVE_ATTRIBUTES",
      "type": "35721"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SHADING_LANGUAGE_VERSION",
      "type": "35724"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CURRENT_PROGRAM",
      "type": "35725"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NEVER",
      "type": "512"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LESS",
      "type": "513"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "EQUAL",
      "type": "514"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LEQUAL",
      "type": "515"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "GREATER",
      "type": "516"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NOTEQUAL",
      "type": "517"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "GEQUAL",
      "type": "518"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ALWAYS",
      "type": "519"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "KEEP",
      "type": "7680"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "REPLACE",
      "type": "7681"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INCR",
      "type": "7682"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DECR",
      "type": "7683"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INVERT",
      "type": "5386"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INCR_WRAP",
      "type": "34055"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DECR_WRAP",
      "type": "34056"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VENDOR",
      "type": "7936"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERER",
      "type": "7937"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERSION",
      "type": "7938"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NEAREST",
      "type": "9728"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINEAR",
      "type": "9729"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NEAREST_MIPMAP_NEAREST",
      "type": "9984"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINEAR_MIPMAP_NEAREST",
      "type": "9985"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NEAREST_MIPMAP_LINEAR",
      "type": "9986"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LINEAR_MIPMAP_LINEAR",
      "type": "9987"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_MAG_FILTER",
      "type": "10240"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_MIN_FILTER",
      "type": "10241"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_WRAP_S",
      "type": "10242"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_WRAP_T",
      "type": "10243"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_2D",
      "type": "3553"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE",
      "type": "5890"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_CUBE_MAP",
      "type": "34067"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_BINDING_CUBE_MAP",
      "type": "34068"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_CUBE_MAP_POSITIVE_X",
      "type": "34069"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
      "type": "34070"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
      "type": "34071"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
      "type": "34072"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
      "type": "34073"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
      "type": "34074"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_CUBE_MAP_TEXTURE_SIZE",
      "type": "34076"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE0",
      "type": "33984"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE1",
      "type": "33985"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE2",
      "type": "33986"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE3",
      "type": "33987"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE4",
      "type": "33988"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE5",
      "type": "33989"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE6",
      "type": "33990"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE7",
      "type": "33991"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE8",
      "type": "33992"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE9",
      "type": "33993"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE10",
      "type": "33994"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE11",
      "type": "33995"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE12",
      "type": "33996"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE13",
      "type": "33997"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE14",
      "type": "33998"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE15",
      "type": "33999"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE16",
      "type": "34000"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE17",
      "type": "34001"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE18",
      "type": "34002"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE19",
      "type": "34003"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE20",
      "type": "34004"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE21",
      "type": "34005"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE22",
      "type": "34006"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE23",
      "type": "34007"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE24",
      "type": "34008"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE25",
      "type": "34009"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE26",
      "type": "34010"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE27",
      "type": "34011"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE28",
      "type": "34012"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE29",
      "type": "34013"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE30",
      "type": "34014"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "TEXTURE31",
      "type": "34015"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "ACTIVE_TEXTURE",
      "type": "34016"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "REPEAT",
      "type": "10497"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CLAMP_TO_EDGE",
      "type": "33071"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MIRRORED_REPEAT",
      "type": "33648"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FLOAT_VEC2",
      "type": "35664"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FLOAT_VEC3",
      "type": "35665"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FLOAT_VEC4",
      "type": "35666"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INT_VEC2",
      "type": "35667"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INT_VEC3",
      "type": "35668"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INT_VEC4",
      "type": "35669"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BOOL",
      "type": "35670"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BOOL_VEC2",
      "type": "35671"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BOOL_VEC3",
      "type": "35672"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BOOL_VEC4",
      "type": "35673"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT2",
      "type": "35674"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT3",
      "type": "35675"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FLOAT_MAT4",
      "type": "35676"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_2D",
      "type": "35678"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "SAMPLER_CUBE",
      "type": "35680"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_ENABLED",
      "type": "34338"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_SIZE",
      "type": "34339"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_STRIDE",
      "type": "34340"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_TYPE",
      "type": "34341"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
      "type": "34922"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_POINTER",
      "type": "34373"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
      "type": "34975"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "IMPLEMENTATION_COLOR_READ_TYPE",
      "type": "35738"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "IMPLEMENTATION_COLOR_READ_FORMAT",
      "type": "35739"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "COMPILE_STATUS",
      "type": "35713"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LOW_FLOAT",
      "type": "36336"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MEDIUM_FLOAT",
      "type": "36337"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "HIGH_FLOAT",
      "type": "36338"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "LOW_INT",
      "type": "36339"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MEDIUM_INT",
      "type": "36340"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "HIGH_INT",
      "type": "36341"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER",
      "type": "36160"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER",
      "type": "36161"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RGBA4",
      "type": "32854"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RGB5_A1",
      "type": "32855"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RGBA8",
      "type": "32856"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RGB565",
      "type": "36194"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_COMPONENT16",
      "type": "33189"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_INDEX8",
      "type": "36168"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_STENCIL",
      "type": "34041"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_WIDTH",
      "type": "36162"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_HEIGHT",
      "type": "36163"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_INTERNAL_FORMAT",
      "type": "36164"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_RED_SIZE",
      "type": "36176"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_GREEN_SIZE",
      "type": "36177"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_BLUE_SIZE",
      "type": "36178"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_ALPHA_SIZE",
      "type": "36179"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_DEPTH_SIZE",
      "type": "36180"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_STENCIL_SIZE",
      "type": "36181"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
      "type": "36048"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
      "type": "36049"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
      "type": "36050"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
      "type": "36051"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "COLOR_ATTACHMENT0",
      "type": "36064"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_ATTACHMENT",
      "type": "36096"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "STENCIL_ATTACHMENT",
      "type": "36128"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "DEPTH_STENCIL_ATTACHMENT",
      "type": "33306"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "NONE",
      "type": "0"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_COMPLETE",
      "type": "36053"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
      "type": "36054"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
      "type": "36055"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
      "type": "36057"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_UNSUPPORTED",
      "type": "36061"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "FRAMEBUFFER_BINDING",
      "type": "36006"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "RENDERBUFFER_BINDING",
      "type": "36007"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "MAX_RENDERBUFFER_SIZE",
      "type": "34024"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "INVALID_FRAMEBUFFER_OPERATION",
      "type": "1286"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNPACK_FLIP_Y_WEBGL",
      "type": "37440"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
      "type": "37441"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "CONTEXT_LOST_WEBGL",
      "type": "37442"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
      "type": "37443"
    },
    {
      "interface": "WebGLRenderingContextBase",
      "kind": "property",
      "name": "BROWSER_DEFAULT_WEBGL",
      "type": "37444"
    }
  ],
  "WebGLRenderingContextOverloads": [
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "bufferData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "usage",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bufferData)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "bufferData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "usage",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "bufferSubData",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "offset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "AllowSharedBufferSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bufferSubData)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "compressedTexImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexImage2D)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "compressedTexSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "data",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 8,
      "required": 8,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "readPixels",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pixels",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/readPixels)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "texImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "border",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pixels",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texImage2D)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "texImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "internalformat",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 6,
      "returnType": "void"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "texSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "pixels",
          "type": "ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 9,
      "required": 9,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texSubImage2D)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "texSubImage2D",
      "parameters": [
        {
          "name": "target",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "level",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "xoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "yoffset",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "format",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "source",
          "type": "TexImageSource",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 7,
      "required": 7,
      "returnType": "void"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform1fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform1iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Int32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform2fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform2iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Int32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform3fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform3iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Int32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform4fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniform4iv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "v",
          "type": "Int32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniformMatrix2fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniformMatrix3fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix)"
    },
    {
      "interface": "WebGLRenderingContextOverloads",
      "kind": "method",
      "name": "uniformMatrix4fv",
      "parameters": [
        {
          "name": "location",
          "type": "WebGLUniformLocation",
          "optional": false,
          "rest": false
        },
        {
          "name": "transpose",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "Float32List",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix)"
    }
  ],
  "WebGLShaderPrecisionFormat": [
    {
      "interface": "WebGLShaderPrecisionFormat",
      "kind": "property",
      "name": "precision",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/precision)"
    },
    {
      "interface": "WebGLShaderPrecisionFormat",
      "kind": "property",
      "name": "rangeMax",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/rangeMax)"
    },
    {
      "interface": "WebGLShaderPrecisionFormat",
      "kind": "property",
      "name": "rangeMin",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/rangeMin)"
    }
  ],
  "WebSocketEventMap": [
    {
      "interface": "WebSocketEventMap",
      "kind": "property",
      "name": "\"close\"",
      "type": "CloseEvent"
    },
    {
      "interface": "WebSocketEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "Event"
    },
    {
      "interface": "WebSocketEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "WebSocketEventMap",
      "kind": "property",
      "name": "\"open\"",
      "type": "Event"
    }
  ],
  "WebSocket": [
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "binaryType",
      "type": "BinaryType",
      "doc": "Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n\nCan be set, to change how binary data is returned. The default is \"blob\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/binaryType)"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "bufferedAmount",
      "type": "number",
      "doc": "Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n\nIf the WebSocket connection is closed, this attribute's value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/bufferedAmount)"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "extensions",
      "type": "string",
      "doc": "Returns the extensions selected by the server, if any.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/extensions)"
    },
    {
      "interface": "WebSocket",
      "kind": "event",
      "name": "onclose",
      "type": "(this: WebSocket, ev: CloseEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close_event)"
    },
    {
      "interface": "WebSocket",
      "kind": "event",
      "name": "onerror",
      "type": "(this: WebSocket, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/error_event)"
    },
    {
      "interface": "WebSocket",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: WebSocket, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/message_event)"
    },
    {
      "interface": "WebSocket",
      "kind": "event",
      "name": "onopen",
      "type": "(this: WebSocket, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/open_event)"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "protocol",
      "type": "string",
      "doc": "Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/protocol)"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "readyState",
      "type": "number",
      "doc": "Returns the state of the WebSocket object's connection. It can have the values described below.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/readyState)"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "url",
      "type": "string",
      "doc": "Returns the URL that was used to establish the WebSocket connection.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/url)"
    },
    {
      "interface": "WebSocket",
      "kind": "method",
      "name": "close",
      "parameters": [
        {
          "name": "code",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "reason",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "void",
      "doc": "Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close)"
    },
    {
      "interface": "WebSocket",
      "kind": "method",
      "name": "send",
      "parameters": [
        {
          "name": "data",
          "type": "string | Blob | ArrayBufferLike | ArrayBufferView<ArrayBufferLike>",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/send)"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "CONNECTING",
      "type": "0"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "OPEN",
      "type": "1"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "CLOSING",
      "type": "2"
    },
    {
      "interface": "WebSocket",
      "kind": "property",
      "name": "CLOSED",
      "type": "3"
    },
    {
      "interface": "WebSocket",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: WebSocket, ev: WebSocketEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WebSocket",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WebSocket",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: WebSocket, ev: WebSocketEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WebSocket",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "WebTransport": [
    {
      "interface": "WebTransport",
      "kind": "property",
      "name": "closed",
      "type": "Promise<WebTransportCloseInfo>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/closed)"
    },
    {
      "interface": "WebTransport",
      "kind": "property",
      "name": "datagrams",
      "type": "WebTransportDatagramDuplexStream",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/datagrams)"
    },
    {
      "interface": "WebTransport",
      "kind": "property",
      "name": "incomingBidirectionalStreams",
      "type": "ReadableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/incomingBidirectionalStreams)"
    },
    {
      "interface": "WebTransport",
      "kind": "property",
      "name": "incomingUnidirectionalStreams",
      "type": "ReadableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/incomingUnidirectionalStreams)"
    },
    {
      "interface": "WebTransport",
      "kind": "property",
      "name": "ready",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/ready)"
    },
    {
      "interface": "WebTransport",
      "kind": "method",
      "name": "close",
      "parameters": [
        {
          "name": "closeInfo",
          "type": "WebTransportCloseInfo",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/close)"
    },
    {
      "interface": "WebTransport",
      "kind": "method",
      "name": "createBidirectionalStream",
      "parameters": [
        {
          "name": "options",
          "type": "WebTransportSendStreamOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<WebTransportBidirectionalStream>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/createBidirectionalStream)"
    },
    {
      "interface": "WebTransport",
      "kind": "method",
      "name": "createUnidirectionalStream",
      "parameters": [
        {
          "name": "options",
          "type": "WebTransportSendStreamOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<WritableStream<any>>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/createUnidirectionalStream)"
    }
  ],
  "WebTransportBidirectionalStream": [
    {
      "interface": "WebTransportBidirectionalStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream/readable)"
    },
    {
      "interface": "WebTransportBidirectionalStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream/writable)"
    }
  ],
  "WebTransportDatagramDuplexStream": [
    {
      "interface": "WebTransportDatagramDuplexStream",
      "kind": "property",
      "name": "incomingHighWaterMark",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/incomingHighWaterMark)"
    },
    {
      "interface": "WebTransportDatagramDuplexStream",
      "kind": "property",
      "name": "incomingMaxAge",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/incomingMaxAge)"
    },
    {
      "interface": "WebTransportDatagramDuplexStream",
      "kind": "property",
      "name": "maxDatagramSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/maxDatagramSize)"
    },
    {
      "interface": "WebTransportDatagramDuplexStream",
      "kind": "property",
      "name": "outgoingHighWaterMark",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/outgoingHighWaterMark)"
    },
    {
      "interface": "WebTransportDatagramDuplexStream",
      "kind": "property",
      "name": "outgoingMaxAge",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/outgoingMaxAge)"
    },
    {
      "interface": "WebTransportDatagramDuplexStream",
      "kind": "property",
      "name": "readable",
      "type": "ReadableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/readable)"
    },
    {
      "interface": "WebTransportDatagramDuplexStream",
      "kind": "property",
      "name": "writable",
      "type": "WritableStream<any>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/writable)"
    }
  ],
  "WebTransportError": [
    {
      "interface": "WebTransportError",
      "kind": "property",
      "name": "source",
      "type": "WebTransportErrorSource",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError/source)"
    },
    {
      "interface": "WebTransportError",
      "kind": "property",
      "name": "streamErrorCode",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError/streamErrorCode)"
    }
  ],
  "WheelEvent": [
    {
      "interface": "WheelEvent",
      "kind": "property",
      "name": "deltaMode",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaMode)"
    },
    {
      "interface": "WheelEvent",
      "kind": "property",
      "name": "deltaX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaX)"
    },
    {
      "interface": "WheelEvent",
      "kind": "property",
      "name": "deltaY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaY)"
    },
    {
      "interface": "WheelEvent",
      "kind": "property",
      "name": "deltaZ",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaZ)"
    },
    {
      "interface": "WheelEvent",
      "kind": "property",
      "name": "DOM_DELTA_PIXEL",
      "type": "0"
    },
    {
      "interface": "WheelEvent",
      "kind": "property",
      "name": "DOM_DELTA_LINE",
      "type": "1"
    },
    {
      "interface": "WheelEvent",
      "kind": "property",
      "name": "DOM_DELTA_PAGE",
      "type": "2"
    }
  ],
  "WindowEventMap": [
    {
      "interface": "WindowEventMap",
      "kind": "property",
      "name": "\"DOMContentLoaded\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventMap",
      "kind": "property",
      "name": "\"devicemotion\"",
      "type": "DeviceMotionEvent"
    },
    {
      "interface": "WindowEventMap",
      "kind": "property",
      "name": "\"deviceorientation\"",
      "type": "DeviceOrientationEvent"
    },
    {
      "interface": "WindowEventMap",
      "kind": "property",
      "name": "\"deviceorientationabsolute\"",
      "type": "DeviceOrientationEvent"
    },
    {
      "interface": "WindowEventMap",
      "kind": "property",
      "name": "\"gamepadconnected\"",
      "type": "GamepadEvent"
    },
    {
      "interface": "WindowEventMap",
      "kind": "property",
      "name": "\"gamepaddisconnected\"",
      "type": "GamepadEvent"
    },
    {
      "interface": "WindowEventMap",
      "kind": "property",
      "name": "\"orientationchange\"",
      "type": "Event"
    }
  ],
  "Window": [
    {
      "interface": "Window",
      "kind": "property",
      "name": "clientInformation",
      "type": "Navigator"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "closed",
      "type": "boolean",
      "doc": "Returns true if the window has been closed, false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/closed)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "customElements",
      "type": "CustomElementRegistry",
      "doc": "Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/customElements)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "devicePixelRatio",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "document",
      "type": "Document",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/document)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "event",
      "type": "Event"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "external",
      "type": "External"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "frameElement",
      "type": "Element",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frameElement)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "frames",
      "type": "Window",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frames)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "history",
      "type": "History",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/history)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "innerHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerHeight)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "innerWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerWidth)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "length",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/length)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "locationbar",
      "type": "BarProp",
      "doc": "Returns true if the location bar is visible; otherwise, returns false.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/locationbar)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "menubar",
      "type": "BarProp",
      "doc": "Returns true if the menu bar is visible; otherwise, returns false.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/menubar)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "name",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/name)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "navigator",
      "type": "Navigator",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator)"
    },
    {
      "interface": "Window",
      "kind": "event",
      "name": "ondevicemotion",
      "type": "(this: Window, ev: DeviceMotionEvent) => any",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicemotion_event)"
    },
    {
      "interface": "Window",
      "kind": "event",
      "name": "ondeviceorientation",
      "type": "(this: Window, ev: DeviceOrientationEvent) => any",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientation_event)"
    },
    {
      "interface": "Window",
      "kind": "event",
      "name": "ondeviceorientationabsolute",
      "type": "(this: Window, ev: DeviceOrientationEvent) => any",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientationabsolute_event)"
    },
    {
      "interface": "Window",
      "kind": "event",
      "name": "onorientationchange",
      "type": "(this: Window, ev: Event) => any"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "opener",
      "type": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/opener)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "orientation",
      "type": "number"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "outerHeight",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerHeight)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "outerWidth",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerWidth)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "pageXOffset",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "pageYOffset",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "parent",
      "type": "Window",
      "doc": "Refers to either the parent WindowProxy, or itself.\n\nIt can rarely be null e.g. for contentWindow of an iframe that is already removed from the parent.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/parent)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "personalbar",
      "type": "BarProp",
      "doc": "Returns true if the personal bar is visible; otherwise, returns false.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/personalbar)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "screen",
      "type": "Screen",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screen)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "screenLeft",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenLeft)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "screenTop",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenTop)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "screenX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenX)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "screenY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenY)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "scrollX",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "scrollY",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "scrollbars",
      "type": "BarProp",
      "doc": "Returns true if the scrollbars are visible; otherwise, returns false.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollbars)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "self",
      "type": "Window & typeof globalThis",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/self)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "speechSynthesis",
      "type": "SpeechSynthesis",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/speechSynthesis)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "status",
      "type": "string"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "statusbar",
      "type": "BarProp",
      "doc": "Returns true if the status bar is visible; otherwise, returns false.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/statusbar)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "toolbar",
      "type": "BarProp",
      "doc": "Returns true if the toolbar is visible; otherwise, returns false.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/toolbar)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "top",
      "type": "Window",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/top)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "visualViewport",
      "type": "VisualViewport",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/visualViewport)"
    },
    {
      "interface": "Window",
      "kind": "property",
      "name": "window",
      "type": "Window & typeof globalThis",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "alert",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/alert)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "blur",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "cancelIdleCallback",
      "parameters": [
        {
          "name": "handle",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/cancelIdleCallback)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "captureEvents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Closes the window.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/close)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "confirm",
      "parameters": [
        {
          "name": "message",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/confirm)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "focus",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Moves the focus to the window's browsing context, if any.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/focus)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "getComputedStyle",
      "parameters": [
        {
          "name": "elt",
          "type": "Element",
          "optional": false,
          "rest": false
        },
        {
          "name": "pseudoElt",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "CSSStyleDeclaration",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/getComputedStyle)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "getSelection",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Selection",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/getSelection)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "matchMedia",
      "parameters": [
        {
          "name": "query",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "MediaQueryList",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/matchMedia)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "moveBy",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/moveBy)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "moveTo",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/moveTo)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "open",
      "parameters": [
        {
          "name": "url",
          "type": "string | URL",
          "optional": true,
          "rest": false
        },
        {
          "name": "target",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "features",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 0,
      "returnType": "Window",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/open)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "targetOrigin",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "transfer",
          "type": "Transferable[]",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void",
      "doc": "Posts a message to the given window. Messages can be structured objects, e.g. nested objects and arrays, can contain JavaScript values (strings, numbers, Date objects, etc), and can contain certain data objects such as File Blob, FileList, and ArrayBuffer objects.\n\nObjects listed in the transfer member of options are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n\nA target origin can be specified using the targetOrigin member of options. If not provided, it defaults to \"/\". This default restricts the message to same-origin targets only.\n\nIf the origin of the target window doesn't match the given target origin, the message is discarded, to avoid information leakage. To send the message to the target regardless of origin, set the target origin to \"*\".\n\nThrows a \"DataCloneError\" DOMException if transfer array contains duplicate objects or if message could not be cloned.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/postMessage)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "WindowPostMessageOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "print",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/print)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "prompt",
      "parameters": [
        {
          "name": "message",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "_default",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/prompt)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "releaseEvents",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "requestIdleCallback",
      "parameters": [
        {
          "name": "callback",
          "type": "IdleRequestCallback",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "IdleRequestOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/requestIdleCallback)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "resizeBy",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/resizeBy)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "resizeTo",
      "parameters": [
        {
          "name": "width",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "height",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/resizeTo)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "scroll",
      "parameters": [
        {
          "name": "options",
          "type": "ScrollToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scroll)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "scroll",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "scrollBy",
      "parameters": [
        {
          "name": "options",
          "type": "ScrollToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollBy)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "scrollBy",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "scrollTo",
      "parameters": [
        {
          "name": "options",
          "type": "ScrollToOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollTo)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "scrollTo",
      "parameters": [
        {
          "name": "x",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "y",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "stop",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Cancels the document load.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/stop)"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Window, ev: WindowEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Window, ev: WindowEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Window",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "WindowEventHandlersEventMap": [
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"afterprint\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"beforeprint\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"beforeunload\"",
      "type": "BeforeUnloadEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"gamepadconnected\"",
      "type": "GamepadEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"gamepaddisconnected\"",
      "type": "GamepadEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"hashchange\"",
      "type": "HashChangeEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"languagechange\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"message\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"messageerror\"",
      "type": "MessageEvent<any>"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"offline\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"online\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"pagehide\"",
      "type": "PageTransitionEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"pagereveal\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"pageshow\"",
      "type": "PageTransitionEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"pageswap\"",
      "type": "Event"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"popstate\"",
      "type": "PopStateEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"rejectionhandled\"",
      "type": "PromiseRejectionEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"storage\"",
      "type": "StorageEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"unhandledrejection\"",
      "type": "PromiseRejectionEvent"
    },
    {
      "interface": "WindowEventHandlersEventMap",
      "kind": "property",
      "name": "\"unload\"",
      "type": "Event"
    }
  ],
  "WindowEventHandlers": [
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onafterprint",
      "type": "(this: WindowEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/afterprint_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onbeforeprint",
      "type": "(this: WindowEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeprint_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onbeforeunload",
      "type": "(this: WindowEventHandlers, ev: BeforeUnloadEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "ongamepadconnected",
      "type": "(this: WindowEventHandlers, ev: GamepadEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepadconnected_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "ongamepaddisconnected",
      "type": "(this: WindowEventHandlers, ev: GamepadEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepaddisconnected_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onhashchange",
      "type": "(this: WindowEventHandlers, ev: HashChangeEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/hashchange_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onlanguagechange",
      "type": "(this: WindowEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/languagechange_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onmessage",
      "type": "(this: WindowEventHandlers, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/message_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onmessageerror",
      "type": "(this: WindowEventHandlers, ev: MessageEvent<any>) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/messageerror_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onoffline",
      "type": "(this: WindowEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/offline_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "ononline",
      "type": "(this: WindowEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/online_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onpagehide",
      "type": "(this: WindowEventHandlers, ev: PageTransitionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagehide_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onpagereveal",
      "type": "(this: WindowEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagereveal_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onpageshow",
      "type": "(this: WindowEventHandlers, ev: PageTransitionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageshow_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onpageswap",
      "type": "(this: WindowEventHandlers, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageswap_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onpopstate",
      "type": "(this: WindowEventHandlers, ev: PopStateEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/popstate_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onrejectionhandled",
      "type": "(this: WindowEventHandlers, ev: PromiseRejectionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/rejectionhandled_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onstorage",
      "type": "(this: WindowEventHandlers, ev: StorageEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/storage_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onunhandledrejection",
      "type": "(this: WindowEventHandlers, ev: PromiseRejectionEvent) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unhandledrejection_event)"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "event",
      "name": "onunload",
      "type": "(this: WindowEventHandlers, ev: Event) => any"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "WindowEventHandlers",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "WindowLocalStorage": [
    {
      "interface": "WindowLocalStorage",
      "kind": "property",
      "name": "localStorage",
      "type": "Storage",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/localStorage)"
    }
  ],
  "WindowOrWorkerGlobalScope": [
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "property",
      "name": "caches",
      "type": "CacheStorage",
      "doc": "Available only in secure contexts.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "property",
      "name": "crossOriginIsolated",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "property",
      "name": "crypto",
      "type": "Crypto",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "property",
      "name": "indexedDB",
      "type": "IDBFactory",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "property",
      "name": "isSecureContext",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "property",
      "name": "origin",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "property",
      "name": "performance",
      "type": "Performance",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/performance)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "atob",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "btoa",
      "parameters": [
        {
          "name": "data",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "clearInterval",
      "parameters": [
        {
          "name": "id",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearInterval)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "clearTimeout",
      "parameters": [
        {
          "name": "id",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearTimeout)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "createImageBitmap",
      "parameters": [
        {
          "name": "image",
          "type": "ImageBitmapSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ImageBitmapOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<ImageBitmap>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/createImageBitmap)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "createImageBitmap",
      "parameters": [
        {
          "name": "image",
          "type": "ImageBitmapSource",
          "optional": false,
          "rest": false
        },
        {
          "name": "sx",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sy",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sw",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "sh",
          "type": "number",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "ImageBitmapOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 6,
      "required": 5,
      "returnType": "Promise<ImageBitmap>"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "fetch",
      "parameters": [
        {
          "name": "input",
          "type": "RequestInfo | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "init",
          "type": "RequestInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<Response>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/fetch)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "queueMicrotask",
      "parameters": [
        {
          "name": "callback",
          "type": "VoidFunction",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/queueMicrotask)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "reportError",
      "parameters": [
        {
          "name": "e",
          "type": "any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/reportError)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "setInterval",
      "parameters": [
        {
          "name": "handler",
          "type": "TimerHandler",
          "optional": false,
          "rest": false
        },
        {
          "name": "timeout",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "arguments",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setInterval)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "setTimeout",
      "parameters": [
        {
          "name": "handler",
          "type": "TimerHandler",
          "optional": false,
          "rest": false
        },
        {
          "name": "timeout",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "arguments",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setTimeout)"
    },
    {
      "interface": "WindowOrWorkerGlobalScope",
      "kind": "method",
      "name": "structuredClone",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "StructuredSerializeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "T",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/structuredClone)"
    }
  ],
  "WindowSessionStorage": [
    {
      "interface": "WindowSessionStorage",
      "kind": "property",
      "name": "sessionStorage",
      "type": "Storage",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/sessionStorage)"
    }
  ],
  "Worker": [
    {
      "interface": "Worker",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "transfer",
          "type": "Transferable[]",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/postMessage)"
    },
    {
      "interface": "Worker",
      "kind": "method",
      "name": "postMessage",
      "parameters": [
        {
          "name": "message",
          "type": "any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "StructuredSerializeOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "void"
    },
    {
      "interface": "Worker",
      "kind": "method",
      "name": "terminate",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Aborts worker's associated global environment.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/terminate)"
    },
    {
      "interface": "Worker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Worker, ev: WorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Worker",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Worker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: Worker, ev: WorkerEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "Worker",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "Worklet": [
    {
      "interface": "Worklet",
      "kind": "method",
      "name": "addModule",
      "parameters": [
        {
          "name": "moduleURL",
          "type": "string | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "WorkletOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "Promise<void>",
      "doc": "Loads and executes the module script given by moduleURL into all of worklet's global scopes. It can also create additional global scopes as part of this process, depending on the worklet type. The returned promise will fulfill once the script has been successfully loaded and run in all global scopes.\n\nThe credentials option can be set to a credentials mode to modify the script-fetching process. It defaults to \"same-origin\".\n\nAny failures in fetching the script or its dependencies will cause the returned promise to be rejected with an \"AbortError\" DOMException. Any errors in parsing the script or its dependencies will cause the returned promise to be rejected with the exception generated during parsing.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Worklet/addModule)"
    }
  ],
  "WritableStream": [
    {
      "interface": "WritableStream",
      "kind": "property",
      "name": "locked",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/locked)"
    },
    {
      "interface": "WritableStream",
      "kind": "method",
      "name": "abort",
      "parameters": [
        {
          "name": "reason",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/abort)"
    },
    {
      "interface": "WritableStream",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/close)"
    },
    {
      "interface": "WritableStream",
      "kind": "method",
      "name": "getWriter",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "WritableStreamDefaultWriter<W>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/getWriter)"
    }
  ],
  "WritableStreamDefaultController": [
    {
      "interface": "WritableStreamDefaultController",
      "kind": "property",
      "name": "signal",
      "type": "AbortSignal",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/signal)"
    },
    {
      "interface": "WritableStreamDefaultController",
      "kind": "method",
      "name": "error",
      "parameters": [
        {
          "name": "e",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error)"
    }
  ],
  "WritableStreamDefaultWriter": [
    {
      "interface": "WritableStreamDefaultWriter",
      "kind": "property",
      "name": "closed",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed)"
    },
    {
      "interface": "WritableStreamDefaultWriter",
      "kind": "property",
      "name": "desiredSize",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/desiredSize)"
    },
    {
      "interface": "WritableStreamDefaultWriter",
      "kind": "property",
      "name": "ready",
      "type": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/ready)"
    },
    {
      "interface": "WritableStreamDefaultWriter",
      "kind": "method",
      "name": "abort",
      "parameters": [
        {
          "name": "reason",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort)"
    },
    {
      "interface": "WritableStreamDefaultWriter",
      "kind": "method",
      "name": "close",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close)"
    },
    {
      "interface": "WritableStreamDefaultWriter",
      "kind": "method",
      "name": "releaseLock",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/releaseLock)"
    },
    {
      "interface": "WritableStreamDefaultWriter",
      "kind": "method",
      "name": "write",
      "parameters": [
        {
          "name": "chunk",
          "type": "W",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "Promise<void>",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/write)"
    }
  ],
  "XMLDocument": [
    {
      "interface": "XMLDocument",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLDocument, ev: DocumentEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLDocument",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLDocument",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLDocument, ev: DocumentEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLDocument",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "XMLHttpRequestEventMap": [
    {
      "interface": "XMLHttpRequestEventMap",
      "kind": "property",
      "name": "\"readystatechange\"",
      "type": "Event"
    }
  ],
  "XMLHttpRequest": [
    {
      "interface": "XMLHttpRequest",
      "kind": "event",
      "name": "onreadystatechange",
      "type": "(this: XMLHttpRequest, ev: Event) => any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readystatechange_event)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "readyState",
      "type": "number",
      "doc": "Returns client's state.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readyState)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "response",
      "type": "any",
      "doc": "Returns the response body.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/response)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "responseText",
      "type": "string",
      "doc": "Returns response as text.\n\nThrows an \"InvalidStateError\" DOMException if responseType is not the empty string or \"text\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseText)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "responseType",
      "type": "XMLHttpRequestResponseType",
      "doc": "Returns the response type.\n\nCan be set to change the response type. Values are: the empty string (default), \"arraybuffer\", \"blob\", \"document\", \"json\", and \"text\".\n\nWhen set: setting to \"document\" is ignored if current global object is not a Window object.\n\nWhen set: throws an \"InvalidStateError\" DOMException if state is loading or done.\n\nWhen set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseType)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "responseURL",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseURL)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "responseXML",
      "type": "Document",
      "doc": "Returns the response as document.\n\nThrows an \"InvalidStateError\" DOMException if responseType is not the empty string or \"document\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseXML)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "status",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/status)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "statusText",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/statusText)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "timeout",
      "type": "number",
      "doc": "Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and this's synchronous flag is unset, a timeout event will then be dispatched, or a \"TimeoutError\" DOMException will be thrown otherwise (for the send() method).\n\nWhen set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/timeout)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "upload",
      "type": "XMLHttpRequestUpload",
      "doc": "Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/upload)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "withCredentials",
      "type": "boolean",
      "doc": "True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n\nWhen set: throws an \"InvalidStateError\" DOMException if state is not unsent or opened, or if the send() flag is set.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/withCredentials)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "abort",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "Cancels any network activity.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/abort)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "getAllResponseHeaders",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/getAllResponseHeaders)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "getResponseHeader",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/getResponseHeader)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "open",
      "parameters": [
        {
          "name": "method",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "url",
          "type": "string | URL",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Sets the request method, request URL, and synchronous flag.\n\nThrows a \"SyntaxError\" DOMException if either method is not a valid method or url cannot be parsed.\n\nThrows a \"SecurityError\" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n\nThrows an \"InvalidAccessError\" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/open)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "open",
      "parameters": [
        {
          "name": "method",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "url",
          "type": "string | URL",
          "optional": false,
          "rest": false
        },
        {
          "name": "async",
          "type": "boolean",
          "optional": false,
          "rest": false
        },
        {
          "name": "username",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "password",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 3,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "overrideMimeType",
      "parameters": [
        {
          "name": "mime",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "Acts as if the `Content-Type` header value for a response is mime. (It does not change the header.)\n\nThrows an \"InvalidStateError\" DOMException if state is loading or done.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/overrideMimeType)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "send",
      "parameters": [
        {
          "name": "body",
          "type": "Document | XMLHttpRequestBodyInit",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n\nThrows an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/send)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "setRequestHeader",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "Combines a header in author request headers.\n\nThrows an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.\n\nThrows a \"SyntaxError\" DOMException if name is not a header name or if value is not a header value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/setRequestHeader)"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "UNSENT",
      "type": "0"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "OPENED",
      "type": "1"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "HEADERS_RECEIVED",
      "type": "2"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "LOADING",
      "type": "3"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "property",
      "name": "DONE",
      "type": "4"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequest",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "XMLHttpRequestEventTargetEventMap": [
    {
      "interface": "XMLHttpRequestEventTargetEventMap",
      "kind": "property",
      "name": "\"abort\"",
      "type": "ProgressEvent<XMLHttpRequestEventTarget>"
    },
    {
      "interface": "XMLHttpRequestEventTargetEventMap",
      "kind": "property",
      "name": "\"error\"",
      "type": "ProgressEvent<XMLHttpRequestEventTarget>"
    },
    {
      "interface": "XMLHttpRequestEventTargetEventMap",
      "kind": "property",
      "name": "\"load\"",
      "type": "ProgressEvent<XMLHttpRequestEventTarget>"
    },
    {
      "interface": "XMLHttpRequestEventTargetEventMap",
      "kind": "property",
      "name": "\"loadend\"",
      "type": "ProgressEvent<XMLHttpRequestEventTarget>"
    },
    {
      "interface": "XMLHttpRequestEventTargetEventMap",
      "kind": "property",
      "name": "\"loadstart\"",
      "type": "ProgressEvent<XMLHttpRequestEventTarget>"
    },
    {
      "interface": "XMLHttpRequestEventTargetEventMap",
      "kind": "property",
      "name": "\"progress\"",
      "type": "ProgressEvent<XMLHttpRequestEventTarget>"
    },
    {
      "interface": "XMLHttpRequestEventTargetEventMap",
      "kind": "property",
      "name": "\"timeout\"",
      "type": "ProgressEvent<XMLHttpRequestEventTarget>"
    }
  ],
  "XMLHttpRequestEventTarget": [
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "event",
      "name": "onabort",
      "type": "(this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "event",
      "name": "onerror",
      "type": "(this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "event",
      "name": "onload",
      "type": "(this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "event",
      "name": "onloadend",
      "type": "(this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "event",
      "name": "onloadstart",
      "type": "(this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "event",
      "name": "onprogress",
      "type": "(this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "event",
      "name": "ontimeout",
      "type": "(this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequestEventTarget",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "XMLHttpRequestUpload": [
    {
      "interface": "XMLHttpRequestUpload",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequestUpload",
      "kind": "method",
      "name": "addEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | AddEventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequestUpload",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "K",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "(this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    },
    {
      "interface": "XMLHttpRequestUpload",
      "kind": "method",
      "name": "removeEventListener",
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "listener",
          "type": "EventListenerOrEventListenerObject",
          "optional": false,
          "rest": false
        },
        {
          "name": "options",
          "type": "boolean | EventListenerOptions",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 2,
      "returnType": "void"
    }
  ],
  "XMLSerializer": [
    {
      "interface": "XMLSerializer",
      "kind": "method",
      "name": "serializeToString",
      "parameters": [
        {
          "name": "root",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLSerializer/serializeToString)"
    }
  ],
  "XPathEvaluatorBase": [
    {
      "interface": "XPathEvaluatorBase",
      "kind": "method",
      "name": "createExpression",
      "parameters": [
        {
          "name": "expression",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "resolver",
          "type": "XPathNSResolver",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 1,
      "returnType": "XPathExpression",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createExpression)"
    },
    {
      "interface": "XPathEvaluatorBase",
      "kind": "method",
      "name": "createNSResolver",
      "parameters": [
        {
          "name": "nodeResolver",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Node"
    },
    {
      "interface": "XPathEvaluatorBase",
      "kind": "method",
      "name": "evaluate",
      "parameters": [
        {
          "name": "expression",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "contextNode",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "resolver",
          "type": "XPathNSResolver",
          "optional": true,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "result",
          "type": "XPathResult",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 5,
      "required": 2,
      "returnType": "XPathResult",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/evaluate)"
    }
  ],
  "XPathExpression": [
    {
      "interface": "XPathExpression",
      "kind": "method",
      "name": "evaluate",
      "parameters": [
        {
          "name": "contextNode",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "type",
          "type": "number",
          "optional": true,
          "rest": false
        },
        {
          "name": "result",
          "type": "XPathResult",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 1,
      "returnType": "XPathResult",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathExpression/evaluate)"
    }
  ],
  "XPathResult": [
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "booleanValue",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/booleanValue)"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "invalidIteratorState",
      "type": "boolean",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/invalidIteratorState)"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "numberValue",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/numberValue)"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "resultType",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/resultType)"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "singleNodeValue",
      "type": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/singleNodeValue)"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "snapshotLength",
      "type": "number",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/snapshotLength)"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "stringValue",
      "type": "string",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/stringValue)"
    },
    {
      "interface": "XPathResult",
      "kind": "method",
      "name": "iterateNext",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/iterateNext)"
    },
    {
      "interface": "XPathResult",
      "kind": "method",
      "name": "snapshotItem",
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Node",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/snapshotItem)"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "ANY_TYPE",
      "type": "0"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "NUMBER_TYPE",
      "type": "1"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "STRING_TYPE",
      "type": "2"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "BOOLEAN_TYPE",
      "type": "3"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "UNORDERED_NODE_ITERATOR_TYPE",
      "type": "4"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "ORDERED_NODE_ITERATOR_TYPE",
      "type": "5"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "UNORDERED_NODE_SNAPSHOT_TYPE",
      "type": "6"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "ORDERED_NODE_SNAPSHOT_TYPE",
      "type": "7"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "ANY_UNORDERED_NODE_TYPE",
      "type": "8"
    },
    {
      "interface": "XPathResult",
      "kind": "property",
      "name": "FIRST_ORDERED_NODE_TYPE",
      "type": "9"
    }
  ],
  "XSLTProcessor": [
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "clearParameters",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/clearParameters)"
    },
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "getParameter",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "any",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/getParameter)"
    },
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "importStylesheet",
      "parameters": [
        {
          "name": "style",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/importStylesheet)"
    },
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "removeParameter",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/removeParameter)"
    },
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "reset",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/reset)"
    },
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "setParameter",
      "parameters": [
        {
          "name": "namespaceURI",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "localName",
          "type": "string",
          "optional": false,
          "rest": false
        },
        {
          "name": "value",
          "type": "any",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 3,
      "required": 3,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/setParameter)"
    },
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "transformToDocument",
      "parameters": [
        {
          "name": "source",
          "type": "Node",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 1,
      "returnType": "Document",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/transformToDocument)"
    },
    {
      "interface": "XSLTProcessor",
      "kind": "method",
      "name": "transformToFragment",
      "parameters": [
        {
          "name": "source",
          "type": "Node",
          "optional": false,
          "rest": false
        },
        {
          "name": "output",
          "type": "Document",
          "optional": false,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 2,
      "returnType": "DocumentFragment",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/transformToFragment)"
    }
  ],
  "Console": [
    {
      "interface": "Console",
      "kind": "method",
      "name": "assert",
      "parameters": [
        {
          "name": "condition",
          "type": "boolean",
          "optional": true,
          "rest": false
        },
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/assert_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "clear",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/clear_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "count",
      "parameters": [
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/count_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "countReset",
      "parameters": [
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/countReset_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "debug",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/debug_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "dir",
      "parameters": [
        {
          "name": "item",
          "type": "any",
          "optional": true,
          "rest": false
        },
        {
          "name": "options",
          "type": "any",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dir_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "dirxml",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dirxml_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "error",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/error_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "group",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/group_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "groupCollapsed",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupCollapsed_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "groupEnd",
      "parameters": [],
      "arity": 0,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupEnd_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "info",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/info_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "log",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "table",
      "parameters": [
        {
          "name": "tabularData",
          "type": "any",
          "optional": true,
          "rest": false
        },
        {
          "name": "properties",
          "type": "string[]",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/table_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "time",
      "parameters": [
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/time_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "timeEnd",
      "parameters": [
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeEnd_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "timeLog",
      "parameters": [
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "rest": false
        },
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 2,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeLog_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "timeStamp",
      "parameters": [
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "rest": false
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "trace",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/trace_static)"
    },
    {
      "interface": "Console",
      "kind": "method",
      "name": "warn",
      "parameters": [
        {
          "name": "data",
          "type": "any[]",
          "optional": true,
          "rest": true
        }
      ],
      "arity": 1,
      "required": 0,
      "returnType": "void",
      "doc": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/warn_static)"
    }
  ],
  "HTMLElementTagNameMap": [
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"a\"",
      "type": "HTMLAnchorElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"abbr\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"address\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"area\"",
      "type": "HTMLAreaElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"article\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"aside\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"audio\"",
      "type": "HTMLAudioElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"b\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"base\"",
      "type": "HTMLBaseElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"bdi\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"bdo\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"blockquote\"",
      "type": "HTMLQuoteElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"body\"",
      "type": "HTMLBodyElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"br\"",
      "type": "HTMLBRElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"button\"",
      "type": "HTMLButtonElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"canvas\"",
      "type": "HTMLCanvasElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"caption\"",
      "type": "HTMLTableCaptionElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"cite\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"code\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"col\"",
      "type": "HTMLTableColElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"colgroup\"",
      "type": "HTMLTableColElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"data\"",
      "type": "HTMLDataElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"datalist\"",
      "type": "HTMLDataListElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"dd\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"del\"",
      "type": "HTMLModElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"details\"",
      "type": "HTMLDetailsElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"dfn\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"dialog\"",
      "type": "HTMLDialogElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"div\"",
      "type": "HTMLDivElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"dl\"",
      "type": "HTMLDListElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"dt\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"em\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"embed\"",
      "type": "HTMLEmbedElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"fieldset\"",
      "type": "HTMLFieldSetElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"figcaption\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"figure\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"footer\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"form\"",
      "type": "HTMLFormElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"h1\"",
      "type": "HTMLHeadingElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"h2\"",
      "type": "HTMLHeadingElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"h3\"",
      "type": "HTMLHeadingElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"h4\"",
      "type": "HTMLHeadingElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"h5\"",
      "type": "HTMLHeadingElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"h6\"",
      "type": "HTMLHeadingElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"head\"",
      "type": "HTMLHeadElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"header\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"hgroup\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"hr\"",
      "type": "HTMLHRElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"html\"",
      "type": "HTMLHtmlElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"i\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"iframe\"",
      "type": "HTMLIFrameElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"img\"",
      "type": "HTMLImageElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"input\"",
      "type": "HTMLInputElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"ins\"",
      "type": "HTMLModElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"kbd\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"label\"",
      "type": "HTMLLabelElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"legend\"",
      "type": "HTMLLegendElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"li\"",
      "type": "HTMLLIElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"link\"",
      "type": "HTMLLinkElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"main\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"map\"",
      "type": "HTMLMapElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"mark\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"menu\"",
      "type": "HTMLMenuElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"meta\"",
      "type": "HTMLMetaElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"meter\"",
      "type": "HTMLMeterElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"nav\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"noscript\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"object\"",
      "type": "HTMLObjectElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"ol\"",
      "type": "HTMLOListElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"optgroup\"",
      "type": "HTMLOptGroupElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"option\"",
      "type": "HTMLOptionElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"output\"",
      "type": "HTMLOutputElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"p\"",
      "type": "HTMLParagraphElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"picture\"",
      "type": "HTMLPictureElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"pre\"",
      "type": "HTMLPreElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"progress\"",
      "type": "HTMLProgressElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"q\"",
      "type": "HTMLQuoteElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"rp\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"rt\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"ruby\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"s\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"samp\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"script\"",
      "type": "HTMLScriptElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"search\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"section\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"select\"",
      "type": "HTMLSelectElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"slot\"",
      "type": "HTMLSlotElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"small\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"source\"",
      "type": "HTMLSourceElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"span\"",
      "type": "HTMLSpanElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"strong\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"style\"",
      "type": "HTMLStyleElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"sub\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"summary\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"sup\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"table\"",
      "type": "HTMLTableElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"tbody\"",
      "type": "HTMLTableSectionElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"td\"",
      "type": "HTMLTableCellElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"template\"",
      "type": "HTMLTemplateElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"textarea\"",
      "type": "HTMLTextAreaElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"tfoot\"",
      "type": "HTMLTableSectionElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"th\"",
      "type": "HTMLTableCellElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"thead\"",
      "type": "HTMLTableSectionElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"time\"",
      "type": "HTMLTimeElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"title\"",
      "type": "HTMLTitleElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"tr\"",
      "type": "HTMLTableRowElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"track\"",
      "type": "HTMLTrackElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"u\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"ul\"",
      "type": "HTMLUListElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"var\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"video\"",
      "type": "HTMLVideoElement"
    },
    {
      "interface": "HTMLElementTagNameMap",
      "kind": "property",
      "name": "\"wbr\"",
      "type": "HTMLElement"
    }
  ],
  "HTMLElementDeprecatedTagNameMap": [
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"acronym\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"applet\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"basefont\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"bgsound\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"big\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"blink\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"center\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"dir\"",
      "type": "HTMLDirectoryElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"font\"",
      "type": "HTMLFontElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"frame\"",
      "type": "HTMLFrameElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"frameset\"",
      "type": "HTMLFrameSetElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"isindex\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"keygen\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"listing\"",
      "type": "HTMLPreElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"marquee\"",
      "type": "HTMLMarqueeElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"menuitem\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"multicol\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"nextid\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"nobr\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"noembed\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"noframes\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"param\"",
      "type": "HTMLParamElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"plaintext\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"rb\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"rtc\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"spacer\"",
      "type": "HTMLUnknownElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"strike\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"tt\"",
      "type": "HTMLElement"
    },
    {
      "interface": "HTMLElementDeprecatedTagNameMap",
      "kind": "property",
      "name": "\"xmp\"",
      "type": "HTMLPreElement"
    }
  ],
  "SVGElementTagNameMap": [
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"a\"",
      "type": "SVGAElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"animate\"",
      "type": "SVGAnimateElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"animateMotion\"",
      "type": "SVGAnimateMotionElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"animateTransform\"",
      "type": "SVGAnimateTransformElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"circle\"",
      "type": "SVGCircleElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"clipPath\"",
      "type": "SVGClipPathElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"defs\"",
      "type": "SVGDefsElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"desc\"",
      "type": "SVGDescElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"ellipse\"",
      "type": "SVGEllipseElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feBlend\"",
      "type": "SVGFEBlendElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feColorMatrix\"",
      "type": "SVGFEColorMatrixElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feComponentTransfer\"",
      "type": "SVGFEComponentTransferElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feComposite\"",
      "type": "SVGFECompositeElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feConvolveMatrix\"",
      "type": "SVGFEConvolveMatrixElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feDiffuseLighting\"",
      "type": "SVGFEDiffuseLightingElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feDisplacementMap\"",
      "type": "SVGFEDisplacementMapElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feDistantLight\"",
      "type": "SVGFEDistantLightElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feDropShadow\"",
      "type": "SVGFEDropShadowElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feFlood\"",
      "type": "SVGFEFloodElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feFuncA\"",
      "type": "SVGFEFuncAElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feFuncB\"",
      "type": "SVGFEFuncBElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feFuncG\"",
      "type": "SVGFEFuncGElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feFuncR\"",
      "type": "SVGFEFuncRElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feGaussianBlur\"",
      "type": "SVGFEGaussianBlurElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feImage\"",
      "type": "SVGFEImageElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feMerge\"",
      "type": "SVGFEMergeElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feMergeNode\"",
      "type": "SVGFEMergeNodeElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feMorphology\"",
      "type": "SVGFEMorphologyElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feOffset\"",
      "type": "SVGFEOffsetElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"fePointLight\"",
      "type": "SVGFEPointLightElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feSpecularLighting\"",
      "type": "SVGFESpecularLightingElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feSpotLight\"",
      "type": "SVGFESpotLightElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feTile\"",
      "type": "SVGFETileElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"feTurbulence\"",
      "type": "SVGFETurbulenceElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"filter\"",
      "type": "SVGFilterElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"foreignObject\"",
      "type": "SVGForeignObjectElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"g\"",
      "type": "SVGGElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"image\"",
      "type": "SVGImageElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"line\"",
      "type": "SVGLineElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"linearGradient\"",
      "type": "SVGLinearGradientElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"marker\"",
      "type": "SVGMarkerElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"mask\"",
      "type": "SVGMaskElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"metadata\"",
      "type": "SVGMetadataElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"mpath\"",
      "type": "SVGMPathElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"path\"",
      "type": "SVGPathElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"pattern\"",
      "type": "SVGPatternElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"polygon\"",
      "type": "SVGPolygonElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"polyline\"",
      "type": "SVGPolylineElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"radialGradient\"",
      "type": "SVGRadialGradientElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"rect\"",
      "type": "SVGRectElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"script\"",
      "type": "SVGScriptElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"set\"",
      "type": "SVGSetElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"stop\"",
      "type": "SVGStopElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"style\"",
      "type": "SVGStyleElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"svg\"",
      "type": "SVGSVGElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"switch\"",
      "type": "SVGSwitchElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"symbol\"",
      "type": "SVGSymbolElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"text\"",
      "type": "SVGTextElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"textPath\"",
      "type": "SVGTextPathElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"title\"",
      "type": "SVGTitleElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"tspan\"",
      "type": "SVGTSpanElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"use\"",
      "type": "SVGUseElement"
    },
    {
      "interface": "SVGElementTagNameMap",
      "kind": "property",
      "name": "\"view\"",
      "type": "SVGViewElement"
    }
  ],
  "MathMLElementTagNameMap": [
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"annotation\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"annotation-xml\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"maction\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"math\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"merror\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mfrac\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mi\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mmultiscripts\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mn\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mo\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mover\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mpadded\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mphantom\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mprescripts\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mroot\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mrow\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"ms\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mspace\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"msqrt\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mstyle\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"msub\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"msubsup\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"msup\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mtable\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mtd\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mtext\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"mtr\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"munder\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"munderover\"",
      "type": "MathMLElement"
    },
    {
      "interface": "MathMLElementTagNameMap",
      "kind": "property",
      "name": "\"semantics\"",
      "type": "MathMLElement"
    }
  ]
}